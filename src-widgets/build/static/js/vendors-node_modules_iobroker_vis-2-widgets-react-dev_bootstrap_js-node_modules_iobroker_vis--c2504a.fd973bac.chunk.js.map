{"version":3,"file":"static/js/vendors-node_modules_iobroker_vis-2-widgets-react-dev_bootstrap_js-node_modules_iobroker_vis--c2504a.fd973bac.chunk.js","mappings":"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","sources":["../node_modules/@iobroker/adapter-react-v5/GenericApp.js","../node_modules/@iobroker/vis-2-widgets-react-dev/bootstrap.jsx","../node_modules/@iobroker/vis-2-widgets-react-dev/theme.jsx","../node_modules/@iobroker/vis-2-widgets-react-dev/widgetDemoApp.jsx","../node_modules/@mui/material/colors/blue.js","../node_modules/@mui/material/colors/common.js","../node_modules/@mui/material/colors/green.js","../node_modules/@mui/material/colors/grey.js","../node_modules/@mui/material/colors/pink.js","../node_modules/@mui/material/colors/deepPurple.js","../node_modules/@mui/material/colors/indigo.js","../node_modules/@mui/material/colors/cyan.js","../node_modules/@mui/material/colors/teal.js","../node_modules/@mui/material/colors/lightGreen.js","../node_modules/@mui/material/colors/lime.js","../node_modules/@mui/material/colors/yellow.js","../node_modules/@mui/material/colors/amber.js","../node_modules/@mui/material/colors/deepOrange.js","../node_modules/@mui/material/colors/brown.js","../node_modules/@mui/material/colors/blueGrey.js","../node_modules/@mui/material/colors/lightBlue.js","../node_modules/@mui/material/colors/orange.js","../node_modules/@mui/material/colors/purple.js","../node_modules/@mui/material/colors/red.js","../node_modules/@sentry/src/integrations/functiontostring.ts","../node_modules/@sentry/src/integrations/inboundfilters.ts","../node_modules/@sentry/src/aggregate-errors.ts","../node_modules/@sentry/src/eventbuilder.ts","../node_modules/@sentry/src/integrations/linkederrors.ts","../node_modules/@sentry/src/index.ts","../node_modules/@sentry/src/dsn.ts","../node_modules/@sentry/src/envelope.ts","../node_modules/@sentry/src/metadata.ts","../node_modules/@sentry/src/integrations/metadata.ts","../node_modules/@sentry/src/semanticAttributes.ts","../node_modules/@sentry/src/error.ts","../node_modules/@sentry/src/api.ts","../node_modules/@sentry/src/metrics/utils.ts","../node_modules/@sentry/src/metrics/envelope.ts","../node_modules/@sentry/src/baseclient.ts","../node_modules/@sentry/src/instrument/globalError.ts","../node_modules/@sentry/src/instrument/globalUnhandledRejection.ts","../node_modules/@sentry/src/tracing/utils.ts","../node_modules/@sentry/src/tracing/errors.ts","../node_modules/@sentry/src/utils/handleCallbackErrors.ts","../node_modules/@sentry/src/utils/hasTracingEnabled.ts","../node_modules/@sentry/src/tracing/trace.ts","../node_modules/@sentry/src/metrics/metric-summary.ts","../node_modules/@sentry/src/tracing/spanstatus.ts","../node_modules/@sentry/src/tracing/span.ts","../node_modules/@sentry/src/tracing/transaction.ts","../node_modules/@sentry/src/tracing/idletransaction.ts","../node_modules/@sentry/src/tracing/sampling.ts","../node_modules/@sentry/src/tracing/hubextensions.ts","../node_modules/@sentry/src/promisebuffer.ts","../node_modules/@sentry/src/ratelimit.ts","../node_modules/@sentry/src/transports/base.ts","../node_modules/@sentry/src/transports/multiplexed.ts","../node_modules/@sentry/src/metrics/constants.ts","../node_modules/@sentry/src/metrics/instance.ts","../node_modules/@sentry/src/metrics/browser-aggregator.ts","../node_modules/@sentry/src/metrics/integration.ts","../node_modules/@sentry/src/metrics/exports.ts","../node_modules/@sentry/src/utils/parameterize.ts","../node_modules/@sentry/src/sdk.ts","../node_modules/@sentry/src/tracing/measurement.ts","../node_modules/src/helpers.ts","../node_modules/src/debug-build.ts","../node_modules/src/eventbuilder.ts","../node_modules/src/userfeedback.ts","../node_modules/src/client.ts","../node_modules/@sentry/src/utils/sdkMetadata.ts","../node_modules/@sentry/src/clientreport.ts","../node_modules/src/transports/utils.ts","../node_modules/src/transports/fetch.ts","../node_modules/src/transports/xhr.ts","../node_modules/src/stack-parsers.ts","../node_modules/@sentry/src/vendor/supportsHistory.ts","../node_modules/@sentry/src/instrument/history.ts","../node_modules/@sentry/src/instrument/dom.ts","../node_modules/src/integrations/breadcrumbs.ts","../node_modules/src/integrations/dedupe.ts","../node_modules/src/integrations/globalhandlers.ts","../node_modules/src/integrations/httpcontext.ts","../node_modules/src/integrations/linkederrors.ts","../node_modules/src/integrations/trycatch.ts","../node_modules/src/sdk.ts","../node_modules/@sentry/src/buildPolyfills/_optionalChain.ts","../node_modules/@sentry/src/isBrowser.ts","../node_modules/@sentry-internal/src/common/debug-build.ts","../node_modules/@sentry-internal/src/browser/web-vitals/lib/bindReporter.ts","../node_modules/@sentry-internal/src/browser/types.ts","../node_modules/@sentry-internal/src/browser/web-vitals/lib/getNavigationEntry.ts","../node_modules/@sentry-internal/src/browser/web-vitals/lib/getActivationStart.ts","../node_modules/@sentry-internal/src/browser/web-vitals/lib/initMetric.ts","../node_modules/@sentry-internal/src/browser/web-vitals/lib/generateUniqueID.ts","../node_modules/@sentry-internal/src/browser/web-vitals/lib/observe.ts","../node_modules/@sentry-internal/src/browser/web-vitals/lib/onHidden.ts","../node_modules/@sentry-internal/src/browser/web-vitals/getCLS.ts","../node_modules/@sentry-internal/src/browser/web-vitals/lib/getVisibilityWatcher.ts","../node_modules/@sentry-internal/src/browser/web-vitals/getFID.ts","../node_modules/@sentry-internal/src/browser/web-vitals/lib/polyfills/interactionCountPolyfill.ts","../node_modules/@sentry-internal/src/browser/web-vitals/getINP.ts","../node_modules/@sentry-internal/src/browser/web-vitals/getLCP.ts","../node_modules/@sentry-internal/src/browser/web-vitals/onTTFB.ts","../node_modules/@sentry-internal/src/browser/instrument.ts","../node_modules/src/constants.ts","../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb-snapshot/es/rrweb-snapshot.js","../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/utils.js","../node_modules/@sentry/src/buildPolyfills/_nullishCoalesce.ts","../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/types/dist/rrweb-types.js","../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/mutation.js","../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/error-handler.js","../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observer.js","../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/cross-origin-iframe-mirror.js","../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/iframe-manager.js","../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/shadow-dom-manager.js","../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/canvas-manager.js","../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/stylesheet-manager.js","../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/processed-node-manager.js","../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/index.js","../node_modules/src/types/rrweb.ts","../node_modules/src/util/timestamp.ts","../node_modules/src/coreHandlers/util/addBreadcrumbEvent.ts","../node_modules/src/coreHandlers/util/domUtils.ts","../node_modules/src/coreHandlers/util/onWindowOpen.ts","../node_modules/src/coreHandlers/handleClick.ts","../node_modules/src/util/createBreadcrumb.ts","../../node_modules/@sentry-internal/rrweb-snapshot/es/rrweb-snapshot.js","../node_modules/src/coreHandlers/util/getAttributesToRecord.ts","../node_modules/src/coreHandlers/handleDom.ts","../node_modules/src/coreHandlers/handleKeyboardEvent.ts","../node_modules/src/util/createPerformanceEntries.ts","../node_modules/src/coreHandlers/performanceObserver.ts","../replay-worker/build/npm/esm/worker.ts","../node_modules/src/util/log.ts","../node_modules/src/eventBuffer/error.ts","../node_modules/src/eventBuffer/EventBufferArray.ts","../node_modules/src/eventBuffer/WorkerHandler.ts","../node_modules/src/eventBuffer/EventBufferCompressionWorker.ts","../node_modules/src/eventBuffer/EventBufferProxy.ts","../node_modules/src/eventBuffer/index.ts","../replay-worker/build/npm/esm/index.js","../node_modules/src/util/hasSessionStorage.ts","../node_modules/src/session/clearSession.ts","../node_modules/src/util/isSampled.ts","../node_modules/src/session/Session.ts","../node_modules/src/session/saveSession.ts","../node_modules/src/session/createSession.ts","../node_modules/src/util/isExpired.ts","../node_modules/src/util/isSessionExpired.ts","../node_modules/src/session/shouldRefreshSession.ts","../node_modules/src/session/loadOrCreateSession.ts","../node_modules/src/session/fetchSession.ts","../node_modules/src/util/addEvent.ts","../node_modules/src/util/eventUtils.ts","../node_modules/src/coreHandlers/handleAfterSendEvent.ts","../node_modules/src/coreHandlers/handleBeforeSendEvent.ts","../node_modules/src/coreHandlers/handleGlobalEvent.ts","../node_modules/src/coreHandlers/util/addFeedbackBreadcrumb.ts","../node_modules/src/util/isRrwebError.ts","../node_modules/src/coreHandlers/util/shouldSampleForBufferEvent.ts","../node_modules/src/util/createPerformanceSpans.ts","../node_modules/src/coreHandlers/handleHistory.ts","../node_modules/src/coreHandlers/util/addNetworkBreadcrumb.ts","../node_modules/src/util/shouldFilterRequest.ts","../node_modules/src/coreHandlers/handleXhr.ts","../node_modules/src/coreHandlers/util/networkUtils.ts","../node_modules/src/coreHandlers/util/fetchUtils.ts","../node_modules/src/coreHandlers/util/xhrUtils.ts","../node_modules/src/coreHandlers/handleNetworkBreadcrumbs.ts","../node_modules/src/coreHandlers/handleFetch.ts","../node_modules/src/coreHandlers/handleScope.ts","../node_modules/src/util/addGlobalListeners.ts","../node_modules/src/util/addMemoryEntry.ts","../node_modules/src/util/handleRecordingEmit.ts","../node_modules/src/util/sendReplayRequest.ts","../node_modules/src/util/prepareRecordingData.ts","../node_modules/src/util/prepareReplayEvent.ts","../node_modules/src/util/createReplayEnvelope.ts","../node_modules/src/util/sendReplay.ts","../node_modules/src/util/throttle.ts","../node_modules/src/replay.ts","../node_modules/src/util/debounce.ts","../node_modules/src/util/getPrivacyOptions.ts","../node_modules/src/integration.ts","../node_modules/src/util/maskAttribute.ts","../node_modules/src/util/getReplay.ts","../../node_modules/@sentry-internal/rrweb/es/rrweb/ext/base64-arraybuffer/dist/base64-arraybuffer.es5.js","../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/serialize-args.js","../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/canvas.js","../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/webgl.js","../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/2d.js","../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb-worker/es/rrweb-worker/index.js","../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb-worker/es/rrweb-worker/image-bitmap-data-url-worker.js","../node_modules/src/canvas.ts","../node_modules/src/util/sendFeedbackRequest.ts","../node_modules/src/util/prepareFeedbackEvent.ts","../node_modules/src/sendFeedback.ts","../node_modules/src/util/mergeOptions.ts","../node_modules/src/widget/Main.css.ts","../node_modules/src/widget/createShadowHost.ts","../node_modules/src/widget/Dialog.css.ts","../node_modules/src/util/handleFeedbackSubmit.ts","../node_modules/src/util/setAttributesNS.ts","../node_modules/src/widget/Icon.ts","../node_modules/src/widget/util/createElement.ts","../node_modules/src/widget/Actor.ts","../node_modules/src/widget/Form.ts","../node_modules/src/widget/SubmitButton.ts","../node_modules/src/widget/Logo.ts","../node_modules/src/widget/Dialog.ts","../node_modules/src/widget/SuccessIcon.ts","../node_modules/src/widget/SuccessMessage.ts","../node_modules/src/widget/createWidget.ts","../node_modules/src/widget/Actor.css.ts","../node_modules/@sentry-internal/src/browser/backgroundtab.ts","../node_modules/@sentry/src/span.ts","../node_modules/@sentry-internal/src/browser/metrics/utils.ts","../node_modules/@sentry-internal/src/browser/metrics/index.ts","../node_modules/@sentry-internal/src/common/fetch.ts","../node_modules/@sentry-internal/src/browser/request.ts","../node_modules/@sentry-internal/src/browser/browsertracing.ts","../node_modules/@sentry-internal/src/browser/router.ts","../node_modules/@sentry-internal/src/browser/browserTracingIntegration.ts","../node_modules/@sentry/src/transports/offline.ts","../node_modules/src/transports/offline.ts","../node_modules/src/profiling/utils.ts","../node_modules/src/profiling/hubextensions.ts","../node_modules/src/profiling/integration.ts","../node_modules/src/index.ts","../node_modules/@sentry/src/constants.ts","../node_modules/@sentry/src/debug-build.ts","../node_modules/@sentry/src/eventProcessors.ts","../node_modules/@sentry/src/exports.ts","../node_modules/@sentry/src/hub.ts","../node_modules/@sentry/src/integration.ts","../node_modules/@sentry/src/scope.ts","../node_modules/@sentry/src/session.ts","../node_modules/@sentry/src/tracing/dynamicSamplingContext.ts","../node_modules/@sentry/src/utils/applyScopeDataToEvent.ts","../node_modules/@sentry/src/utils/getRootSpan.ts","../node_modules/@sentry/src/utils/isSentryRequestUrl.ts","../node_modules/@sentry/src/utils/prepareEvent.ts","../node_modules/@sentry/src/utils/spanUtils.ts","../node_modules/@sentry/src/version.ts","../node_modules/src/captureconsole.ts","../node_modules/src/contextlines.ts","../node_modules/src/debug.ts","../node_modules/src/dedupe.ts","../node_modules/src/extraerrordata.ts","../node_modules/src/httpclient.ts","../node_modules/src/offline.ts","../node_modules/src/transaction.ts","../node_modules/src/reportingobserver.ts","../node_modules/@sentry/src/path.ts","../node_modules/src/rewriteframes.ts","../node_modules/src/sessiontiming.ts","../node_modules/@sentry/src/baggage.ts","../node_modules/@sentry/src/browser.ts","../node_modules/@sentry/src/env.ts","../node_modules/@sentry/src/instrument/_handlers.ts","../node_modules/@sentry/src/instrument/console.ts","../node_modules/@sentry/src/instrument/fetch.ts","../node_modules/@sentry/src/instrument/xhr.ts","../node_modules/@sentry/src/is.ts","../node_modules/@sentry/src/logger.ts","../node_modules/@sentry/src/misc.ts","../node_modules/@sentry/src/node.ts","../node_modules/@sentry/src/normalize.ts","../node_modules/@sentry/src/memo.ts","../node_modules/@sentry/src/object.ts","../node_modules/@sentry/src/severity.ts","../node_modules/@sentry/src/stacktrace.ts","../node_modules/@sentry/src/string.ts","../node_modules/@sentry/src/supports.ts","../node_modules/@sentry/src/syncpromise.ts","../node_modules/@sentry/src/time.ts","../node_modules/@sentry/src/tracing.ts","../node_modules/@sentry/src/url.ts","../node_modules/@sentry/src/worldwide.ts","../node_modules/localforage/dist/localforage.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/ThemeProvider.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/jsx-runtime.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/classnames/index.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright 2018-2023 Denis Haev (bluefox) <dogafox@gmail.com>\n *\n * MIT License\n *\n **/\nconst react_1 = __importDefault(require(\"react\"));\nconst socket_client_1 = require(\"@iobroker/socket-client\");\nconst Sentry = __importStar(require(\"@sentry/browser\"));\nconst SentryIntegrations = __importStar(require(\"@sentry/integrations\"));\nconst material_1 = require(\"@mui/material\");\nconst icons_material_1 = require(\"@mui/icons-material\");\nconst Prompt_1 = __importDefault(require(\"./Prompt\"));\nconst Theme_1 = __importDefault(require(\"./Theme\"));\nconst Loader_1 = __importDefault(require(\"./Components/Loader\"));\nconst Router_1 = __importDefault(require(\"./Components/Router\"));\nconst Utils_1 = __importDefault(require(\"./Components/Utils\"));\nconst SaveCloseButtons_1 = __importDefault(require(\"./Components/SaveCloseButtons\"));\nconst Confirm_1 = __importDefault(require(\"./Dialogs/Confirm\"));\nconst i18n_1 = __importDefault(require(\"./i18n\"));\nconst Error_1 = __importDefault(require(\"./Dialogs/Error\"));\n// import './index.css';\nconst cssStyle = `\nhtml {\n    height: 100%;\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n}\n\n/* scrollbar */\n::-webkit-scrollbar-track {\n    background-color: #ccc;\n    border-radius: 5px;\n}\n\n::-webkit-scrollbar {\n    width: 5px;\n    height: 5px;\n    background-color: #ccc;\n}\n\n::-webkit-scrollbar-thumb {\n    background-color: #575757;\n    border-radius: 5px;\n}\n\n#root {\n    height: 100%;\n}\n\n.App {\n    height: 100%;\n}\n\n@keyframes glow {\n    from {\n        background-color: initial;\n    }\n    to {\n        background-color: #58c458;\n    }\n}\n`;\nclass GenericApp extends Router_1.default {\n    /**\n     * @param {import('./types').GenericAppProps} props\n     * @param {import('./types').GenericAppSettings | undefined} settings\n     */\n    constructor(props, settings) {\n        var _a, _b;\n        const ConnectionClass = (props.Connection || (settings === null || settings === void 0 ? void 0 : settings.Connection) || socket_client_1.Connection);\n        // const ConnectionClass = props.Connection === 'admin' || settings.Connection = 'admin' ? AdminConnection : (props.Connection || settings.Connection || Connection);\n        if (!window.document.getElementById('generic-app-iobroker-component')) {\n            const style = window.document.createElement('style');\n            style.setAttribute('id', 'generic-app-iobroker-component');\n            style.innerHTML = cssStyle;\n            window.document.head.appendChild(style);\n        }\n        // Remove `!Connection.isWeb() && window.adapterName !== 'material'` when iobroker.socket will support native ws\n        if (!GenericApp.isWeb() && window.io && window.location.port === '3000') {\n            try {\n                const io = new window.SocketClient();\n                delete window.io;\n                window.io = io;\n            }\n            catch (e) {\n                // ignore\n            }\n        }\n        super(props);\n        this.common = null;\n        this.sentryStarted = false;\n        this.sentryInited = false;\n        this.resizeTimer = null;\n        this.onSystemConfigChanged = (id, obj) => {\n            var _a, _b;\n            if (obj && id === 'system.config') {\n                if (this.socket.systemLang !== (obj === null || obj === void 0 ? void 0 : obj.common.language)) {\n                    this.socket.systemLang = (obj === null || obj === void 0 ? void 0 : obj.common.language) || 'en';\n                    i18n_1.default.setLanguage(this.socket.systemLang);\n                }\n                if (((_a = this._systemConfig) === null || _a === void 0 ? void 0 : _a.expertMode) !== !!((_b = obj === null || obj === void 0 ? void 0 : obj.common) === null || _b === void 0 ? void 0 : _b.expertMode)) {\n                    this._systemConfig = (obj === null || obj === void 0 ? void 0 : obj.common) || {};\n                    this.setState({ expertMode: this.getExpertMode() });\n                }\n                else {\n                    this._systemConfig = (obj === null || obj === void 0 ? void 0 : obj.common) || {};\n                }\n            }\n        };\n        this.onReceiveMessage = (message) => {\n            if (message === null || message === void 0 ? void 0 : message.data) {\n                if (message.data === 'updateTheme') {\n                    const newThemeName = Utils_1.default.getThemeName();\n                    Utils_1.default.setThemeName(Utils_1.default.getThemeName());\n                    const newTheme = this.createTheme(newThemeName);\n                    this.setState({\n                        theme: newTheme,\n                        themeName: this.getThemeName(newTheme),\n                        themeType: this.getThemeType(newTheme),\n                    }, () => {\n                        this.props.onThemeChange && this.props.onThemeChange(newThemeName);\n                        this.onThemeChanged && this.onThemeChanged(newThemeName);\n                    });\n                }\n                else if (message.data === 'updateExpertMode') {\n                    this.onToggleExpertMode && this.onToggleExpertMode(this.getExpertMode());\n                }\n                else if (message.data !== 'chartReady') { // if not \"echart ready\" message\n                    console.debug(`Received unknown message: \"${JSON.stringify(message.data)}\". May be it will be processed later`);\n                }\n            }\n        };\n        /**\n         * @private\n         */\n        this.onResize = () => {\n            this.resizeTimer && clearTimeout(this.resizeTimer);\n            this.resizeTimer = setTimeout(() => {\n                this.resizeTimer = null;\n                this.setState({ width: GenericApp.getWidth() });\n            }, 200);\n        };\n        (0, Prompt_1.default)();\n        const query = (window.location.search || '').replace(/^\\?/, '').replace(/#.*$/, '');\n        const args = {};\n        query.trim().split('&').filter(t => t.trim()).forEach(b => {\n            const parts = b.split('=');\n            args[parts[0]] = parts.length === 2 ? parts[1] : true;\n            if (args[parts[0]] === 'true') {\n                args[parts[0]] = true;\n            }\n            else if (args[parts[0]] === 'false') {\n                args[parts[0]] = false;\n            }\n        });\n        // extract instance from URL\n        this.instance = (_b = (_a = settings === null || settings === void 0 ? void 0 : settings.instance) !== null && _a !== void 0 ? _a : props.instance) !== null && _b !== void 0 ? _b : (args.instance !== undefined ? parseInt(args.instance, 10) || 0 : (parseInt(window.location.search.slice(1), 10) || 0));\n        // extract adapter name from URL\n        const tmp = window.location.pathname.split('/');\n        this.adapterName = (settings === null || settings === void 0 ? void 0 : settings.adapterName) || props.adapterName || window.adapterName || tmp[tmp.length - 2] || 'iot';\n        this.instanceId = `system.adapter.${this.adapterName}.${this.instance}`;\n        this.newReact = args.newReact === true; // it is admin5\n        const location = Router_1.default.getLocation();\n        location.tab = location.tab || (window._localStorage || window.localStorage).getItem(`${this.adapterName}-adapter`) || '';\n        const themeInstance = this.createTheme();\n        this.state = Object.assign(Object.assign({}, (this.state || {})), { selectedTab: (window._localStorage || window.localStorage).getItem(`${this.adapterName}-adapter`) || '', selectedTabNum: -1, native: {}, errorText: '', changed: false, connected: false, loaded: false, isConfigurationError: '', expertMode: false, toast: '', theme: themeInstance, themeName: this.getThemeName(themeInstance), themeType: this.getThemeType(themeInstance), bottomButtons: (settings && settings.bottomButtons) === false ? false : ((props === null || props === void 0 ? void 0 : props.bottomButtons) !== false), width: GenericApp.getWidth(), confirmClose: false, _alert: false, _alertType: 'info', _alertMessage: '' });\n        // init translations\n        const translations = {\n            en: require('./i18n/en.json'),\n            de: require('./i18n/de.json'),\n            ru: require('./i18n/ru.json'),\n            pt: require('./i18n/pt.json'),\n            nl: require('./i18n/nl.json'),\n            fr: require('./i18n/fr.json'),\n            it: require('./i18n/it.json'),\n            es: require('./i18n/es.json'),\n            pl: require('./i18n/pl.json'),\n            uk: require('./i18n/uk.json'),\n            'zh-cn': require('./i18n/zh-cn.json'),\n        };\n        // merge together\n        if (settings && settings.translations) {\n            Object.keys(settings.translations).forEach(lang => {\n                if (settings.translations) {\n                    translations[lang] = Object.assign(translations[lang], settings.translations[lang] || {});\n                }\n            });\n        }\n        else if (props.translations) {\n            Object.keys(props.translations).forEach(lang => {\n                if (props.translations) {\n                    translations[lang] = Object.assign(translations[lang], props.translations[lang] || {});\n                }\n            });\n        }\n        i18n_1.default.setTranslations(translations);\n        this.savedNative = {}; // to detect if the config changed\n        this.encryptedFields = props.encryptedFields || (settings === null || settings === void 0 ? void 0 : settings.encryptedFields) || [];\n        this.sentryDSN = (settings && settings.sentryDSN) || props.sentryDSN;\n        if (window.socketUrl) {\n            if (window.socketUrl.startsWith(':')) {\n                window.socketUrl = `${window.location.protocol}//${window.location.hostname}${window.socketUrl}`;\n            }\n            else if (!window.socketUrl.startsWith('http://') && !window.socketUrl.startsWith('https://')) {\n                window.socketUrl = `${window.location.protocol}//${window.socketUrl}`;\n            }\n        }\n        this.alertDialogRendered = false;\n        window.oldAlert = window.alert;\n        window.alert = message => {\n            if (!this.alertDialogRendered) {\n                window.oldAlert(message);\n                return;\n            }\n            if (message && message.toString().toLowerCase().includes('error')) {\n                console.error(message);\n                this.showAlert(message.toString(), 'error');\n            }\n            else {\n                console.log(message);\n                this.showAlert(message.toString(), 'info');\n            }\n        };\n        // @ts-expect-error either make props in ConnectionProps required or the constructor needs to accept than as they are (means adapt socket-client)\n        this.socket = new ConnectionClass(Object.assign(Object.assign({}, ((props === null || props === void 0 ? void 0 : props.socket) || (settings === null || settings === void 0 ? void 0 : settings.socket))), { name: this.adapterName, doNotLoadAllObjects: settings === null || settings === void 0 ? void 0 : settings.doNotLoadAllObjects, onProgress: (progress) => {\n                if (progress === socket_client_1.PROGRESS.CONNECTING) {\n                    this.setState({ connected: false });\n                }\n                else if (progress === socket_client_1.PROGRESS.READY) {\n                    this.setState({ connected: true });\n                }\n                else {\n                    this.setState({ connected: true });\n                }\n            }, onReady: ( /* objects, scripts */) => {\n                i18n_1.default.setLanguage(this.socket.systemLang);\n                // subscribe because of language and expert mode\n                this.socket.subscribeObject('system.config', this.onSystemConfigChanged)\n                    .then(() => this.getSystemConfig())\n                    .then(obj => {\n                    this._secret = (typeof obj !== 'undefined' && obj.native && obj.native.secret) || 'Zgfr56gFe87jJOM';\n                    this._systemConfig = (obj === null || obj === void 0 ? void 0 : obj.common) || {};\n                    return this.socket.getObject(this.instanceId);\n                })\n                    .then(async (obj) => {\n                    var _a, _b;\n                    let waitPromise;\n                    const instanceObj = obj;\n                    const sentryPluginEnabled = (_a = (await this.socket.getState(`${this.instanceId}.plugins.sentry.enabled`))) === null || _a === void 0 ? void 0 : _a.val;\n                    const sentryEnabled = sentryPluginEnabled !== false &&\n                        ((_b = this._systemConfig) === null || _b === void 0 ? void 0 : _b.diag) !== 'none' &&\n                        (instanceObj === null || instanceObj === void 0 ? void 0 : instanceObj.common) &&\n                        instanceObj.common.name &&\n                        instanceObj.common.version &&\n                        // @ts-expect-error will be extended in js-controller TODO: this is redundant to state `${this.instanceId}.plugins.sentry.enabled`, remove this in future when admin sets the state correctly\n                        !instanceObj.common.disableDataReporting &&\n                        window.location.host !== 'localhost:3000';\n                    // activate sentry plugin\n                    if (!this.sentryStarted && this.sentryDSN && sentryEnabled) {\n                        this.sentryStarted = true;\n                        Sentry.init({\n                            dsn: this.sentryDSN,\n                            release: `iobroker.${instanceObj.common.name}@${instanceObj.common.version}`,\n                            integrations: [\n                                new SentryIntegrations.Dedupe(),\n                            ],\n                        });\n                        console.log('Sentry initialized');\n                    }\n                    // read UUID and init sentry with it.\n                    // for backward compatibility it will be processed separately from above logic: some adapters could still have this.sentryDSN as undefined\n                    if (!this.sentryInited && sentryEnabled) {\n                        this.sentryInited = true;\n                        waitPromise = this.socket.getObject('system.meta.uuid')\n                            .then(uuidObj => {\n                            if (uuidObj && uuidObj.native && uuidObj.native.uuid) {\n                                Sentry.configureScope(scope => scope.setUser({ id: uuidObj.native.uuid }));\n                            }\n                        });\n                    }\n                    waitPromise = waitPromise || Promise.resolve();\n                    waitPromise\n                        .then(() => {\n                        if (instanceObj) {\n                            this.common = instanceObj === null || instanceObj === void 0 ? void 0 : instanceObj.common;\n                            this.onPrepareLoad(instanceObj.native, instanceObj.encryptedNative); // decode all secrets\n                            this.savedNative = JSON.parse(JSON.stringify(instanceObj.native));\n                            this.setState({ native: instanceObj.native, loaded: true, expertMode: this.getExpertMode() }, () => this.onConnectionReady && this.onConnectionReady());\n                        }\n                        else {\n                            console.warn('Cannot load instance settings');\n                            this.setState({\n                                native: {},\n                                loaded: true,\n                                expertMode: this.getExpertMode(),\n                            }, () => this.onConnectionReady && this.onConnectionReady());\n                        }\n                    });\n                })\n                    .catch(e => window.alert(`Cannot settings: ${e}`));\n            }, onError: (err) => {\n                console.error(err);\n                this.showError(err);\n            } }));\n    }\n    /**\n     * Checks if this connection is running in a web adapter and not in an admin.\n     * @returns True if running in a web adapter or in a socketio adapter.\n     */\n    static isWeb() {\n        return window.socketUrl !== undefined;\n    }\n    showAlert(message, type) {\n        if (type !== 'error' && type !== 'warning' && type !== 'info' && type !== 'success') {\n            type = 'info';\n        }\n        this.setState({\n            _alert: true,\n            _alertType: type,\n            _alertMessage: message,\n        });\n    }\n    renderAlertSnackbar() {\n        this.alertDialogRendered = true;\n        return react_1.default.createElement(material_1.Snackbar, { style: this.state._alertType === 'error' ?\n                { backgroundColor: '#f44336' } :\n                (this.state._alertType === 'success' ? { backgroundColor: '#4caf50' } : undefined), open: this.state._alert, autoHideDuration: 6000, onClose: (_e, reason) => reason !== 'clickaway' && this.setState({ _alert: false }), message: this.state._alertMessage });\n    }\n    /**\n     * Called immediately after a component is mounted. Setting state here will trigger re-rendering.\n     */\n    componentDidMount() {\n        window.addEventListener('resize', this.onResize, true);\n        window.addEventListener('message', this.onReceiveMessage, false);\n        super.componentDidMount();\n    }\n    /**\n     * Called immediately before a component is destroyed.\n     */\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onResize, true);\n        window.removeEventListener('message', this.onReceiveMessage, false);\n        super.componentWillUnmount();\n    }\n    /**\n     * Gets the width depending on the window inner width.\n     * @returns {import('./types').Width}\n     */\n    static getWidth() {\n        /**\n         * innerWidth |xs      sm      md      lg      xl\n         *            |-------|-------|-------|-------|------>\n         * width      |  xs   |  sm   |  md   |  lg   |  xl\n         */\n        const SIZES = {\n            xs: 0,\n            sm: 600,\n            md: 960,\n            lg: 1280,\n            xl: 1920,\n        };\n        const width = window.innerWidth;\n        const keys = Object.keys(SIZES).reverse();\n        const widthComputed = keys.find(key => width >= SIZES[key]);\n        return widthComputed || 'xs';\n    }\n    /**\n     * Get a theme\n     * @param name Theme name\n     */\n    createTheme(name) {\n        return (0, Theme_1.default)(Utils_1.default.getThemeName(name));\n    }\n    /**\n     * Get the theme name\n     */\n    getThemeName(currentTheme) {\n        return currentTheme.name;\n    }\n    /**\n     * Get the theme type\n     */\n    getThemeType(currentTheme) {\n        return currentTheme.palette.mode;\n    }\n    onThemeChanged(newThemeName) {\n    }\n    onToggleExpertMode(expertMode) {\n    }\n    /**\n     * Changes the current theme\n     * @param newThemeName Theme name\n     **/\n    toggleTheme(newThemeName) {\n        const themeName = this.state.themeName;\n        // dark => blue => colored => light => dark\n        newThemeName = newThemeName || (themeName === 'dark' ? 'blue' :\n            (themeName === 'blue' ? 'colored' :\n                (themeName === 'colored' ? 'light' : 'dark')));\n        if (newThemeName !== themeName) {\n            Utils_1.default.setThemeName(newThemeName);\n            const newTheme = this.createTheme(newThemeName);\n            this.setState({\n                theme: newTheme,\n                themeName: this.getThemeName(newTheme),\n                themeType: this.getThemeType(newTheme),\n            }, () => {\n                this.props.onThemeChange && this.props.onThemeChange(newThemeName || 'light');\n                this.onThemeChanged && this.onThemeChanged(newThemeName || 'light');\n            });\n        }\n    }\n    /**\n     * Gets the system configuration.\n     * @returns {Promise<ioBroker.OtherObject>}\n     */\n    getSystemConfig() {\n        return this.socket.getSystemConfig();\n    }\n    /**\n     * Get current expert mode\n     * @returns {boolean}\n     */\n    getExpertMode() {\n        var _a;\n        return window.sessionStorage.getItem('App.expertMode') === 'true' || !!((_a = this._systemConfig) === null || _a === void 0 ? void 0 : _a.expertMode);\n    }\n    /**\n     * Gets called when the socket.io connection is ready.\n     * You can overload this function to execute own commands.\n     */\n    onConnectionReady() {\n    }\n    /**\n     * Encrypts a string.\n     */\n    encrypt(value) {\n        let result = '';\n        if (this._secret) {\n            for (let i = 0; i < value.length; i++) {\n                result += String.fromCharCode(this._secret[i % this._secret.length].charCodeAt(0) ^ value.charCodeAt(i));\n            }\n        }\n        return result;\n    }\n    /**\n     * Decrypts a string.\n     */\n    decrypt(value) {\n        let result = '';\n        if (this._secret) {\n            for (let i = 0; i < value.length; i++) {\n                result += String.fromCharCode(this._secret[i % this._secret.length].charCodeAt(0) ^ value.charCodeAt(i));\n            }\n        }\n        return result;\n    }\n    /**\n     * Gets called when the navigation hash changes.\n     * You may override this if needed.\n     */\n    onHashChanged() {\n        const location = Router_1.default.getLocation();\n        if (location.tab !== this.state.selectedTab) {\n            this.selectTab(location.tab);\n        }\n    }\n    /**\n     * Selects the given tab.\n     */\n    selectTab(tab, index) {\n        (window._localStorage || window.localStorage).setItem(`${this.adapterName}-adapter`, tab);\n        this.setState({ selectedTab: tab, selectedTabNum: index });\n    }\n    /**\n     * Gets called before the settings are saved.\n     * You may override this if needed.\n     */\n    onPrepareSave(settings) {\n        // here you can encode values\n        this.encryptedFields && this.encryptedFields.forEach(attr => {\n            if (settings[attr]) {\n                settings[attr] = this.encrypt(settings[attr]);\n            }\n        });\n        return true;\n    }\n    /**\n     * Gets called after the settings are loaded.\n     * You may override this if needed.\n     * @param encryptedNative optional list of fields to be decrypted\n     */\n    onPrepareLoad(settings, encryptedNative) {\n        // here you can encode values\n        this.encryptedFields && this.encryptedFields.forEach(attr => {\n            if (settings[attr]) {\n                settings[attr] = this.decrypt(settings[attr]);\n            }\n        });\n        encryptedNative && encryptedNative.forEach(attr => {\n            this.encryptedFields = this.encryptedFields || [];\n            !this.encryptedFields.includes(attr) && this.encryptedFields.push(attr);\n            if (settings[attr]) {\n                settings[attr] = this.decrypt(settings[attr]);\n            }\n        });\n    }\n    /**\n     * Gets the extendable instances.\n     * @returns {Promise<any[]>}\n     */\n    async getExtendableInstances() {\n        try {\n            const instances = await this.socket.getObjectViewSystem('instance', 'system.adapter.', 'system.adapter.\\u9999');\n            return Object.values(instances).filter(instance => { var _a; return !!((_a = instance === null || instance === void 0 ? void 0 : instance.common) === null || _a === void 0 ? void 0 : _a.webExtendable); });\n        }\n        catch (e) {\n            return [];\n        }\n    }\n    /**\n     * Gets the IP addresses of the given host.\n     */\n    async getIpAddresses(host) {\n        var _a;\n        const ips = await this.socket.getHostByIp(host || ((_a = this.common) === null || _a === void 0 ? void 0 : _a.host) || '');\n        // translate names\n        const ip4_0 = ips.find(ip => ip.address === '0.0.0.0');\n        if (ip4_0) {\n            ip4_0.name = `[IPv4] 0.0.0.0 - ${i18n_1.default.t('ra_Listen on all IPs')}`;\n        }\n        const ip6_0 = ips.find(ip => ip.address === '::');\n        if (ip6_0) {\n            ip6_0.name = `[IPv4] :: - ${i18n_1.default.t('ra_Listen on all IPs')}`;\n        }\n        return ips;\n    }\n    /**\n     * Saves the settings to the server.\n     * @param isClose True if the user is closing the dialog.\n     */\n    onSave(isClose) {\n        let oldObj;\n        if (this.state.isConfigurationError) {\n            this.setState({ errorText: this.state.isConfigurationError });\n            return;\n        }\n        this.socket.getObject(this.instanceId)\n            .then(_oldObj => {\n            oldObj = (_oldObj || {});\n            for (const a in this.state.native) {\n                if (Object.prototype.hasOwnProperty.call(this.state.native, a)) {\n                    if (this.state.native[a] === null) {\n                        oldObj.native[a] = null;\n                    }\n                    else if (this.state.native[a] !== undefined) {\n                        oldObj.native[a] = JSON.parse(JSON.stringify(this.state.native[a]));\n                    }\n                    else {\n                        delete oldObj.native[a];\n                    }\n                }\n            }\n            if (this.state.common) {\n                for (const b in this.state.common) {\n                    if (this.state.common[b] === null) {\n                        oldObj.common[b] = null;\n                    }\n                    else if (this.state.common[b] !== undefined) {\n                        oldObj.common[b] = JSON.parse(JSON.stringify(this.state.common[b]));\n                    }\n                    else {\n                        delete oldObj.common[b];\n                    }\n                }\n            }\n            if (this.onPrepareSave(oldObj.native) !== false) {\n                return this.socket.setObject(this.instanceId, oldObj);\n            }\n            return Promise.reject(new Error('Invalid configuration'));\n        })\n            .then(() => {\n            this.savedNative = oldObj.native;\n            globalThis.changed = false;\n            try {\n                window.parent.postMessage('nochange', '*');\n            }\n            catch (e) {\n                // ignore\n            }\n            this.setState({ changed: false });\n            isClose && GenericApp.onClose();\n        })\n            .catch(e => console.error(`Cannot save configuration: ${e}`));\n    }\n    /**\n     * Renders the toast.\n     */\n    renderToast() {\n        var _a;\n        if (!this.state.toast) {\n            return null;\n        }\n        return react_1.default.createElement(material_1.Snackbar, { anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'left',\n            }, open: !0, autoHideDuration: 6000, onClose: () => this.setState({ toast: '' }), ContentProps: { 'aria-describedby': 'message-id' }, message: react_1.default.createElement(\"span\", { id: \"message-id\" }, this.state.toast), action: [\n                react_1.default.createElement(material_1.IconButton, { key: \"close\", \"aria-label\": \"Close\", color: \"inherit\", className: (_a = this.props.classes) === null || _a === void 0 ? void 0 : _a.close, onClick: () => this.setState({ toast: '' }), size: \"large\" },\n                    react_1.default.createElement(icons_material_1.Close, null)),\n            ] });\n    }\n    /**\n     * Closes the dialog.\n     * @private\n     */\n    static onClose() {\n        if (typeof window.parent !== 'undefined' && window.parent) {\n            try {\n                if (window.parent.$iframeDialog && typeof window.parent.$iframeDialog.close === 'function') {\n                    window.parent.$iframeDialog.close();\n                }\n                else {\n                    window.parent.postMessage('close', '*');\n                }\n            }\n            catch (e) {\n                window.parent.postMessage('close', '*');\n            }\n        }\n    }\n    /**\n     * Renders the error dialog.\n     * @returns {JSX.Element | null} The JSX element.\n     */\n    renderError() {\n        if (!this.state.errorText) {\n            return null;\n        }\n        return react_1.default.createElement(Error_1.default, { text: this.state.errorText, onClose: () => this.setState({ errorText: '' }) });\n    }\n    /**\n     * Checks if the configuration has changed.\n     * @param {Record<string, any>} [native] the new state\n     */\n    getIsChanged(native) {\n        native = native || this.state.native;\n        const isChanged = JSON.stringify(native) !== JSON.stringify(this.savedNative);\n        globalThis.changed = isChanged;\n        return isChanged;\n    }\n    /**\n     * Gets called when loading the configuration.\n     * @param newNative The new configuration object.\n     */\n    onLoadConfig(newNative) {\n        if (JSON.stringify(newNative) !== JSON.stringify(this.state.native)) {\n            this.setState({ native: newNative, changed: this.getIsChanged(newNative) });\n        }\n    }\n    /**\n     * Sets the configuration error.\n     */\n    setConfigurationError(errorText) {\n        if (this.state.isConfigurationError !== errorText) {\n            this.setState({ isConfigurationError: errorText });\n        }\n    }\n    /**\n     * Renders the save and close buttons.\n     * @returns {JSX.Element | undefined} The JSX element.\n     */\n    renderSaveCloseButtons() {\n        if (!this.state.confirmClose && !this.state.bottomButtons) {\n            return null;\n        }\n        return react_1.default.createElement(react_1.default.Fragment, null,\n            this.state.bottomButtons ? react_1.default.createElement(SaveCloseButtons_1.default, { theme: this.state.theme, newReact: this.newReact, noTextOnButtons: this.state.width === 'xs' || this.state.width === 'sm' || this.state.width === 'md', changed: this.state.changed, onSave: isClose => this.onSave(isClose), onClose: () => {\n                    if (this.state.changed) {\n                        this.setState({ confirmClose: true });\n                    }\n                    else {\n                        GenericApp.onClose();\n                    }\n                } }) : null,\n            this.state.confirmClose ? react_1.default.createElement(Confirm_1.default, { title: i18n_1.default.t('ra_Please confirm'), text: i18n_1.default.t('ra_Some data are not stored. Discard?'), ok: i18n_1.default.t('ra_Discard'), cancel: i18n_1.default.t('ra_Cancel'), onClose: isYes => this.setState({ confirmClose: false }, () => isYes && GenericApp.onClose()) }) : null);\n    }\n    /**\n     * @private\n     */\n    _updateNativeValue(obj, attrs, value) {\n        if (typeof attrs !== 'object') {\n            attrs = attrs.split('.');\n        }\n        const attr = attrs.shift() || '';\n        if (!attrs.length) {\n            if (value && typeof value === 'object') {\n                if (JSON.stringify(obj[attr]) !== JSON.stringify(value)) {\n                    obj[attr] = value;\n                    return true;\n                }\n                return false;\n            }\n            if (obj[attr] !== value) {\n                obj[attr] = value;\n                return true;\n            }\n            return false;\n        }\n        obj[attr] = obj[attr] || {};\n        if (typeof obj[attr] !== 'object') {\n            throw new Error(`attribute ${attr} is no object, but ${typeof obj[attr]}`);\n        }\n        return this._updateNativeValue(obj[attr], attrs, value);\n    }\n    /**\n     * Update the native value\n     * @param attr The attribute name with dots as delimiter.\n     * @param value The new value.\n     * @param cb Callback which will be called upon completion.\n     */\n    updateNativeValue(attr, value, cb) {\n        const native = JSON.parse(JSON.stringify(this.state.native));\n        if (this._updateNativeValue(native, attr, value)) {\n            const changed = this.getIsChanged(native);\n            if (changed !== this.state.changed) {\n                try {\n                    window.parent.postMessage(changed ? 'change' : 'nochange', '*');\n                }\n                catch (e) {\n                    // ignore\n                }\n            }\n            this.setState({ native, changed }, cb);\n        }\n    }\n    /**\n     * Set the error text to be shown.\n     */\n    showError(text) {\n        this.setState({ errorText: text });\n    }\n    /**\n     * Sets the toast to be shown.\n     * @param {string} toast\n     */\n    showToast(toast) {\n        this.setState({ toast });\n    }\n    /**\n     * Renders helper dialogs\n     * @returns {JSX.Element} The JSX element.\n     */\n    renderHelperDialogs() {\n        return react_1.default.createElement(react_1.default.Fragment, null,\n            this.renderError(),\n            this.renderToast(),\n            this.renderSaveCloseButtons(),\n            this.renderAlertSnackbar());\n    }\n    /**\n     * Renders this component.\n     * @returns {JSX.Element} The JSX element.\n     */\n    render() {\n        if (!this.state.loaded) {\n            return react_1.default.createElement(Loader_1.default, { themeType: this.state.themeType });\n        }\n        return react_1.default.createElement(\"div\", { className: \"App\" },\n            this.renderError(),\n            this.renderToast(),\n            this.renderSaveCloseButtons(),\n            this.renderAlertSnackbar());\n    }\n}\nexports.default = GenericApp;\n","/* eslint-disable */\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { ThemeProvider, StyledEngineProvider } from '@mui/material/styles';\nimport { Utils } from '@iobroker/adapter-react-v5';\nimport theme from './theme';\n\nwindow.adapterName = 'vis-react-demo';\nlet themeName = Utils.getThemeName();\n\nfunction build(WidgetDemoApp) {\n    const container = document.getElementById('root');\n    const root = createRoot(container);\n    return root.render(\n        <StyledEngineProvider injectFirst>\n            <ThemeProvider theme={theme(themeName)}>\n                <WidgetDemoApp\n                    socket={{ port: 8082 }}\n                    onThemeChange={_theme => {\n                        themeName = _theme;\n                        build();\n                    }}\n                />\n            </ThemeProvider>\n        </StyledEngineProvider>\n    );\n}\n\nexport default build;\n","import { Theme } from '@iobroker/adapter-react-v5';\n\nexport default type => {\n    const danger = '#dd5325';\n    const success = '#73b6a8';\n    const theme = { ...Theme(type) };\n    if (!theme) {\n        return theme;\n    }\n    theme.palette.text.danger = {\n        color: danger,\n    };\n    theme.palette.text.success = {\n        color: success,\n    };\n\n    return theme;\n};\n","import React from 'react';\nimport { ThemeProvider, StyledEngineProvider } from '@mui/material/styles';\n\nimport GenericApp from '@iobroker/adapter-react-v5/GenericApp';\nimport { i18n as I18n, Loader } from '@iobroker/adapter-react-v5';\n\nclass WidgetDemoApp extends GenericApp {\n    constructor(props) {\n        const extendedProps = { ...props };\n        super(props, extendedProps);\n\n        (async () => {\n            this.translations = {\n                en: require('@iobroker/adapter-react-v5/i18n/en.json'),\n                de: require('@iobroker/adapter-react-v5/i18n/de.json'),\n                ru: require('@iobroker/adapter-react-v5/i18n/ru.json'),\n                pt: require('@iobroker/adapter-react-v5/i18n/pt.json'),\n                nl: require('@iobroker/adapter-react-v5/i18n/nl.json'),\n                fr: require('@iobroker/adapter-react-v5/i18n/fr.json'),\n                it: require('@iobroker/adapter-react-v5/i18n/it.json'),\n                es: require('@iobroker/adapter-react-v5/i18n/es.json'),\n                pl: require('@iobroker/adapter-react-v5/i18n/pl.json'),\n                'zh-cn': require('@iobroker/adapter-react-v5/i18n/zh-cn.json'),\n            };\n\n            // init translations\n            I18n.setTranslations(this.translations);\n        })();\n\n        I18n.setLanguage((navigator.language || navigator.userLanguage || 'en').substring(0, 2).toLowerCase());\n    }\n\n    renderWidget() {\n        return <div>Please implement renderWidget method in your class</div>;\n    }\n\n    render() {\n        if (!this.state.loaded) {\n            return <StyledEngineProvider injectFirst>\n                <ThemeProvider theme={this.state.theme}>\n                    <Loader theme={this.state.themeType} />\n                </ThemeProvider>\n            </StyledEngineProvider>;\n        }\n\n        const style = {\n            backgroundColor: this.state.themeType === 'dark' ? '#303030' : '#f0f0f0',\n            color: this.state.themeType === 'dark' ? '#f0f0f0' : '#303030',\n            height: '100%',\n            width: '100%',\n            overflow: 'auto',\n        };\n\n        return <StyledEngineProvider injectFirst>\n            <ThemeProvider theme={this.state.theme}>\n                <div style={style}>\n                    {this.renderWidget()}\n                </div>\n            </ThemeProvider>\n        </StyledEngineProvider>;\n    }\n}\n\nexport default WidgetDemoApp;\n","const blue = {\n  50: '#e3f2fd',\n  100: '#bbdefb',\n  200: '#90caf9',\n  300: '#64b5f6',\n  400: '#42a5f5',\n  500: '#2196f3',\n  600: '#1e88e5',\n  700: '#1976d2',\n  800: '#1565c0',\n  900: '#0d47a1',\n  A100: '#82b1ff',\n  A200: '#448aff',\n  A400: '#2979ff',\n  A700: '#2962ff'\n};\nexport default blue;","const common = {\n  black: '#000',\n  white: '#fff'\n};\nexport default common;","const green = {\n  50: '#e8f5e9',\n  100: '#c8e6c9',\n  200: '#a5d6a7',\n  300: '#81c784',\n  400: '#66bb6a',\n  500: '#4caf50',\n  600: '#43a047',\n  700: '#388e3c',\n  800: '#2e7d32',\n  900: '#1b5e20',\n  A100: '#b9f6ca',\n  A200: '#69f0ae',\n  A400: '#00e676',\n  A700: '#00c853'\n};\nexport default green;","const grey = {\n  50: '#fafafa',\n  100: '#f5f5f5',\n  200: '#eeeeee',\n  300: '#e0e0e0',\n  400: '#bdbdbd',\n  500: '#9e9e9e',\n  600: '#757575',\n  700: '#616161',\n  800: '#424242',\n  900: '#212121',\n  A100: '#f5f5f5',\n  A200: '#eeeeee',\n  A400: '#bdbdbd',\n  A700: '#616161'\n};\nexport default grey;","const pink = {\n  50: '#fce4ec',\n  100: '#f8bbd0',\n  200: '#f48fb1',\n  300: '#f06292',\n  400: '#ec407a',\n  500: '#e91e63',\n  600: '#d81b60',\n  700: '#c2185b',\n  800: '#ad1457',\n  900: '#880e4f',\n  A100: '#ff80ab',\n  A200: '#ff4081',\n  A400: '#f50057',\n  A700: '#c51162'\n};\nexport default pink;","const deepPurple = {\n  50: '#ede7f6',\n  100: '#d1c4e9',\n  200: '#b39ddb',\n  300: '#9575cd',\n  400: '#7e57c2',\n  500: '#673ab7',\n  600: '#5e35b1',\n  700: '#512da8',\n  800: '#4527a0',\n  900: '#311b92',\n  A100: '#b388ff',\n  A200: '#7c4dff',\n  A400: '#651fff',\n  A700: '#6200ea'\n};\nexport default deepPurple;","const indigo = {\n  50: '#e8eaf6',\n  100: '#c5cae9',\n  200: '#9fa8da',\n  300: '#7986cb',\n  400: '#5c6bc0',\n  500: '#3f51b5',\n  600: '#3949ab',\n  700: '#303f9f',\n  800: '#283593',\n  900: '#1a237e',\n  A100: '#8c9eff',\n  A200: '#536dfe',\n  A400: '#3d5afe',\n  A700: '#304ffe'\n};\nexport default indigo;","const cyan = {\n  50: '#e0f7fa',\n  100: '#b2ebf2',\n  200: '#80deea',\n  300: '#4dd0e1',\n  400: '#26c6da',\n  500: '#00bcd4',\n  600: '#00acc1',\n  700: '#0097a7',\n  800: '#00838f',\n  900: '#006064',\n  A100: '#84ffff',\n  A200: '#18ffff',\n  A400: '#00e5ff',\n  A700: '#00b8d4'\n};\nexport default cyan;","const teal = {\n  50: '#e0f2f1',\n  100: '#b2dfdb',\n  200: '#80cbc4',\n  300: '#4db6ac',\n  400: '#26a69a',\n  500: '#009688',\n  600: '#00897b',\n  700: '#00796b',\n  800: '#00695c',\n  900: '#004d40',\n  A100: '#a7ffeb',\n  A200: '#64ffda',\n  A400: '#1de9b6',\n  A700: '#00bfa5'\n};\nexport default teal;","const lightGreen = {\n  50: '#f1f8e9',\n  100: '#dcedc8',\n  200: '#c5e1a5',\n  300: '#aed581',\n  400: '#9ccc65',\n  500: '#8bc34a',\n  600: '#7cb342',\n  700: '#689f38',\n  800: '#558b2f',\n  900: '#33691e',\n  A100: '#ccff90',\n  A200: '#b2ff59',\n  A400: '#76ff03',\n  A700: '#64dd17'\n};\nexport default lightGreen;","const lime = {\n  50: '#f9fbe7',\n  100: '#f0f4c3',\n  200: '#e6ee9c',\n  300: '#dce775',\n  400: '#d4e157',\n  500: '#cddc39',\n  600: '#c0ca33',\n  700: '#afb42b',\n  800: '#9e9d24',\n  900: '#827717',\n  A100: '#f4ff81',\n  A200: '#eeff41',\n  A400: '#c6ff00',\n  A700: '#aeea00'\n};\nexport default lime;","const yellow = {\n  50: '#fffde7',\n  100: '#fff9c4',\n  200: '#fff59d',\n  300: '#fff176',\n  400: '#ffee58',\n  500: '#ffeb3b',\n  600: '#fdd835',\n  700: '#fbc02d',\n  800: '#f9a825',\n  900: '#f57f17',\n  A100: '#ffff8d',\n  A200: '#ffff00',\n  A400: '#ffea00',\n  A700: '#ffd600'\n};\nexport default yellow;","const amber = {\n  50: '#fff8e1',\n  100: '#ffecb3',\n  200: '#ffe082',\n  300: '#ffd54f',\n  400: '#ffca28',\n  500: '#ffc107',\n  600: '#ffb300',\n  700: '#ffa000',\n  800: '#ff8f00',\n  900: '#ff6f00',\n  A100: '#ffe57f',\n  A200: '#ffd740',\n  A400: '#ffc400',\n  A700: '#ffab00'\n};\nexport default amber;","const deepOrange = {\n  50: '#fbe9e7',\n  100: '#ffccbc',\n  200: '#ffab91',\n  300: '#ff8a65',\n  400: '#ff7043',\n  500: '#ff5722',\n  600: '#f4511e',\n  700: '#e64a19',\n  800: '#d84315',\n  900: '#bf360c',\n  A100: '#ff9e80',\n  A200: '#ff6e40',\n  A400: '#ff3d00',\n  A700: '#dd2c00'\n};\nexport default deepOrange;","const brown = {\n  50: '#efebe9',\n  100: '#d7ccc8',\n  200: '#bcaaa4',\n  300: '#a1887f',\n  400: '#8d6e63',\n  500: '#795548',\n  600: '#6d4c41',\n  700: '#5d4037',\n  800: '#4e342e',\n  900: '#3e2723',\n  A100: '#d7ccc8',\n  A200: '#bcaaa4',\n  A400: '#8d6e63',\n  A700: '#5d4037'\n};\nexport default brown;","const blueGrey = {\n  50: '#eceff1',\n  100: '#cfd8dc',\n  200: '#b0bec5',\n  300: '#90a4ae',\n  400: '#78909c',\n  500: '#607d8b',\n  600: '#546e7a',\n  700: '#455a64',\n  800: '#37474f',\n  900: '#263238',\n  A100: '#cfd8dc',\n  A200: '#b0bec5',\n  A400: '#78909c',\n  A700: '#455a64'\n};\nexport default blueGrey;","const lightBlue = {\n  50: '#e1f5fe',\n  100: '#b3e5fc',\n  200: '#81d4fa',\n  300: '#4fc3f7',\n  400: '#29b6f6',\n  500: '#03a9f4',\n  600: '#039be5',\n  700: '#0288d1',\n  800: '#0277bd',\n  900: '#01579b',\n  A100: '#80d8ff',\n  A200: '#40c4ff',\n  A400: '#00b0ff',\n  A700: '#0091ea'\n};\nexport default lightBlue;","const orange = {\n  50: '#fff3e0',\n  100: '#ffe0b2',\n  200: '#ffcc80',\n  300: '#ffb74d',\n  400: '#ffa726',\n  500: '#ff9800',\n  600: '#fb8c00',\n  700: '#f57c00',\n  800: '#ef6c00',\n  900: '#e65100',\n  A100: '#ffd180',\n  A200: '#ffab40',\n  A400: '#ff9100',\n  A700: '#ff6d00'\n};\nexport default orange;","const purple = {\n  50: '#f3e5f5',\n  100: '#e1bee7',\n  200: '#ce93d8',\n  300: '#ba68c8',\n  400: '#ab47bc',\n  500: '#9c27b0',\n  600: '#8e24aa',\n  700: '#7b1fa2',\n  800: '#6a1b9a',\n  900: '#4a148c',\n  A100: '#ea80fc',\n  A200: '#e040fb',\n  A400: '#d500f9',\n  A700: '#aa00ff'\n};\nexport default purple;","const red = {\n  50: '#ffebee',\n  100: '#ffcdd2',\n  200: '#ef9a9a',\n  300: '#e57373',\n  400: '#ef5350',\n  500: '#f44336',\n  600: '#e53935',\n  700: '#d32f2f',\n  800: '#c62828',\n  900: '#b71c1c',\n  A100: '#ff8a80',\n  A200: '#ff5252',\n  A400: '#ff1744',\n  A700: '#d50000'\n};\nexport default red;","import type { Client, Integration, IntegrationClass, IntegrationFn, WrappedFunction } from '@sentry/types';\nimport { getOriginalFunction } from '@sentry/utils';\nimport { getClient } from '../exports';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration';\n\nlet originalFunctionToString: () => void;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap<Client, boolean>();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Function.prototype.toString = function (this: WrappedFunction, ...args: any[]): string {\n          const originalFunction = getOriginalFunction(this);\n          const context =\n            SETUP_CLIENTS.has(getClient() as Client) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nexport const functionToStringIntegration = defineIntegration(_functionToStringIntegration);\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * @deprecated Use `functionToStringIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const FunctionToString = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  functionToStringIntegration,\n) as IntegrationClass<Integration & { setupOnce: () => void }>;\n\n// eslint-disable-next-line deprecation/deprecation\nexport type FunctionToString = typeof FunctionToString;\n","import type { Client, Event, EventHint, Integration, IntegrationClass, IntegrationFn, StackFrame } from '@sentry/types';\nimport { getEventDescription, logger, stringMatchesSomePattern } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [\n  /^Script error\\.?$/,\n  /^Javascript error: Script error\\.? on line 0$/,\n  /^ResizeObserver loop completed with undelivered notifications.$/,\n  /^Cannot redefine property: googletag$/,\n];\n\nconst DEFAULT_IGNORE_TRANSACTIONS = [\n  /^.*\\/healthcheck$/,\n  /^.*\\/healthy$/,\n  /^.*\\/live$/,\n  /^.*\\/ready$/,\n  /^.*\\/heartbeat$/,\n  /^.*\\/health$/,\n  /^.*\\/healthz$/,\n];\n\n/** Options for the InboundFilters integration */\nexport interface InboundFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreTransactions: Array<string | RegExp>;\n  ignoreInternal: boolean;\n  disableErrorDefaults: boolean;\n  disableTransactionDefaults: boolean;\n}\n\nconst INTEGRATION_NAME = 'InboundFilters';\nconst _inboundFiltersIntegration = ((options: Partial<InboundFiltersOptions> = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event, _hint, client) {\n      const clientOptions = client.getOptions();\n      const mergedOptions = _mergeOptions(options, clientOptions);\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const inboundFiltersIntegration = defineIntegration(_inboundFiltersIntegration);\n\n/**\n * Inbound filters configurable by the user.\n * @deprecated Use `inboundFiltersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const InboundFilters = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  inboundFiltersIntegration,\n) as IntegrationClass<Integration & { preprocessEvent: (event: Event, hint: EventHint, client: Client) => void }> & {\n  new (\n    options?: Partial<{\n      allowUrls: Array<string | RegExp>;\n      denyUrls: Array<string | RegExp>;\n      ignoreErrors: Array<string | RegExp>;\n      ignoreTransactions: Array<string | RegExp>;\n      ignoreInternal: boolean;\n      disableErrorDefaults: boolean;\n      disableTransactionDefaults: boolean;\n    }>,\n  ): Integration;\n};\n\nfunction _mergeOptions(\n  internalOptions: Partial<InboundFiltersOptions> = {},\n  clientOptions: Partial<InboundFiltersOptions> = {},\n): Partial<InboundFiltersOptions> {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [\n      ...(internalOptions.ignoreTransactions || []),\n      ...(clientOptions.ignoreTransactions || []),\n      ...(internalOptions.disableTransactionDefaults ? [] : DEFAULT_IGNORE_TRANSACTIONS),\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\nfunction _shouldDropEvent(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    DEBUG_BUILD &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event: Event, ignoreErrors?: Array<string | RegExp>): boolean {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event: Event, ignoreTransactions?: Array<string | RegExp>): boolean {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event: Event, denyUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event: Event, allowUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event: Event): string[] {\n  const possibleMessages: string[] = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  let lastException;\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    lastException = event.exception.values[event.exception.values.length - 1];\n  } catch (e) {\n    // try catching to save bundle size checking existence of variables\n  }\n\n  if (lastException) {\n    if (lastException.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  }\n\n  if (DEBUG_BUILD && possibleMessages.length === 0) {\n    logger.error(`Could not extract message for event ${getEventDescription(event)}`);\n  }\n\n  return possibleMessages;\n}\n\nfunction _isSentryError(event: Event): boolean {\n  try {\n    // @ts-expect-error can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames: StackFrame[] = []): string | null {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event: Event): string | null {\n  try {\n    let frames;\n    try {\n      // @ts-expect-error we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    DEBUG_BUILD && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n","import type { Event, EventHint, Exception, ExtendedError, StackParser } from '@sentry/types';\n\nimport { isInstanceOf } from './is';\nimport { truncate } from './string';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nexport function applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  maxValueLimit: number = 250,\n  key: string,\n  limit: number,\n  event: Event,\n  hint?: EventHint,\n): void {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException: Exception | undefined =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException as ExtendedError,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  limit: number,\n  error: ExtendedError,\n  key: string,\n  prevExceptions: Exception[],\n  exception: Exception,\n  exceptionId: number,\n): Exception[] {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception: Exception, exceptionId: number): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception: Exception,\n  source: string,\n  exceptionId: number,\n  parentId: number | undefined,\n): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions: Exception[], maxValueLength: number): Exception[] {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n","import type {\n  Client,\n  Event,\n  EventHint,\n  Exception,\n  Extras,\n  Hub,\n  Mechanism,\n  ParameterizedString,\n  Severity,\n  SeverityLevel,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\n\nimport { isError, isParameterizedString, isPlainObject } from './is';\nimport { addExceptionMechanism, addExceptionTypeValue } from './misc';\nimport { normalizeToSize } from './normalize';\nimport { extractExceptionKeysForMessage } from './object';\n\n/**\n * Extracts stack frames from the error.stack string\n */\nexport function parseStackFrames(stackParser: StackParser, error: Error): StackFrame[] {\n  return stackParser(error.stack || '', 1);\n}\n\n/**\n * Extracts stack frames from the error and builds a Sentry Exception\n */\nexport function exceptionFromError(stackParser: StackParser, error: Error): Exception {\n  const exception: Exception = {\n    type: error.name || error.constructor.name,\n    value: error.message,\n  };\n\n  const frames = parseStackFrames(stackParser, error);\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  return exception;\n}\n\nfunction getMessageForObject(exception: object): string {\n  if ('name' in exception && typeof exception.name === 'string') {\n    let message = `'${exception.name}' captured as exception`;\n\n    if ('message' in exception && typeof exception.message === 'string') {\n      message += ` with message '${exception.message}'`;\n    }\n\n    return message;\n  } else if ('message' in exception && typeof exception.message === 'string') {\n    return exception.message;\n  } else {\n    // This will allow us to group events based on top-level keys\n    // which is much better than creating new group when any key/value change\n    return `Object captured as exception with keys: ${extractExceptionKeysForMessage(\n      exception as Record<string, unknown>,\n    )}`;\n  }\n}\n\n/**\n * Builds and Event from a Exception\n *\n * TODO(v8): Remove getHub fallback\n * @hidden\n */\nexport function eventFromUnknownInput(\n  // eslint-disable-next-line deprecation/deprecation\n  getHubOrClient: (() => Hub) | Client | undefined,\n  stackParser: StackParser,\n  exception: unknown,\n  hint?: EventHint,\n): Event {\n  const client =\n    typeof getHubOrClient === 'function'\n      ? // eslint-disable-next-line deprecation/deprecation\n        getHubOrClient().getClient()\n      : getHubOrClient;\n\n  let ex: unknown = exception;\n  const providedMechanism: Mechanism | undefined =\n    hint && hint.data && (hint.data as { mechanism: Mechanism }).mechanism;\n  const mechanism: Mechanism = providedMechanism || {\n    handled: true,\n    type: 'generic',\n  };\n\n  let extras: Extras | undefined;\n\n  if (!isError(exception)) {\n    if (isPlainObject(exception)) {\n      const normalizeDepth = client && client.getOptions().normalizeDepth;\n      extras = { ['__serialized__']: normalizeToSize(exception as Record<string, unknown>, normalizeDepth) };\n\n      const message = getMessageForObject(exception);\n      ex = (hint && hint.syntheticException) || new Error(message);\n      (ex as Error).message = message;\n    } else {\n      // This handles when someone does: `throw \"something awesome\";`\n      // We use synthesized Error here so we can extract a (rough) stack trace.\n      ex = (hint && hint.syntheticException) || new Error(exception as string);\n      (ex as Error).message = exception as string;\n    }\n    mechanism.synthetic = true;\n  }\n\n  const event: Event = {\n    exception: {\n      values: [exceptionFromError(stackParser, ex as Error)],\n    },\n  };\n\n  if (extras) {\n    event.extra = extras;\n  }\n\n  addExceptionTypeValue(event, undefined, undefined);\n  addExceptionMechanism(event, mechanism);\n\n  return {\n    ...event,\n    event_id: hint && hint.event_id,\n  };\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  // eslint-disable-next-line deprecation/deprecation\n  level: Severity | SeverityLevel = 'info',\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): Event {\n  const event: Event = {\n    event_id: hint && hint.event_id,\n    level,\n  };\n\n  if (attachStacktrace && hint && hint.syntheticException) {\n    const frames = parseStackFrames(stackParser, hint.syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [\n          {\n            value: message,\n            stacktrace: { frames },\n          },\n        ],\n      };\n    }\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n","import type { Client, Event, EventHint, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport { applyAggregateErrorsToEvent, exceptionFromError } from '@sentry/utils';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration';\n\ninterface LinkedErrorsOptions {\n  key?: string;\n  limit?: number;\n}\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options: LinkedErrorsOptions = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n\n/**\n * Adds SDK info to an event.\n * @deprecated Use `linkedErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const LinkedErrors = convertIntegrationFnToClass(INTEGRATION_NAME, linkedErrorsIntegration) as IntegrationClass<\n  Integration & { preprocessEvent: (event: Event, hint: EventHint, client: Client) => void }\n> & { new (options?: { key?: string; limit?: number }): Integration };\n","export type { ClientClass } from './sdk';\nexport type { AsyncContextStrategy, Carrier, Layer, RunWithAsyncContextOptions } from './hub';\nexport type { OfflineStore, OfflineTransportOptions } from './transports/offline';\nexport type { ServerRuntimeClientOptions } from './server-runtime-client';\nexport type { RequestDataIntegrationOptions } from './integrations/requestdata';\nexport type { IntegrationIndex } from './integration';\n\nexport * from './tracing';\nexport * from './semanticAttributes';\nexport { createEventEnvelope, createSessionEnvelope } from './envelope';\nexport {\n  addBreadcrumb,\n  captureCheckIn,\n  withMonitor,\n  captureException,\n  captureEvent,\n  captureMessage,\n  close,\n  // eslint-disable-next-line deprecation/deprecation\n  configureScope,\n  flush,\n  // eslint-disable-next-line deprecation/deprecation\n  lastEventId,\n  // eslint-disable-next-line deprecation/deprecation\n  startTransaction,\n  setContext,\n  setExtra,\n  setExtras,\n  setTag,\n  setTags,\n  setUser,\n  withScope,\n  withIsolationScope,\n  getClient,\n  isInitialized,\n  getCurrentScope,\n  startSession,\n  endSession,\n  captureSession,\n  withActiveSpan,\n} from './exports';\nexport {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub,\n  getIsolationScope,\n  getHubFromCarrier,\n  // eslint-disable-next-line deprecation/deprecation\n  Hub,\n  // eslint-disable-next-line deprecation/deprecation\n  makeMain,\n  getMainCarrier,\n  runWithAsyncContext,\n  setHubOnCarrier,\n  ensureHubOnCarrier,\n  setAsyncContextStrategy,\n} from './hub';\nexport { makeSession, closeSession, updateSession } from './session';\nexport { SessionFlusher } from './sessionflusher';\nexport { Scope, getGlobalScope, setGlobalScope } from './scope';\nexport {\n  notifyEventProcessors,\n  // eslint-disable-next-line deprecation/deprecation\n  addGlobalEventProcessor,\n} from './eventProcessors';\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint } from './api';\nexport { BaseClient, addEventProcessor } from './baseclient';\nexport { ServerRuntimeClient } from './server-runtime-client';\nexport { initAndBind, setCurrentClient } from './sdk';\nexport { createTransport } from './transports/base';\nexport { makeOfflineTransport } from './transports/offline';\nexport { makeMultiplexedTransport } from './transports/multiplexed';\nexport { SDK_VERSION } from './version';\nexport {\n  getIntegrationsToSetup,\n  addIntegration,\n  defineIntegration,\n  // eslint-disable-next-line deprecation/deprecation\n  convertIntegrationFnToClass,\n} from './integration';\nexport { applyScopeDataToEvent, mergeScopeData } from './utils/applyScopeDataToEvent';\nexport { prepareEvent } from './utils/prepareEvent';\nexport { createCheckInEnvelope } from './checkin';\nexport { createSpanEnvelope } from './span';\nexport { hasTracingEnabled } from './utils/hasTracingEnabled';\nexport { isSentryRequestUrl } from './utils/isSentryRequestUrl';\nexport { handleCallbackErrors } from './utils/handleCallbackErrors';\nexport { parameterize } from './utils/parameterize';\nexport { spanToTraceHeader, spanToJSON, spanIsSampled, spanToTraceContext } from './utils/spanUtils';\nexport { getRootSpan } from './utils/getRootSpan';\nexport { applySdkMetadata } from './utils/sdkMetadata';\nexport { DEFAULT_ENVIRONMENT } from './constants';\n/* eslint-disable deprecation/deprecation */\nexport { ModuleMetadata } from './integrations/metadata';\nexport { RequestData } from './integrations/requestdata';\nexport { InboundFilters } from './integrations/inboundfilters';\nexport { FunctionToString } from './integrations/functiontostring';\nexport { LinkedErrors } from './integrations/linkederrors';\n/* eslint-enable deprecation/deprecation */\nimport * as INTEGRATIONS from './integrations';\nexport { functionToStringIntegration } from './integrations/functiontostring';\nexport { inboundFiltersIntegration } from './integrations/inboundfilters';\nexport { linkedErrorsIntegration } from './integrations/linkederrors';\nexport { moduleMetadataIntegration } from './integrations/metadata';\nexport { requestDataIntegration } from './integrations/requestdata';\nexport { metrics } from './metrics/exports';\n\n/** @deprecated Import the integration function directly, e.g. `inboundFiltersIntegration()` instead of `new Integrations.InboundFilter(). */\nconst Integrations = INTEGRATIONS;\n\n// eslint-disable-next-line deprecation/deprecation\nexport { Integrations };\n","import type { DsnComponents, DsnLike, DsnProtocol } from '@sentry/types';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { consoleSandbox, logger } from './logger';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol?: string): protocol is DsnProtocol {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nexport function dsnToString(dsn: DsnComponents, withPassword: boolean = false): string {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nexport function dsnFromString(str: string): DsnComponents | undefined {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() as string;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, publicKey });\n}\n\nfunction dsnFromComponents(components: DsnComponents): DsnComponents {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn: DsnComponents): boolean {\n  if (!DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents: ReadonlyArray<keyof DsnComponents> = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nexport function makeDsn(from: DsnLike): DsnComponents | undefined {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n","import type {\n  Attachment,\n  AttachmentItem,\n  BaseEnvelopeHeaders,\n  BaseEnvelopeItemHeaders,\n  DataCategory,\n  DsnComponents,\n  Envelope,\n  EnvelopeItemType,\n  Event,\n  EventEnvelopeHeaders,\n  SdkInfo,\n  SdkMetadata,\n  TextEncoderInternal,\n} from '@sentry/types';\n\nimport { dsnToString } from './dsn';\nimport { normalize } from './normalize';\nimport { dropUndefinedKeys } from './object';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function createEnvelope<E extends Envelope>(headers: E[0], items: E[1] = []): E {\n  return [headers, items] as E;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function addItemToEnvelope<E extends Envelope>(envelope: E, newItem: E[1][number]): E {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] as unknown as E;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nexport function forEachEnvelopeItem<E extends Envelope>(\n  envelope: Envelope,\n  callback: (envelopeItem: E[1][number], envelopeItemType: E[1][number][0]['type']) => boolean | void,\n): boolean {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nexport function envelopeContainsItemType(envelope: Envelope, types: EnvelopeItemType[]): boolean {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input: string, textEncoder?: TextEncoderInternal): Uint8Array {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nexport function serializeEnvelope(envelope: Envelope, textEncoder?: TextEncoderInternal): string | Uint8Array {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts: string | Uint8Array[] = JSON.stringify(envHeaders);\n\n  function append(next: string | Uint8Array): void {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload: string;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers: Uint8Array[]): Uint8Array {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\nexport interface TextDecoderInternal {\n  decode(input?: Uint8Array): string;\n}\n\n/**\n * Parses an envelope\n */\nexport function parseEnvelope(\n  env: string | Uint8Array,\n  textEncoder: TextEncoderInternal,\n  textDecoder: TextDecoderInternal,\n): Envelope {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length: number): Uint8Array {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson<T>(): T {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) as T;\n  }\n\n  const envelopeHeader = readJson<BaseEnvelopeHeaders>();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items: [any, any][] = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson<BaseEnvelopeItemHeaders>();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nexport function createAttachmentEnvelopeItem(\n  attachment: Attachment,\n  textEncoder?: TextEncoderInternal,\n): AttachmentItem {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP: Record<EnvelopeItemType, DataCategory> = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  statsd: 'metric_bucket',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nexport function envelopeItemTypeToDataCategory(type: EnvelopeItemType): DataCategory {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from the metadata or an events */\nexport function getSdkMetadataForEnvelopeHeader(metadataOrEvent?: SdkMetadata | Event): SdkInfo | undefined {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nexport function createEventEnvelopeHeaders(\n  event: Event,\n  sdkInfo: SdkInfo | undefined,\n  tunnel: string | undefined,\n  dsn?: DsnComponents,\n): EventEnvelopeHeaders {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id as string,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n","import type { Event, StackParser } from '@sentry/types';\nimport { GLOBAL_OBJ } from '@sentry/utils';\n\n/** Keys are source filename/url, values are metadata objects. */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst filenameMetadataMap = new Map<string, any>();\n/** Set of stack strings that have already been parsed. */\nconst parsedStacks = new Set<string>();\n\nfunction ensureMetadataStacksAreParsed(parser: StackParser): void {\n  if (!GLOBAL_OBJ._sentryModuleMetadata) {\n    return;\n  }\n\n  for (const stack of Object.keys(GLOBAL_OBJ._sentryModuleMetadata)) {\n    const metadata = GLOBAL_OBJ._sentryModuleMetadata[stack];\n\n    if (parsedStacks.has(stack)) {\n      continue;\n    }\n\n    // Ensure this stack doesn't get parsed again\n    parsedStacks.add(stack);\n\n    const frames = parser(stack);\n\n    // Go through the frames starting from the top of the stack and find the first one with a filename\n    for (const frame of frames.reverse()) {\n      if (frame.filename) {\n        // Save the metadata for this filename\n        filenameMetadataMap.set(frame.filename, metadata);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Retrieve metadata for a specific JavaScript file URL.\n *\n * Metadata is injected by the Sentry bundler plugins using the `_experiments.moduleMetadata` config option.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getMetadataForUrl(parser: StackParser, filename: string): any | undefined {\n  ensureMetadataStacksAreParsed(parser);\n  return filenameMetadataMap.get(filename);\n}\n\n/**\n * Adds metadata to stack frames.\n *\n * Metadata is injected by the Sentry bundler plugins using the `_experiments.moduleMetadata` config option.\n */\nexport function addMetadataToStackFrames(parser: StackParser, event: Event): void {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception!.values!.forEach(exception => {\n      if (!exception.stacktrace) {\n        return;\n      }\n\n      for (const frame of exception.stacktrace.frames || []) {\n        if (!frame.filename) {\n          continue;\n        }\n\n        const metadata = getMetadataForUrl(parser, frame.filename);\n\n        if (metadata) {\n          frame.module_metadata = metadata;\n        }\n      }\n    });\n  } catch (_) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Strips metadata from stack frames.\n */\nexport function stripMetadataFromStackFrames(event: Event): void {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception!.values!.forEach(exception => {\n      if (!exception.stacktrace) {\n        return;\n      }\n\n      for (const frame of exception.stacktrace.frames || []) {\n        delete frame.module_metadata;\n      }\n    });\n  } catch (_) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n","import type { Client, Event, EventHint, EventItem, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport { forEachEnvelopeItem } from '@sentry/utils';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration';\n\nimport { addMetadataToStackFrames, stripMetadataFromStackFrames } from '../metadata';\n\nconst INTEGRATION_NAME = 'ModuleMetadata';\n\nconst _moduleMetadataIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (typeof client.on !== 'function') {\n        return;\n      }\n\n      // We need to strip metadata from stack frames before sending them to Sentry since these are client side only.\n      client.on('beforeEnvelope', envelope => {\n        forEachEnvelopeItem(envelope, (item, type) => {\n          if (type === 'event') {\n            const event = Array.isArray(item) ? (item as EventItem)[1] : undefined;\n\n            if (event) {\n              stripMetadataFromStackFrames(event);\n              item[1] = event;\n            }\n          }\n        });\n      });\n    },\n\n    processEvent(event, _hint, client) {\n      const stackParser = client.getOptions().stackParser;\n      addMetadataToStackFrames(stackParser, event);\n      return event;\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const moduleMetadataIntegration = defineIntegration(_moduleMetadataIntegration);\n\n/**\n * Adds module metadata to stack frames.\n *\n * Metadata can be injected by the Sentry bundler plugins using the `_experiments.moduleMetadata` config option.\n *\n * When this integration is added, the metadata passed to the bundler plugin is added to the stack frames of all events\n * under the `module_metadata` property. This can be used to help in tagging or routing of events from different teams\n * our sources\n *\n * @deprecated Use `moduleMetadataIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const ModuleMetadata = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  moduleMetadataIntegration,\n) as IntegrationClass<\n  Integration & {\n    setup: (client: Client) => void;\n    processEvent: (event: Event, hint: EventHint, client: Client) => Event;\n  }\n>;\n","/**\n * Use this attribute to represent the source of a span.\n * Should be one of: custom, url, route, view, component, task, unknown\n *\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SOURCE = 'sentry.source';\n\n/**\n * Use this attribute to represent the sample rate used for a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE = 'sentry.sample_rate';\n\n/**\n * Use this attribute to represent the operation of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_OP = 'sentry.op';\n\n/**\n * Use this attribute to represent the origin of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN = 'sentry.origin';\n\n/**\n * The id of the profile that this span occured in.\n */\nexport const SEMANTIC_ATTRIBUTE_PROFILE_ID = 'profile_id';\n","import type { ConsoleLevel } from '@sentry/types';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public logLevel: ConsoleLevel;\n\n  public constructor(public message: string, logLevel: ConsoleLevel = 'warn') {\n    super(message);\n\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n","import type { ClientOptions, DsnComponents, DsnLike, SdkInfo } from '@sentry/types';\nimport { dsnToString, makeDsn, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn: DsnComponents): string {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn: DsnComponents): string {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn: DsnComponents, sdkInfo: SdkInfo | undefined): string {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nexport function getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn: DsnComponents,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions: string | ClientOptions = {} as ClientOptions,\n): string {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nexport function getReportDialogEndpoint(\n  dsnLike: DsnLike,\n  dialogOptions: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n    user?: { name?: string; email?: string };\n  },\n): string {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n","import type { MeasurementUnit, MetricBucketItem, Primitive } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\nimport type { MetricType } from './types';\n\n/**\n * Generate bucket key from metric properties.\n */\nexport function getBucketKey(\n  metricType: MetricType,\n  name: string,\n  unit: MeasurementUnit,\n  tags: Record<string, string>,\n): string {\n  const stringifiedTags = Object.entries(dropUndefinedKeys(tags)).sort((a, b) => a[0].localeCompare(b[0]));\n  return `${metricType}${name}${unit}${stringifiedTags}`;\n}\n\n/* eslint-disable no-bitwise */\n/**\n * Simple hash function for strings.\n */\nexport function simpleHash(s: string): number {\n  let rv = 0;\n  for (let i = 0; i < s.length; i++) {\n    const c = s.charCodeAt(i);\n    rv = (rv << 5) - rv + c;\n    rv &= rv;\n  }\n  return rv >>> 0;\n}\n/* eslint-enable no-bitwise */\n\n/**\n * Serialize metrics buckets into a string based on statsd format.\n *\n * Example of format:\n * metric.name@second:1:1.2|d|#a:value,b:anothervalue|T12345677\n * Segments:\n * name: metric.name\n * unit: second\n * value: [1, 1.2]\n * type of metric: d (distribution)\n * tags: { a: value, b: anothervalue }\n * timestamp: 12345677\n */\nexport function serializeMetricBuckets(metricBucketItems: MetricBucketItem[]): string {\n  let out = '';\n  for (const item of metricBucketItems) {\n    const tagEntries = Object.entries(item.tags);\n    const maybeTags = tagEntries.length > 0 ? `|#${tagEntries.map(([key, value]) => `${key}:${value}`).join(',')}` : '';\n    out += `${item.name}@${item.unit}:${item.metric}|${item.metricType}${maybeTags}|T${item.timestamp}\\n`;\n  }\n  return out;\n}\n\n/** Sanitizes units */\nexport function sanitizeUnit(unit: string): string {\n  return unit.replace(/[^\\w]+/gi, '_');\n}\n\n/** Sanitizes metric keys */\nexport function sanitizeMetricKey(key: string): string {\n  return key.replace(/[^\\w\\-.]+/gi, '_');\n}\n\nfunction sanitizeTagKey(key: string): string {\n  return key.replace(/[^\\w\\-./]+/gi, '');\n}\n\nconst tagValueReplacements: [string, string][] = [\n  ['\\n', '\\\\n'],\n  ['\\r', '\\\\r'],\n  ['\\t', '\\\\t'],\n  ['\\\\', '\\\\\\\\'],\n  ['|', '\\\\u{7c}'],\n  [',', '\\\\u{2c}'],\n];\n\nfunction getCharOrReplacement(input: string): string {\n  for (const [search, replacement] of tagValueReplacements) {\n    if (input === search) {\n      return replacement;\n    }\n  }\n\n  return input;\n}\n\nfunction sanitizeTagValue(value: string): string {\n  return [...value].reduce((acc, char) => acc + getCharOrReplacement(char), '');\n}\n\n/**\n * Sanitizes tags.\n */\nexport function sanitizeTags(unsanitizedTags: Record<string, Primitive>): Record<string, string> {\n  const tags: Record<string, string> = {};\n  for (const key in unsanitizedTags) {\n    if (Object.prototype.hasOwnProperty.call(unsanitizedTags, key)) {\n      const sanitizedKey = sanitizeTagKey(key);\n      tags[sanitizedKey] = sanitizeTagValue(String(unsanitizedTags[key]));\n    }\n  }\n  return tags;\n}\n","import type { DsnComponents, MetricBucketItem, SdkMetadata, StatsdEnvelope, StatsdItem } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\nimport { serializeMetricBuckets } from './utils';\n\n/**\n * Create envelope from a metric aggregate.\n */\nexport function createMetricEnvelope(\n  metricBucketItems: Array<MetricBucketItem>,\n  dsn?: DsnComponents,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n): StatsdEnvelope {\n  const headers: StatsdEnvelope[0] = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  const item = createMetricEnvelopeItem(metricBucketItems);\n  return createEnvelope<StatsdEnvelope>(headers, [item]);\n}\n\nfunction createMetricEnvelopeItem(metricBucketItems: MetricBucketItem[]): StatsdItem {\n  const payload = serializeMetricBuckets(metricBucketItems);\n  const metricHeaders: StatsdItem[0] = {\n    type: 'statsd',\n    length: payload.length,\n  };\n  return [metricHeaders, payload];\n}\n","/* eslint-disable max-lines */\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  ClientOptions,\n  DataCategory,\n  DsnComponents,\n  DynamicSamplingContext,\n  Envelope,\n  ErrorEvent,\n  Event,\n  EventDropReason,\n  EventHint,\n  EventProcessor,\n  FeedbackEvent,\n  Integration,\n  IntegrationClass,\n  MetricBucketItem,\n  MetricsAggregator,\n  Outcome,\n  ParameterizedString,\n  SdkMetadata,\n  Session,\n  SessionAggregates,\n  Severity,\n  SeverityLevel,\n  StartSpanOptions,\n  Transaction,\n  TransactionEvent,\n  Transport,\n  TransportMakeRequestResponse,\n} from '@sentry/types';\nimport {\n  SentryError,\n  SyncPromise,\n  addItemToEnvelope,\n  checkOrSetAlreadyCaught,\n  createAttachmentEnvelopeItem,\n  isParameterizedString,\n  isPlainObject,\n  isPrimitive,\n  isThenable,\n  logger,\n  makeDsn,\n  rejectedSyncPromise,\n  resolvedSyncPromise,\n} from '@sentry/utils';\n\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope';\nimport { getClient } from './exports';\nimport { getIsolationScope } from './hub';\nimport type { IntegrationIndex } from './integration';\nimport { afterSetupIntegrations } from './integration';\nimport { setupIntegration, setupIntegrations } from './integration';\nimport { createMetricEnvelope } from './metrics/envelope';\nimport type { Scope } from './scope';\nimport { updateSession } from './session';\nimport { getDynamicSamplingContextFromClient } from './tracing/dynamicSamplingContext';\nimport { prepareEvent } from './utils/prepareEvent';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class BaseClient<O extends ClientOptions> implements Client<O> {\n  /**\n   * A reference to a metrics aggregator\n   *\n   * @experimental Note this is alpha API. It may experience breaking changes in the future.\n   */\n  public metricsAggregator?: MetricsAggregator;\n\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: DsnComponents;\n\n  protected readonly _transport?: Transport;\n\n  /** Array of set up integrations. */\n  protected _integrations: IntegrationIndex;\n\n  /** Indicates whether this client's integrations have been set up. */\n  protected _integrationsInitialized: boolean;\n\n  /** Number of calls being processed */\n  protected _numProcessing: number;\n\n  protected _eventProcessors: EventProcessor[];\n\n  /** Holds flushable  */\n  private _outcomes: { [key: string]: number };\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _hooks: Record<string, Function[]>;\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n  protected constructor(options: O) {\n    this._options = options;\n    this._integrations = {};\n    this._integrationsInitialized = false;\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      DEBUG_BUILD && logger.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options);\n      this._transport = options.transport({\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(\n    message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n    scope?: Scope,\n  ): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const eventMessage = isParameterizedString(message) ? message : String(message);\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(eventMessage, level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanScope: Scope | undefined = sdkProcessingMetadata.capturedSpanScope;\n\n    this._process(\n      this._captureEvent(event, hint, capturedSpanScope || scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(session: Session): void {\n    if (!(typeof session.release === 'string')) {\n      DEBUG_BUILD && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getDsn(): DsnComponents | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n  public getSdkMetadata(): SdkMetadata | undefined {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransport(): Transport | undefined {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    const transport = this._transport;\n    if (transport) {\n      if (this.metricsAggregator) {\n        this.metricsAggregator.flush();\n      }\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      if (this.metricsAggregator) {\n        this.metricsAggregator.close();\n      }\n      return result;\n    });\n  }\n\n  /** Get all installed event processors. */\n  public getEventProcessors(): EventProcessor[] {\n    return this._eventProcessors;\n  }\n\n  /** @inheritDoc */\n  public addEventProcessor(eventProcessor: EventProcessor): void {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /**\n   * This is an internal function to setup all integrations that should run on the client.\n   * @deprecated Use `client.init()` instead.\n   */\n  public setupIntegrations(forceInitialize?: boolean): void {\n    if ((forceInitialize && !this._integrationsInitialized) || (this._isEnabled() && !this._integrationsInitialized)) {\n      this._setupIntegrations();\n    }\n  }\n\n  /** @inheritdoc */\n  public init(): void {\n    if (this._isEnabled()) {\n      this._setupIntegrations();\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n  public getIntegrationById(integrationId: string): Integration | undefined {\n    return this.getIntegrationByName(integrationId);\n  }\n\n  /**\n   * Gets an installed integration by its name.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `name` was installed.\n   */\n  public getIntegrationByName<T extends Integration = Integration>(integrationName: string): T | undefined {\n    return this._integrations[integrationName] as T | undefined;\n  }\n\n  /**\n   * Returns the client's instance of the given integration class, it any.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    try {\n      return (this._integrations[integration.id] as T) || null;\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addIntegration(integration: Integration): void {\n    const isAlreadyInstalled = this._integrations[integration.name];\n\n    // This hook takes care of only installing if not already installed\n    setupIntegration(this, integration, this._integrations);\n    // Here we need to check manually to make sure to not run this multiple times\n    if (!isAlreadyInstalled) {\n      afterSetupIntegrations(this, [integration]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event, hint: EventHint = {}): void {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = addItemToEnvelope(\n        env,\n        createAttachmentEnvelopeItem(\n          attachment,\n          this._options.transportOptions && this._options.transportOptions.textEncoder,\n        ),\n      );\n    }\n\n    const promise = this._sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session | SessionAggregates): void {\n    const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(env);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public recordDroppedEvent(reason: EventDropReason, category: DataCategory, _event?: Event): void {\n    // Note: we use `event` in replay, where we overwrite this hook.\n\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      DEBUG_BUILD && logger.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureAggregateMetrics(metricBucketItems: Array<MetricBucketItem>): void {\n    DEBUG_BUILD && logger.log(`Flushing aggregated metrics, number of metrics: ${metricBucketItems.length}`);\n    const metricsEnvelope = createMetricEnvelope(\n      metricBucketItems,\n      this._dsn,\n      this._options._metadata,\n      this._options.tunnel,\n    );\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(metricsEnvelope);\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n  /* eslint-disable @typescript-eslint/unified-signatures */\n\n  /** @inheritdoc */\n  public on(hook: 'startTransaction', callback: (transaction: Transaction) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'finishTransaction', callback: (transaction: Transaction) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeEnvelope', callback: (envelope: Envelope) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeSendEvent', callback: (event: Event, hint?: EventHint) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'preprocessEvent', callback: (event: Event, hint?: EventHint) => void): void;\n\n  /** @inheritdoc */\n  public on(\n    hook: 'afterSendEvent',\n    callback: (event: Event, sendResponse: TransportMakeRequestResponse | void) => void,\n  ): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeAddBreadcrumb', callback: (breadcrumb: Breadcrumb, hint?: BreadcrumbHint) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'createDsc', callback: (dsc: DynamicSamplingContext) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'otelSpanEnd', callback: (otelSpan: unknown, mutableOptions: { drop: boolean }) => void): void;\n\n  /** @inheritdoc */\n  public on(\n    hook: 'beforeSendFeedback',\n    callback: (feedback: FeedbackEvent, options?: { includeReplay: boolean }) => void,\n  ): void;\n\n  /** @inheritdoc */\n  public on(hook: 'startPageLoadSpan', callback: (options: StartSpanOptions) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'startNavigationSpan', callback: (options: StartSpanOptions) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: string, callback: unknown): void {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-expect-error We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n  public emit(hook: 'startTransaction', transaction: Transaction): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'finishTransaction', transaction: Transaction): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeEnvelope', envelope: Envelope): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeSendEvent', event: Event, hint?: EventHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'preprocessEvent', event: Event, hint?: EventHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'afterSendEvent', event: Event, sendResponse: TransportMakeRequestResponse | void): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeAddBreadcrumb', breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'createDsc', dsc: DynamicSamplingContext): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'otelSpanEnd', otelSpan: unknown, mutableOptions: { drop: boolean }): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeSendFeedback', feedback: FeedbackEvent, options?: { includeReplay: boolean }): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'startPageLoadSpan', options: StartSpanOptions): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'startNavigationSpan', options: StartSpanOptions): void;\n\n  /** @inheritdoc */\n  public emit(hook: string, ...rest: unknown[]): void {\n    if (this._hooks[hook]) {\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Setup integrations for this client. */\n  protected _setupIntegrations(): void {\n    const { integrations } = this._options;\n    this._integrations = setupIntegrations(this, integrations);\n    afterSetupIntegrations(this, integrations);\n\n    // TODO v8: We don't need this flag anymore\n    this._integrationsInitialized = true;\n  }\n\n  /** Updates existing session based on the provided event */\n  protected _updateSessionFromEvent(session: Session, event: Event): void {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n  protected _isClientDoneProcessing(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(\n    event: Event,\n    hint: EventHint,\n    scope?: Scope,\n    isolationScope = getIsolationScope(),\n  ): PromiseLike<Event | null> {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    return prepareEvent(options, event, hint, scope, this, isolationScope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      const propagationContext = {\n        ...isolationScope.getPropagationContext(),\n        ...(scope ? scope.getPropagationContext() : undefined),\n      };\n\n      const trace = evt.contexts && evt.contexts.trace;\n      if (!trace && propagationContext) {\n        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext;\n        evt.contexts = {\n          trace: {\n            trace_id,\n            span_id: spanId,\n            parent_span_id: parentSpanId,\n          },\n          ...evt.contexts,\n        };\n\n        const dynamicSamplingContext = dsc ? dsc : getDynamicSamplingContextFromClient(trace_id, this, scope);\n\n        evt.sdkProcessingMetadata = {\n          dynamicSamplingContext,\n          ...evt.sdkProcessingMetadata,\n        };\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n  protected _captureEvent(event: Event, hint: EventHint = {}, scope?: Scope): PromiseLike<string | undefined> {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (DEBUG_BUILD) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason as SentryError;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event> {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory: DataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanIsolationScope: Scope | undefined = sdkProcessingMetadata.capturedSpanIsolationScope;\n\n    return this._prepareEvent(event, hint, scope, capturedSpanIsolationScope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data as { __sentry__: boolean }).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n  protected _process<T>(promise: PromiseLike<T>): void {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n  protected _sendEnvelope(envelope: Envelope): PromiseLike<void | TransportMakeRequestResponse> | void {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        DEBUG_BUILD && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      DEBUG_BUILD && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n  protected _clearOutcomes(): Outcome[] {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') as [EventDropReason, DataCategory];\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public abstract eventFromException(_exception: any, _hint?: EventHint): PromiseLike<Event>;\n\n  /**\n   * @inheritDoc\n   */\n  public abstract eventFromMessage(\n    _message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    _level?: Severity | SeverityLevel,\n    _hint?: EventHint,\n  ): PromiseLike<Event>;\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult: PromiseLike<Event | null> | Event | null,\n  beforeSendLabel: string,\n): PromiseLike<Event | null> | Event | null {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n): PromiseLike<Event | null> | Event | null {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event: Event): event is ErrorEvent {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/**\n * Add an event processor to the current client.\n * This event processor will run for all events processed by this client.\n */\nexport function addEventProcessor(callback: EventProcessor): void {\n  const client = getClient();\n\n  if (!client || !client.addEventProcessor) {\n    return;\n  }\n\n  client.addEventProcessor(callback);\n}\n","import type { HandlerDataError } from '@sentry/types';\n\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nlet _oldOnErrorHandler: (typeof GLOBAL_OBJ)['onerror'] | null = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalErrorInstrumentationHandler(handler: (data: HandlerDataError) => void): void {\n  const type = 'error';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError(): void {\n  _oldOnErrorHandler = GLOBAL_OBJ.onerror;\n\n  GLOBAL_OBJ.onerror = function (\n    msg: string | object,\n    url?: string,\n    line?: number,\n    column?: number,\n    error?: Error,\n  ): boolean {\n    const handlerData: HandlerDataError = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { HandlerDataUnhandledRejection } from '@sentry/types';\n\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nlet _oldOnUnhandledRejectionHandler: (typeof GLOBAL_OBJ)['onunhandledrejection'] | null = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalUnhandledRejectionInstrumentationHandler(\n  handler: (data: HandlerDataUnhandledRejection) => void,\n): void {\n  const type = 'unhandledrejection';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = GLOBAL_OBJ.onunhandledrejection;\n\n  GLOBAL_OBJ.onunhandledrejection = function (e: any): boolean {\n    const handlerData: HandlerDataUnhandledRejection = e;\n    triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n","import type { Transaction } from '@sentry/types';\nimport { extractTraceparentData as _extractTraceparentData } from '@sentry/utils';\n\nimport type { Hub } from '../hub';\nimport { getCurrentHub } from '../hub';\n\n/**\n * Grabs active transaction off scope.\n *\n * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getActiveTransaction<T extends Transaction>(maybeHub?: Hub): T | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = maybeHub || getCurrentHub();\n  // eslint-disable-next-line deprecation/deprecation\n  const scope = hub.getScope();\n  // eslint-disable-next-line deprecation/deprecation\n  return scope.getTransaction() as T | undefined;\n}\n\n// so it can be used in manual instrumentation without necessitating a hard dependency on @sentry/utils\nexport { stripUrlQueryAndFragment } from '@sentry/utils';\n\n/**\n * The `extractTraceparentData` function and `TRACEPARENT_REGEXP` constant used\n * to be declared in this file. It was later moved into `@sentry/utils` as part of a\n * move to remove `@sentry/tracing` dependencies from `@sentry/node` (`extractTraceparentData`\n * is the only tracing function used by `@sentry/node`).\n *\n * These exports are kept here for backwards compatability's sake.\n *\n * See https://github.com/getsentry/sentry-javascript/issues/4642 for more details.\n *\n * @deprecated Import this function from `@sentry/utils` instead\n */\nexport const extractTraceparentData = _extractTraceparentData;\n","import {\n  addGlobalErrorInstrumentationHandler,\n  addGlobalUnhandledRejectionInstrumentationHandler,\n  logger,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { SpanStatusType } from './spanstatus';\nimport { getActiveTransaction } from './utils';\n\nlet errorsInstrumented = false;\n\n/**\n * Configures global error listeners\n */\nexport function registerErrorInstrumentation(): void {\n  if (errorsInstrumented) {\n    return;\n  }\n\n  errorsInstrumented = true;\n  addGlobalErrorInstrumentationHandler(errorCallback);\n  addGlobalUnhandledRejectionInstrumentationHandler(errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback(): void {\n  // eslint-disable-next-line deprecation/deprecation\n  const activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    const status: SpanStatusType = 'internal_error';\n    DEBUG_BUILD && logger.log(`[Tracing] Transaction: ${status} -> Global error occured`);\n    activeTransaction.setStatus(status);\n  }\n}\n\n// The function name will be lost when bundling but we need to be able to identify this listener later to maintain the\n// node.js default exit behaviour\nerrorCallback.tag = 'sentry_tracingErrorCallback';\n","import { isThenable } from '@sentry/utils';\n\n/**\n * Wrap a callback function with error handling.\n * If an error is thrown, it will be passed to the `onError` callback and re-thrown.\n *\n * If the return value of the function is a promise, it will be handled with `maybeHandlePromiseRejection`.\n *\n * If an `onFinally` callback is provided, this will be called when the callback has finished\n * - so if it returns a promise, once the promise resolved/rejected,\n * else once the callback has finished executing.\n * The `onFinally` callback will _always_ be called, no matter if an error was thrown or not.\n */\nexport function handleCallbackErrors<\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Fn extends () => any,\n>(\n  fn: Fn,\n  onError: (error: unknown) => void,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onFinally: () => void = () => {},\n): ReturnType<Fn> {\n  let maybePromiseResult: ReturnType<Fn>;\n  try {\n    maybePromiseResult = fn();\n  } catch (e) {\n    onError(e);\n    onFinally();\n    throw e;\n  }\n\n  return maybeHandlePromiseRejection(maybePromiseResult, onError, onFinally);\n}\n\n/**\n * Maybe handle a promise rejection.\n * This expects to be given a value that _may_ be a promise, or any other value.\n * If it is a promise, and it rejects, it will call the `onError` callback.\n * Other than this, it will generally return the given value as-is.\n */\nfunction maybeHandlePromiseRejection<MaybePromise>(\n  value: MaybePromise,\n  onError: (error: unknown) => void,\n  onFinally: () => void,\n): MaybePromise {\n  if (isThenable(value)) {\n    // @ts-expect-error - the isThenable check returns the \"wrong\" type here\n    return value.then(\n      res => {\n        onFinally();\n        return res;\n      },\n      e => {\n        onError(e);\n        onFinally();\n        throw e;\n      },\n    );\n  }\n\n  onFinally();\n  return value;\n}\n","import type { Options } from '@sentry/types';\n\nimport { getClient } from '../exports';\n\n// Treeshakable guard to remove all code related to tracing\ndeclare const __SENTRY_TRACING__: boolean | undefined;\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nexport function hasTracingEnabled(\n  maybeOptions?: Pick<Options, 'tracesSampleRate' | 'tracesSampler' | 'enableTracing'> | undefined,\n): boolean {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const client = getClient();\n  const options = maybeOptions || (client && client.getOptions());\n  return !!options && (options.enableTracing || 'tracesSampleRate' in options || 'tracesSampler' in options);\n}\n","import type { Scope, Span, SpanTimeInput, StartSpanOptions, TransactionContext } from '@sentry/types';\n\nimport { addNonEnumerableProperty, dropUndefinedKeys, logger, tracingContextFromHeaders } from '@sentry/utils';\nimport { getDynamicSamplingContextFromSpan } from '.';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { getCurrentScope, withScope } from '../exports';\nimport type { Hub } from '../hub';\nimport { runWithAsyncContext } from '../hub';\nimport { getIsolationScope } from '../hub';\nimport { getCurrentHub } from '../hub';\nimport type { Scope as ScopeClass } from '../scope';\nimport { handleCallbackErrors } from '../utils/handleCallbackErrors';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled';\nimport { spanIsSampled, spanTimeInputToSeconds, spanToJSON } from '../utils/spanUtils';\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n *\n * This function is meant to be used internally and may break at any time. Use at your own risk.\n *\n * @internal\n * @private\n *\n * @deprecated Use `startSpan` instead.\n */\nexport function trace<T>(\n  context: TransactionContext,\n  callback: (span?: Span) => T,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onError: (error: unknown, span?: Span) => void = () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  afterFinish: () => void = () => {},\n): T {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n  const scope = getCurrentScope();\n  // eslint-disable-next-line deprecation/deprecation\n  const parentSpan = scope.getSpan();\n\n  const spanContext = normalizeContext(context);\n  const activeSpan = createChildSpanOrTransaction(hub, {\n    parentSpan,\n    spanContext,\n    forceTransaction: false,\n    scope,\n  });\n\n  // eslint-disable-next-line deprecation/deprecation\n  scope.setSpan(activeSpan);\n\n  return handleCallbackErrors(\n    () => callback(activeSpan),\n    error => {\n      activeSpan && activeSpan.setStatus('internal_error');\n      onError(error, activeSpan);\n    },\n    () => {\n      activeSpan && activeSpan.end();\n      // eslint-disable-next-line deprecation/deprecation\n      scope.setSpan(parentSpan);\n      afterFinish();\n    },\n  );\n}\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getSpan()`, as long as the function is executed while the scope is active.\n *\n * If you want to create a span that is not set as active, use {@link startInactiveSpan}.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nexport function startSpan<T>(context: StartSpanOptions, callback: (span: Span | undefined) => T): T {\n  const spanContext = normalizeContext(context);\n\n  return runWithAsyncContext(() => {\n    return withScope(context.scope, scope => {\n      // eslint-disable-next-line deprecation/deprecation\n      const hub = getCurrentHub();\n      // eslint-disable-next-line deprecation/deprecation\n      const parentSpan = scope.getSpan();\n\n      const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? undefined\n        : createChildSpanOrTransaction(hub, {\n            parentSpan,\n            spanContext,\n            forceTransaction: context.forceTransaction,\n            scope,\n          });\n\n      return handleCallbackErrors(\n        () => callback(activeSpan),\n        () => {\n          // Only update the span status if it hasn't been changed yet\n          if (activeSpan) {\n            const { status } = spanToJSON(activeSpan);\n            if (!status || status === 'ok') {\n              activeSpan.setStatus('internal_error');\n            }\n          }\n        },\n        () => activeSpan && activeSpan.end(),\n      );\n    });\n  });\n}\n\n/**\n * @deprecated Use {@link startSpan} instead.\n */\nexport const startActiveSpan = startSpan;\n\n/**\n * Similar to `Sentry.startSpan`. Wraps a function with a transaction/span, but does not finish the span\n * after the function is done automatically. You'll have to call `span.end()` manually.\n *\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nexport function startSpanManual<T>(\n  context: StartSpanOptions,\n  callback: (span: Span | undefined, finish: () => void) => T,\n): T {\n  const spanContext = normalizeContext(context);\n\n  return runWithAsyncContext(() => {\n    return withScope(context.scope, scope => {\n      // eslint-disable-next-line deprecation/deprecation\n      const hub = getCurrentHub();\n      // eslint-disable-next-line deprecation/deprecation\n      const parentSpan = scope.getSpan();\n\n      const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? undefined\n        : createChildSpanOrTransaction(hub, {\n            parentSpan,\n            spanContext,\n            forceTransaction: context.forceTransaction,\n            scope,\n          });\n\n      function finishAndSetSpan(): void {\n        activeSpan && activeSpan.end();\n      }\n\n      return handleCallbackErrors(\n        () => callback(activeSpan, finishAndSetSpan),\n        () => {\n          // Only update the span status if it hasn't been changed yet, and the span is not yet finished\n          if (activeSpan && activeSpan.isRecording()) {\n            const { status } = spanToJSON(activeSpan);\n            if (!status || status === 'ok') {\n              activeSpan.setStatus('internal_error');\n            }\n          }\n        },\n      );\n    });\n  });\n}\n\n/**\n * Creates a span. This span is not set as active, so will not get automatic instrumentation spans\n * as children or be able to be accessed via `Sentry.getSpan()`.\n *\n * If you want to create a span that is set as active, use {@link startSpan}.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate` or `tracesSampler`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nexport function startInactiveSpan(context: StartSpanOptions): Span | undefined {\n  if (!hasTracingEnabled()) {\n    return undefined;\n  }\n\n  const spanContext = normalizeContext(context);\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n  const parentSpan = context.scope\n    ? // eslint-disable-next-line deprecation/deprecation\n      context.scope.getSpan()\n    : getActiveSpan();\n\n  const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n\n  if (shouldSkipSpan) {\n    return undefined;\n  }\n\n  const scope = context.scope || getCurrentScope();\n\n  // Even though we don't actually want to make this span active on the current scope,\n  // we need to make it active on a temporary scope that we use for event processing\n  // as otherwise, it won't pick the correct span for the event when processing it\n  const temporaryScope = (scope as ScopeClass).clone();\n\n  return createChildSpanOrTransaction(hub, {\n    parentSpan,\n    spanContext,\n    forceTransaction: context.forceTransaction,\n    scope: temporaryScope,\n  });\n}\n\n/**\n * Returns the currently active span.\n */\nexport function getActiveSpan(): Span | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentScope().getSpan();\n}\n\ninterface ContinueTrace {\n  /**\n   * Continue a trace from `sentry-trace` and `baggage` values.\n   * These values can be obtained from incoming request headers,\n   * or in the browser from `<meta name=\"sentry-trace\">` and `<meta name=\"baggage\">` HTML tags.\n   *\n   * @deprecated Use the version of this function taking a callback as second parameter instead:\n   *\n   * ```\n   * Sentry.continueTrace(sentryTrace: '...', baggage: '...' }, () => {\n   *    // ...\n   * })\n   * ```\n   *\n   */\n  ({\n    sentryTrace,\n    baggage,\n  }: {\n    // eslint-disable-next-line deprecation/deprecation\n    sentryTrace: Parameters<typeof tracingContextFromHeaders>[0];\n    // eslint-disable-next-line deprecation/deprecation\n    baggage: Parameters<typeof tracingContextFromHeaders>[1];\n  }): Partial<TransactionContext>;\n\n  /**\n   * Continue a trace from `sentry-trace` and `baggage` values.\n   * These values can be obtained from incoming request headers, or in the browser from `<meta name=\"sentry-trace\">`\n   * and `<meta name=\"baggage\">` HTML tags.\n   *\n   * Spans started with `startSpan`, `startSpanManual` and `startInactiveSpan`, within the callback will automatically\n   * be attached to the incoming trace.\n   *\n   * Deprecation notice: In the next major version of the SDK the provided callback will not receive a transaction\n   * context argument.\n   */\n  <V>(\n    {\n      sentryTrace,\n      baggage,\n    }: {\n      // eslint-disable-next-line deprecation/deprecation\n      sentryTrace: Parameters<typeof tracingContextFromHeaders>[0];\n      // eslint-disable-next-line deprecation/deprecation\n      baggage: Parameters<typeof tracingContextFromHeaders>[1];\n    },\n    // TODO(v8): Remove parameter from this callback.\n    callback: (transactionContext: Partial<TransactionContext>) => V,\n  ): V;\n}\n\nexport const continueTrace: ContinueTrace = <V>(\n  {\n    sentryTrace,\n    baggage,\n  }: {\n    // eslint-disable-next-line deprecation/deprecation\n    sentryTrace: Parameters<typeof tracingContextFromHeaders>[0];\n    // eslint-disable-next-line deprecation/deprecation\n    baggage: Parameters<typeof tracingContextFromHeaders>[1];\n  },\n  callback?: (transactionContext: Partial<TransactionContext>) => V,\n): V | Partial<TransactionContext> => {\n  // TODO(v8): Change this function so it doesn't do anything besides setting the propagation context on the current scope:\n  /*\n    return withScope((scope) => {\n      const propagationContext = propagationContextFromHeaders(sentryTrace, baggage);\n      scope.setPropagationContext(propagationContext);\n      return callback();\n    })\n  */\n\n  const currentScope = getCurrentScope();\n\n  // eslint-disable-next-line deprecation/deprecation\n  const { traceparentData, dynamicSamplingContext, propagationContext } = tracingContextFromHeaders(\n    sentryTrace,\n    baggage,\n  );\n\n  currentScope.setPropagationContext(propagationContext);\n\n  if (DEBUG_BUILD && traceparentData) {\n    logger.log(`[Tracing] Continuing trace ${traceparentData.traceId}.`);\n  }\n\n  const transactionContext: Partial<TransactionContext> = {\n    ...traceparentData,\n    metadata: dropUndefinedKeys({\n      dynamicSamplingContext,\n    }),\n  };\n\n  if (!callback) {\n    return transactionContext;\n  }\n\n  return runWithAsyncContext(() => {\n    return callback(transactionContext);\n  });\n};\n\nfunction createChildSpanOrTransaction(\n  // eslint-disable-next-line deprecation/deprecation\n  hub: Hub,\n  {\n    parentSpan,\n    spanContext,\n    forceTransaction,\n    scope,\n  }: {\n    parentSpan: Span | undefined;\n    spanContext: TransactionContext;\n    forceTransaction?: boolean;\n    scope: Scope;\n  },\n): Span | undefined {\n  if (!hasTracingEnabled()) {\n    return undefined;\n  }\n\n  const isolationScope = getIsolationScope();\n\n  let span: Span | undefined;\n  if (parentSpan && !forceTransaction) {\n    // eslint-disable-next-line deprecation/deprecation\n    span = parentSpan.startChild(spanContext);\n  } else if (parentSpan) {\n    // If we forced a transaction but have a parent span, make sure to continue from the parent span, not the scope\n    const dsc = getDynamicSamplingContextFromSpan(parentSpan);\n    const { traceId, spanId: parentSpanId } = parentSpan.spanContext();\n    const sampled = spanIsSampled(parentSpan);\n\n    // eslint-disable-next-line deprecation/deprecation\n    span = hub.startTransaction({\n      traceId,\n      parentSpanId,\n      parentSampled: sampled,\n      ...spanContext,\n      metadata: {\n        dynamicSamplingContext: dsc,\n        // eslint-disable-next-line deprecation/deprecation\n        ...spanContext.metadata,\n      },\n    });\n  } else {\n    const { traceId, dsc, parentSpanId, sampled } = {\n      ...isolationScope.getPropagationContext(),\n      ...scope.getPropagationContext(),\n    };\n\n    // eslint-disable-next-line deprecation/deprecation\n    span = hub.startTransaction({\n      traceId,\n      parentSpanId,\n      parentSampled: sampled,\n      ...spanContext,\n      metadata: {\n        dynamicSamplingContext: dsc,\n        // eslint-disable-next-line deprecation/deprecation\n        ...spanContext.metadata,\n      },\n    });\n  }\n\n  // We always set this as active span on the scope\n  // In the case of this being an inactive span, we ensure to pass a detached scope in here in the first place\n  // But by having this here, we can ensure that the lookup through `getCapturedScopesOnSpan` results in the correct scope & span combo\n  // eslint-disable-next-line deprecation/deprecation\n  scope.setSpan(span);\n\n  setCapturedScopesOnSpan(span, scope, isolationScope);\n\n  return span;\n}\n\n/**\n * This converts StartSpanOptions to TransactionContext.\n * For the most part (for now) we accept the same options,\n * but some of them need to be transformed.\n *\n * Eventually the StartSpanOptions will be more aligned with OpenTelemetry.\n */\nfunction normalizeContext(context: StartSpanOptions): TransactionContext {\n  if (context.startTime) {\n    const ctx: TransactionContext & { startTime?: SpanTimeInput } = { ...context };\n    ctx.startTimestamp = spanTimeInputToSeconds(context.startTime);\n    delete ctx.startTime;\n    return ctx;\n  }\n\n  return context;\n}\n\nconst SCOPE_ON_START_SPAN_FIELD = '_sentryScope';\nconst ISOLATION_SCOPE_ON_START_SPAN_FIELD = '_sentryIsolationScope';\n\ntype SpanWithScopes = Span & {\n  [SCOPE_ON_START_SPAN_FIELD]?: Scope;\n  [ISOLATION_SCOPE_ON_START_SPAN_FIELD]?: Scope;\n};\n\nfunction setCapturedScopesOnSpan(span: Span | undefined, scope: Scope, isolationScope: Scope): void {\n  if (span) {\n    addNonEnumerableProperty(span, ISOLATION_SCOPE_ON_START_SPAN_FIELD, isolationScope);\n    addNonEnumerableProperty(span, SCOPE_ON_START_SPAN_FIELD, scope);\n  }\n}\n\n/**\n * Grabs the scope and isolation scope off a span that were active when the span was started.\n */\nexport function getCapturedScopesOnSpan(span: Span): { scope?: Scope; isolationScope?: Scope } {\n  return {\n    scope: (span as SpanWithScopes)[SCOPE_ON_START_SPAN_FIELD],\n    isolationScope: (span as SpanWithScopes)[ISOLATION_SCOPE_ON_START_SPAN_FIELD],\n  };\n}\n","import type { MeasurementUnit, Span } from '@sentry/types';\nimport type { MetricSummary } from '@sentry/types';\nimport type { Primitive } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\nimport { getActiveSpan } from '../tracing';\nimport type { MetricType } from './types';\n\n/**\n * key: bucketKey\n * value: [exportKey, MetricSummary]\n */\ntype MetricSummaryStorage = Map<string, [string, MetricSummary]>;\n\nlet SPAN_METRIC_SUMMARY: WeakMap<Span, MetricSummaryStorage> | undefined;\n\nfunction getMetricStorageForSpan(span: Span): MetricSummaryStorage | undefined {\n  return SPAN_METRIC_SUMMARY ? SPAN_METRIC_SUMMARY.get(span) : undefined;\n}\n\n/**\n * Fetches the metric summary if it exists for the passed span\n */\nexport function getMetricSummaryJsonForSpan(span: Span): Record<string, Array<MetricSummary>> | undefined {\n  const storage = getMetricStorageForSpan(span);\n\n  if (!storage) {\n    return undefined;\n  }\n  const output: Record<string, Array<MetricSummary>> = {};\n\n  for (const [, [exportKey, summary]] of storage) {\n    if (!output[exportKey]) {\n      output[exportKey] = [];\n    }\n\n    output[exportKey].push(dropUndefinedKeys(summary));\n  }\n\n  return output;\n}\n\n/**\n * Updates the metric summary on the currently active span\n */\nexport function updateMetricSummaryOnActiveSpan(\n  metricType: MetricType,\n  sanitizedName: string,\n  value: number,\n  unit: MeasurementUnit,\n  tags: Record<string, Primitive>,\n  bucketKey: string,\n): void {\n  const span = getActiveSpan();\n  if (span) {\n    const storage = getMetricStorageForSpan(span) || new Map<string, [string, MetricSummary]>();\n\n    const exportKey = `${metricType}:${sanitizedName}@${unit}`;\n    const bucketItem = storage.get(bucketKey);\n\n    if (bucketItem) {\n      const [, summary] = bucketItem;\n      storage.set(bucketKey, [\n        exportKey,\n        {\n          min: Math.min(summary.min, value),\n          max: Math.max(summary.max, value),\n          count: (summary.count += 1),\n          sum: (summary.sum += value),\n          tags: summary.tags,\n        },\n      ]);\n    } else {\n      storage.set(bucketKey, [\n        exportKey,\n        {\n          min: value,\n          max: value,\n          count: 1,\n          sum: value,\n          tags,\n        },\n      ]);\n    }\n\n    if (!SPAN_METRIC_SUMMARY) {\n      SPAN_METRIC_SUMMARY = new WeakMap();\n    }\n\n    SPAN_METRIC_SUMMARY.set(span, storage);\n  }\n}\n","import type { Span } from '@sentry/types';\n\n/** The status of an Span.\n *\n * @deprecated Use string literals - if you require type casting, cast to SpanStatusType type\n */\nexport enum SpanStatus {\n  /** The operation completed successfully. */\n  Ok = 'ok',\n  /** Deadline expired before operation could complete. */\n  DeadlineExceeded = 'deadline_exceeded',\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  Unauthenticated = 'unauthenticated',\n  /** 403 Forbidden */\n  PermissionDenied = 'permission_denied',\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  NotFound = 'not_found',\n  /** 429 Too Many Requests */\n  ResourceExhausted = 'resource_exhausted',\n  /** Client specified an invalid argument. 4xx. */\n  InvalidArgument = 'invalid_argument',\n  /** 501 Not Implemented */\n  Unimplemented = 'unimplemented',\n  /** 503 Service Unavailable */\n  Unavailable = 'unavailable',\n  /** Other/generic 5xx. */\n  InternalError = 'internal_error',\n  /** Unknown. Any non-standard HTTP status code. */\n  UnknownError = 'unknown_error',\n  /** The operation was cancelled (typically by the user). */\n  Cancelled = 'cancelled',\n  /** Already exists (409) */\n  AlreadyExists = 'already_exists',\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  FailedPrecondition = 'failed_precondition',\n  /** The operation was aborted, typically due to a concurrency issue. */\n  Aborted = 'aborted',\n  /** Operation was attempted past the valid range. */\n  OutOfRange = 'out_of_range',\n  /** Unrecoverable data loss or corruption */\n  DataLoss = 'data_loss',\n}\n\nexport type SpanStatusType =\n  /** The operation completed successfully. */\n  | 'ok'\n  /** Deadline expired before operation could complete. */\n  | 'deadline_exceeded'\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  | 'unauthenticated'\n  /** 403 Forbidden */\n  | 'permission_denied'\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  | 'not_found'\n  /** 429 Too Many Requests */\n  | 'resource_exhausted'\n  /** Client specified an invalid argument. 4xx. */\n  | 'invalid_argument'\n  /** 501 Not Implemented */\n  | 'unimplemented'\n  /** 503 Service Unavailable */\n  | 'unavailable'\n  /** Other/generic 5xx. */\n  | 'internal_error'\n  /** Unknown. Any non-standard HTTP status code. */\n  | 'unknown_error'\n  /** The operation was cancelled (typically by the user). */\n  | 'cancelled'\n  /** Already exists (409) */\n  | 'already_exists'\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  | 'failed_precondition'\n  /** The operation was aborted, typically due to a concurrency issue. */\n  | 'aborted'\n  /** Operation was attempted past the valid range. */\n  | 'out_of_range'\n  /** Unrecoverable data loss or corruption */\n  | 'data_loss';\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nexport function getSpanStatusFromHttpCode(httpStatus: number): SpanStatusType {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return 'ok';\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return 'unauthenticated';\n      case 403:\n        return 'permission_denied';\n      case 404:\n        return 'not_found';\n      case 409:\n        return 'already_exists';\n      case 413:\n        return 'failed_precondition';\n      case 429:\n        return 'resource_exhausted';\n      default:\n        return 'invalid_argument';\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return 'unimplemented';\n      case 503:\n        return 'unavailable';\n      case 504:\n        return 'deadline_exceeded';\n      default:\n        return 'internal_error';\n    }\n  }\n\n  return 'unknown_error';\n}\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @deprecated Use {@link spanStatusFromHttpCode} instead.\n * This export will be removed in v8 as the signature contains a typo.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nexport const spanStatusfromHttpCode = getSpanStatusFromHttpCode;\n\n/**\n * Sets the Http status attributes on the current span based on the http code.\n * Additionally, the span's status is updated, depending on the http code.\n */\nexport function setHttpStatus(span: Span, httpStatus: number): void {\n  // TODO (v8): Remove these calls\n  // Relay does not require us to send the status code as a tag\n  // For now, just because users might expect it to land as a tag we keep sending it.\n  // Same with data.\n  // In v8, we replace both, simply with\n  // span.setAttribute('http.response.status_code', httpStatus);\n\n  // eslint-disable-next-line deprecation/deprecation\n  span.setTag('http.status_code', String(httpStatus));\n  // eslint-disable-next-line deprecation/deprecation\n  span.setData('http.response.status_code', httpStatus);\n\n  const spanStatus = getSpanStatusFromHttpCode(httpStatus);\n  if (spanStatus !== 'unknown_error') {\n    span.setStatus(spanStatus);\n  }\n}\n","/* eslint-disable max-lines */\nimport type {\n  Instrumenter,\n  Measurements,\n  Primitive,\n  Span as SpanInterface,\n  SpanAttributeValue,\n  SpanAttributes,\n  SpanContext,\n  SpanContextData,\n  SpanJSON,\n  SpanOrigin,\n  SpanTimeInput,\n  TraceContext,\n  Transaction,\n} from '@sentry/types';\nimport { dropUndefinedKeys, logger, timestampInSeconds, uuid4 } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { getMetricSummaryJsonForSpan } from '../metrics/metric-summary';\nimport {\n  SEMANTIC_ATTRIBUTE_PROFILE_ID,\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n} from '../semanticAttributes';\nimport { getRootSpan } from '../utils/getRootSpan';\nimport {\n  TRACE_FLAG_NONE,\n  TRACE_FLAG_SAMPLED,\n  spanTimeInputToSeconds,\n  spanToJSON,\n  spanToTraceContext,\n  spanToTraceHeader,\n} from '../utils/spanUtils';\nimport type { SpanStatusType } from './spanstatus';\nimport { setHttpStatus } from './spanstatus';\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nexport class SpanRecorder {\n  public spans: Span[];\n\n  private readonly _maxlen: number;\n\n  public constructor(maxlen: number = 1000) {\n    this._maxlen = maxlen;\n    this.spans = [];\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n  public add(span: Span): void {\n    if (this.spans.length > this._maxlen) {\n      // eslint-disable-next-line deprecation/deprecation\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nexport class Span implements SpanInterface {\n  /**\n   * Tags for the span.\n   * @deprecated Use `spanToJSON(span).atttributes` instead.\n   */\n  public tags: { [key: string]: Primitive };\n\n  /**\n   * Data for the span.\n   * @deprecated Use `spanToJSON(span).atttributes` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public data: { [key: string]: any };\n\n  /**\n   * List of spans that were finalized\n   *\n   * @deprecated This property will no longer be public. Span recording will be handled internally.\n   */\n  public spanRecorder?: SpanRecorder;\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `Sentry.getRootSpan()` instead\n   */\n  public transaction?: Transaction;\n\n  /**\n   * The instrumenter that created this span.\n   *\n   * TODO (v8): This can probably be replaced by an `instanceOf` check of the span class.\n   *            the instrumenter can only be sentry or otel so we can check the span instance\n   *            to verify which one it is and remove this field entirely.\n   *\n   * @deprecated This field will be removed.\n   */\n  public instrumenter: Instrumenter;\n\n  protected _traceId: string;\n  protected _spanId: string;\n  protected _parentSpanId?: string | undefined;\n  protected _sampled: boolean | undefined;\n  protected _name?: string | undefined;\n  protected _attributes: SpanAttributes;\n  /** Epoch timestamp in seconds when the span started. */\n  protected _startTime: number;\n  /** Epoch timestamp in seconds when the span ended. */\n  protected _endTime?: number | undefined;\n  /** Internal keeper of the status */\n  protected _status?: SpanStatusType | string | undefined;\n  protected _exclusiveTime?: number;\n\n  protected _measurements: Measurements;\n\n  private _logMessage?: string;\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n  public constructor(spanContext: SpanContext = {}) {\n    this._traceId = spanContext.traceId || uuid4();\n    this._spanId = spanContext.spanId || uuid4().substring(16);\n    this._startTime = spanContext.startTimestamp || timestampInSeconds();\n    // eslint-disable-next-line deprecation/deprecation\n    this.tags = spanContext.tags ? { ...spanContext.tags } : {};\n    // eslint-disable-next-line deprecation/deprecation\n    this.data = spanContext.data ? { ...spanContext.data } : {};\n    // eslint-disable-next-line deprecation/deprecation\n    this.instrumenter = spanContext.instrumenter || 'sentry';\n\n    this._attributes = {};\n    this.setAttributes({\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: spanContext.origin || 'manual',\n      [SEMANTIC_ATTRIBUTE_SENTRY_OP]: spanContext.op,\n      ...spanContext.attributes,\n    });\n\n    // eslint-disable-next-line deprecation/deprecation\n    this._name = spanContext.name || spanContext.description;\n\n    if (spanContext.parentSpanId) {\n      this._parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this._sampled = spanContext.sampled;\n    }\n    if (spanContext.status) {\n      this._status = spanContext.status;\n    }\n    if (spanContext.endTimestamp) {\n      this._endTime = spanContext.endTimestamp;\n    }\n    if (spanContext.exclusiveTime !== undefined) {\n      this._exclusiveTime = spanContext.exclusiveTime;\n    }\n    this._measurements = spanContext.measurements ? { ...spanContext.measurements } : {};\n  }\n\n  // This rule conflicts with another eslint rule :(\n  /* eslint-disable @typescript-eslint/member-ordering */\n\n  /**\n   * An alias for `description` of the Span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n  public get name(): string {\n    return this._name || '';\n  }\n\n  /**\n   * Update the name of the span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n  public set name(name: string) {\n    this.updateName(name);\n  }\n\n  /**\n   * Get the description of the Span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n  public get description(): string | undefined {\n    return this._name;\n  }\n\n  /**\n   * Get the description of the Span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n  public set description(description: string | undefined) {\n    this._name = description;\n  }\n\n  /**\n   * The ID of the trace.\n   * @deprecated Use `spanContext().traceId` instead.\n   */\n  public get traceId(): string {\n    return this._traceId;\n  }\n\n  /**\n   * The ID of the trace.\n   * @deprecated You cannot update the traceId of a span after span creation.\n   */\n  public set traceId(traceId: string) {\n    this._traceId = traceId;\n  }\n\n  /**\n   * The ID of the span.\n   * @deprecated Use `spanContext().spanId` instead.\n   */\n  public get spanId(): string {\n    return this._spanId;\n  }\n\n  /**\n   * The ID of the span.\n   * @deprecated You cannot update the spanId of a span after span creation.\n   */\n  public set spanId(spanId: string) {\n    this._spanId = spanId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `startSpan` functions instead.\n   */\n  public set parentSpanId(string) {\n    this._parentSpanId = string;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToJSON(span).parent_span_id` instead.\n   */\n  public get parentSpanId(): string | undefined {\n    return this._parentSpanId;\n  }\n\n  /**\n   * Was this span chosen to be sent as part of the sample?\n   * @deprecated Use `isRecording()` instead.\n   */\n  public get sampled(): boolean | undefined {\n    return this._sampled;\n  }\n\n  /**\n   * Was this span chosen to be sent as part of the sample?\n   * @deprecated You cannot update the sampling decision of a span after span creation.\n   */\n  public set sampled(sampled: boolean | undefined) {\n    this._sampled = sampled;\n  }\n\n  /**\n   * Attributes for the span.\n   * @deprecated Use `spanToJSON(span).atttributes` instead.\n   */\n  public get attributes(): SpanAttributes {\n    return this._attributes;\n  }\n\n  /**\n   * Attributes for the span.\n   * @deprecated Use `setAttributes()` instead.\n   */\n  public set attributes(attributes: SpanAttributes) {\n    this._attributes = attributes;\n  }\n\n  /**\n   * Timestamp in seconds (epoch time) indicating when the span started.\n   * @deprecated Use `spanToJSON()` instead.\n   */\n  public get startTimestamp(): number {\n    return this._startTime;\n  }\n\n  /**\n   * Timestamp in seconds (epoch time) indicating when the span started.\n   * @deprecated In v8, you will not be able to update the span start time after creation.\n   */\n  public set startTimestamp(startTime: number) {\n    this._startTime = startTime;\n  }\n\n  /**\n   * Timestamp in seconds when the span ended.\n   * @deprecated Use `spanToJSON()` instead.\n   */\n  public get endTimestamp(): number | undefined {\n    return this._endTime;\n  }\n\n  /**\n   * Timestamp in seconds when the span ended.\n   * @deprecated Set the end time via `span.end()` instead.\n   */\n  public set endTimestamp(endTime: number | undefined) {\n    this._endTime = endTime;\n  }\n\n  /**\n   * The status of the span.\n   *\n   * @deprecated Use `spanToJSON().status` instead to get the status.\n   */\n  public get status(): SpanStatusType | string | undefined {\n    return this._status;\n  }\n\n  /**\n   * The status of the span.\n   *\n   * @deprecated Use `.setStatus()` instead to set or update the status.\n   */\n  public set status(status: SpanStatusType | string | undefined) {\n    this._status = status;\n  }\n\n  /**\n   * Operation of the span\n   *\n   * @deprecated Use `spanToJSON().op` to read the op instead.\n   */\n  public get op(): string | undefined {\n    return this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP] as string | undefined;\n  }\n\n  /**\n   * Operation of the span\n   *\n   * @deprecated Use `startSpan()` functions to set or `span.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_OP, 'op')\n   *             to update the span instead.\n   */\n  public set op(op: string | undefined) {\n    this.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_OP, op);\n  }\n\n  /**\n   * The origin of the span, giving context about what created the span.\n   *\n   * @deprecated Use `spanToJSON().origin` to read the origin instead.\n   */\n  public get origin(): SpanOrigin | undefined {\n    return this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] as SpanOrigin | undefined;\n  }\n\n  /**\n   * The origin of the span, giving context about what created the span.\n   *\n   * @deprecated Use `startSpan()` functions to set the origin instead.\n   */\n  public set origin(origin: SpanOrigin | undefined) {\n    this.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, origin);\n  }\n\n  /* eslint-enable @typescript-eslint/member-ordering */\n\n  /** @inheritdoc */\n  public spanContext(): SpanContextData {\n    const { _spanId: spanId, _traceId: traceId, _sampled: sampled } = this;\n    return {\n      spanId,\n      traceId,\n      traceFlags: sampled ? TRACE_FLAG_SAMPLED : TRACE_FLAG_NONE,\n    };\n  }\n\n  /**\n   * Creates a new `Span` while setting the current `Span.id` as `parentSpanId`.\n   * Also the `sampled` decision will be inherited.\n   *\n   * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n   */\n  public startChild(\n    spanContext?: Pick<SpanContext, Exclude<keyof SpanContext, 'sampled' | 'traceId' | 'parentSpanId'>>,\n  ): SpanInterface {\n    const childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this._spanId,\n      sampled: this._sampled,\n      traceId: this._traceId,\n    });\n\n    // eslint-disable-next-line deprecation/deprecation\n    childSpan.spanRecorder = this.spanRecorder;\n    // eslint-disable-next-line deprecation/deprecation\n    if (childSpan.spanRecorder) {\n      // eslint-disable-next-line deprecation/deprecation\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    const rootSpan = getRootSpan(this);\n    // TODO: still set span.transaction here until we have a more permanent solution\n    // Probably similarly to the weakmap we hold in node-experimental\n    // eslint-disable-next-line deprecation/deprecation\n    childSpan.transaction = rootSpan as Transaction;\n\n    if (DEBUG_BUILD && rootSpan) {\n      const opStr = (spanContext && spanContext.op) || '< unknown op >';\n      const nameStr = spanToJSON(childSpan).description || '< unknown name >';\n      const idStr = rootSpan.spanContext().spanId;\n\n      const logMessage = `[Tracing] Starting '${opStr}' span on transaction '${nameStr}' (${idStr}).`;\n      logger.log(logMessage);\n      this._logMessage = logMessage;\n    }\n\n    return childSpan;\n  }\n\n  /**\n   * Sets the tag attribute on the current span.\n   *\n   * Can also be used to unset a tag, by passing `undefined`.\n   *\n   * @param key Tag key\n   * @param value Tag value\n   * @deprecated Use `setAttribute()` instead.\n   */\n  public setTag(key: string, value: Primitive): this {\n    // eslint-disable-next-line deprecation/deprecation\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * Sets the data attribute on the current span\n   * @param key Data key\n   * @param value Data value\n   * @deprecated Use `setAttribute()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setData(key: string, value: any): this {\n    // eslint-disable-next-line deprecation/deprecation\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /** @inheritdoc */\n  public setAttribute(key: string, value: SpanAttributeValue | undefined): void {\n    if (value === undefined) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._attributes[key];\n    } else {\n      this._attributes[key] = value;\n    }\n  }\n\n  /** @inheritdoc */\n  public setAttributes(attributes: SpanAttributes): void {\n    Object.keys(attributes).forEach(key => this.setAttribute(key, attributes[key]));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setStatus(value: SpanStatusType): this {\n    this._status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top-level `setHttpStatus()` instead.\n   */\n  public setHttpStatus(httpStatus: number): this {\n    setHttpStatus(this, httpStatus);\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @deprecated Use `.updateName()` instead.\n   */\n  public setName(name: string): void {\n    this.updateName(name);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public updateName(name: string): this {\n    this._name = name;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToJSON(span).status === 'ok'` instead.\n   */\n  public isSuccess(): boolean {\n    return this._status === 'ok';\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `.end()` instead.\n   */\n  public finish(endTimestamp?: number): void {\n    return this.end(endTimestamp);\n  }\n\n  /** @inheritdoc */\n  public end(endTimestamp?: SpanTimeInput): void {\n    // If already ended, skip\n    if (this._endTime) {\n      return;\n    }\n    const rootSpan = getRootSpan(this);\n    if (\n      DEBUG_BUILD &&\n      // Don't call this for transactions\n      rootSpan &&\n      rootSpan.spanContext().spanId !== this._spanId\n    ) {\n      const logMessage = this._logMessage;\n      if (logMessage) {\n        logger.log((logMessage as string).replace('Starting', 'Finishing'));\n      }\n    }\n\n    this._endTime = spanTimeInputToSeconds(endTimestamp);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToTraceHeader()` instead.\n   */\n  public toTraceparent(): string {\n    return spanToTraceHeader(this);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToJSON()` or access the fields directly instead.\n   */\n  public toContext(): SpanContext {\n    return dropUndefinedKeys({\n      data: this._getData(),\n      description: this._name,\n      endTimestamp: this._endTime,\n      // eslint-disable-next-line deprecation/deprecation\n      op: this.op,\n      parentSpanId: this._parentSpanId,\n      sampled: this._sampled,\n      spanId: this._spanId,\n      startTimestamp: this._startTime,\n      status: this._status,\n      // eslint-disable-next-line deprecation/deprecation\n      tags: this.tags,\n      traceId: this._traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Update the fields directly instead.\n   */\n  public updateWithContext(spanContext: SpanContext): this {\n    // eslint-disable-next-line deprecation/deprecation\n    this.data = spanContext.data || {};\n    // eslint-disable-next-line deprecation/deprecation\n    this._name = spanContext.name || spanContext.description;\n    this._endTime = spanContext.endTimestamp;\n    // eslint-disable-next-line deprecation/deprecation\n    this.op = spanContext.op;\n    this._parentSpanId = spanContext.parentSpanId;\n    this._sampled = spanContext.sampled;\n    this._spanId = spanContext.spanId || this._spanId;\n    this._startTime = spanContext.startTimestamp || this._startTime;\n    this._status = spanContext.status;\n    // eslint-disable-next-line deprecation/deprecation\n    this.tags = spanContext.tags || {};\n    this._traceId = spanContext.traceId || this._traceId;\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToTraceContext()` util function instead.\n   */\n  public getTraceContext(): TraceContext {\n    return spanToTraceContext(this);\n  }\n\n  /**\n   * Get JSON representation of this span.\n   *\n   * @hidden\n   * @internal This method is purely for internal purposes and should not be used outside\n   * of SDK code. If you need to get a JSON representation of a span,\n   * use `spanToJSON(span)` instead.\n   */\n  public getSpanJSON(): SpanJSON {\n    return dropUndefinedKeys({\n      data: this._getData(),\n      description: this._name,\n      op: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP] as string | undefined,\n      parent_span_id: this._parentSpanId,\n      span_id: this._spanId,\n      start_timestamp: this._startTime,\n      status: this._status,\n      // eslint-disable-next-line deprecation/deprecation\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this._endTime,\n      trace_id: this._traceId,\n      origin: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] as SpanOrigin | undefined,\n      _metrics_summary: getMetricSummaryJsonForSpan(this),\n      profile_id: this._attributes[SEMANTIC_ATTRIBUTE_PROFILE_ID] as string | undefined,\n      exclusive_time: this._exclusiveTime,\n      measurements: Object.keys(this._measurements).length > 0 ? this._measurements : undefined,\n    });\n  }\n\n  /** @inheritdoc */\n  public isRecording(): boolean {\n    return !this._endTime && !!this._sampled;\n  }\n\n  /**\n   * Convert the object to JSON.\n   * @deprecated Use `spanToJSON(span)` instead.\n   */\n  public toJSON(): SpanJSON {\n    return this.getSpanJSON();\n  }\n\n  /**\n   * Get the merged data for this span.\n   * For now, this combines `data` and `attributes` together,\n   * until eventually we can ingest `attributes` directly.\n   */\n  private _getData():\n    | {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        [key: string]: any;\n      }\n    | undefined {\n    // eslint-disable-next-line deprecation/deprecation\n    const { data, _attributes: attributes } = this;\n\n    const hasData = Object.keys(data).length > 0;\n    const hasAttributes = Object.keys(attributes).length > 0;\n\n    if (!hasData && !hasAttributes) {\n      return undefined;\n    }\n\n    if (hasData && hasAttributes) {\n      return {\n        ...data,\n        ...attributes,\n      };\n    }\n\n    return hasData ? data : attributes;\n  }\n}\n","import type {\n  Context,\n  Contexts,\n  DynamicSamplingContext,\n  MeasurementUnit,\n  SpanTimeInput,\n  Transaction as TransactionInterface,\n  TransactionContext,\n  TransactionEvent,\n  TransactionMetadata,\n} from '@sentry/types';\nimport { dropUndefinedKeys, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { Hub } from '../hub';\nimport { getCurrentHub } from '../hub';\nimport { getMetricSummaryJsonForSpan } from '../metrics/metric-summary';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE } from '../semanticAttributes';\nimport { spanTimeInputToSeconds, spanToJSON, spanToTraceContext } from '../utils/spanUtils';\nimport { getDynamicSamplingContextFromSpan } from './dynamicSamplingContext';\nimport { Span as SpanClass, SpanRecorder } from './span';\nimport { getCapturedScopesOnSpan } from './trace';\n\n/** JSDoc */\nexport class Transaction extends SpanClass implements TransactionInterface {\n  /**\n   * The reference to the current hub.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public _hub: Hub;\n\n  protected _name: string;\n\n  private _contexts: Contexts;\n\n  private _trimEnd?: boolean | undefined;\n\n  // DO NOT yet remove this property, it is used in a hack for v7 backwards compatibility.\n  private _frozenDynamicSamplingContext: Readonly<Partial<DynamicSamplingContext>> | undefined;\n\n  private _metadata: Partial<TransactionMetadata>;\n\n  /**\n   * This constructor should never be called manually. Those instrumenting tracing should use\n   * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   *\n   * @deprecated Transactions will be removed in v8. Use spans instead.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public constructor(transactionContext: TransactionContext, hub?: Hub) {\n    super(transactionContext);\n    this._contexts = {};\n\n    // eslint-disable-next-line deprecation/deprecation\n    this._hub = hub || getCurrentHub();\n\n    this._name = transactionContext.name || '';\n\n    this._metadata = {\n      // eslint-disable-next-line deprecation/deprecation\n      ...transactionContext.metadata,\n    };\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    // this is because transactions are also spans, and spans have a transaction pointer\n    // TODO (v8): Replace this with another way to set the root span\n    // eslint-disable-next-line deprecation/deprecation\n    this.transaction = this;\n\n    // If Dynamic Sampling Context is provided during the creation of the transaction, we freeze it as it usually means\n    // there is incoming Dynamic Sampling Context. (Either through an incoming request, a baggage meta-tag, or other means)\n    const incomingDynamicSamplingContext = this._metadata.dynamicSamplingContext;\n    if (incomingDynamicSamplingContext) {\n      // We shallow copy this in case anything writes to the original reference of the passed in `dynamicSamplingContext`\n      this._frozenDynamicSamplingContext = { ...incomingDynamicSamplingContext };\n    }\n  }\n\n  // This sadly conflicts with the getter/setter ordering :(\n  /* eslint-disable @typescript-eslint/member-ordering */\n\n  /**\n   * Getter for `name` property.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Setter for `name` property, which also sets `source` as custom.\n   * @deprecated Use `updateName()` and `setMetadata()` instead.\n   */\n  public set name(newName: string) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.setName(newName);\n  }\n\n  /**\n   * Get the metadata for this transaction.\n   * @deprecated Use `spanGetMetadata(transaction)` instead.\n   */\n  public get metadata(): TransactionMetadata {\n    // We merge attributes in for backwards compatibility\n    return {\n      // Defaults\n      // eslint-disable-next-line deprecation/deprecation\n      source: 'custom',\n      spanMetadata: {},\n\n      // Legacy metadata\n      ...this._metadata,\n\n      // From attributes\n      ...(this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] && {\n        source: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] as TransactionMetadata['source'],\n      }),\n      ...(this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE] && {\n        sampleRate: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE] as TransactionMetadata['sampleRate'],\n      }),\n    };\n  }\n\n  /**\n   * Update the metadata for this transaction.\n   * @deprecated Use `spanGetMetadata(transaction)` instead.\n   */\n  public set metadata(metadata: TransactionMetadata) {\n    this._metadata = metadata;\n  }\n\n  /* eslint-enable @typescript-eslint/member-ordering */\n\n  /**\n   * Setter for `name` property, which also sets `source` on the metadata.\n   *\n   * @deprecated Use `.updateName()` and `.setAttribute()` instead.\n   */\n  public setName(name: string, source: TransactionMetadata['source'] = 'custom'): void {\n    this._name = name;\n    this.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, source);\n  }\n\n  /** @inheritdoc */\n  public updateName(name: string): this {\n    this._name = name;\n    return this;\n  }\n\n  /**\n   * Attaches SpanRecorder to the span itself\n   * @param maxlen maximum number of spans that can be recorded\n   */\n  public initSpanRecorder(maxlen: number = 1000): void {\n    // eslint-disable-next-line deprecation/deprecation\n    if (!this.spanRecorder) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.spanRecorder = new SpanRecorder(maxlen);\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Set the context of a transaction event.\n   * @deprecated Use either `.setAttribute()`, or set the context on the scope before creating the transaction.\n   */\n  public setContext(key: string, context: Context | null): void {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use top-level `setMeasurement()` instead.\n   */\n  public setMeasurement(name: string, value: number, unit: MeasurementUnit = ''): void {\n    this._measurements[name] = { value, unit };\n  }\n\n  /**\n   * Store metadata on this transaction.\n   * @deprecated Use attributes or store data on the scope instead.\n   */\n  public setMetadata(newMetadata: Partial<TransactionMetadata>): void {\n    this._metadata = { ...this._metadata, ...newMetadata };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public end(endTimestamp?: SpanTimeInput): string | undefined {\n    const timestampInS = spanTimeInputToSeconds(endTimestamp);\n    const transaction = this._finishTransaction(timestampInS);\n    if (!transaction) {\n      return undefined;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    return this._hub.captureEvent(transaction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toContext(): TransactionContext {\n    // eslint-disable-next-line deprecation/deprecation\n    const spanContext = super.toContext();\n\n    return dropUndefinedKeys({\n      ...spanContext,\n      name: this._name,\n      trimEnd: this._trimEnd,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public updateWithContext(transactionContext: TransactionContext): this {\n    // eslint-disable-next-line deprecation/deprecation\n    super.updateWithContext(transactionContext);\n\n    this._name = transactionContext.name || '';\n    this._trimEnd = transactionContext.trimEnd;\n\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @experimental\n   *\n   * @deprecated Use top-level `getDynamicSamplingContextFromSpan` instead.\n   */\n  public getDynamicSamplingContext(): Readonly<Partial<DynamicSamplingContext>> {\n    return getDynamicSamplingContextFromSpan(this);\n  }\n\n  /**\n   * Override the current hub with a new one.\n   * Used if you want another hub to finish the transaction.\n   *\n   * @internal\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public setHub(hub: Hub): void {\n    this._hub = hub;\n  }\n\n  /**\n   * Get the profile id of the transaction.\n   */\n  public getProfileId(): string | undefined {\n    if (this._contexts !== undefined && this._contexts['profile'] !== undefined) {\n      return this._contexts['profile'].profile_id as string;\n    }\n    return undefined;\n  }\n\n  /**\n   * Finish the transaction & prepare the event to send to Sentry.\n   */\n  protected _finishTransaction(endTimestamp?: number): TransactionEvent | undefined {\n    // This transaction is already finished, so we should not flush it again.\n    if (this._endTime !== undefined) {\n      return undefined;\n    }\n\n    if (!this._name) {\n      DEBUG_BUILD && logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this._name = '<unlabeled transaction>';\n    }\n\n    // just sets the end timestamp\n    super.end(endTimestamp);\n\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this._hub.getClient();\n    if (client && client.emit) {\n      client.emit('finishTransaction', this);\n    }\n\n    if (this._sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      DEBUG_BUILD && logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    const finishedSpans = this.spanRecorder\n      ? // eslint-disable-next-line deprecation/deprecation\n        this.spanRecorder.spans.filter(span => span !== this && spanToJSON(span).timestamp)\n      : [];\n\n    if (this._trimEnd && finishedSpans.length > 0) {\n      const endTimes = finishedSpans.map(span => spanToJSON(span).timestamp).filter(Boolean) as number[];\n      this._endTime = endTimes.reduce((prev, current) => {\n        return prev > current ? prev : current;\n      });\n    }\n\n    const { scope: capturedSpanScope, isolationScope: capturedSpanIsolationScope } = getCapturedScopesOnSpan(this);\n\n    // eslint-disable-next-line deprecation/deprecation\n    const { metadata } = this;\n    // eslint-disable-next-line deprecation/deprecation\n    const { source } = metadata;\n\n    const transaction: TransactionEvent = {\n      contexts: {\n        ...this._contexts,\n        // We don't want to override trace context\n        trace: spanToTraceContext(this),\n      },\n      // TODO: Pass spans serialized via `spanToJSON()` here instead in v8.\n      spans: finishedSpans,\n      start_timestamp: this._startTime,\n      // eslint-disable-next-line deprecation/deprecation\n      tags: this.tags,\n      timestamp: this._endTime,\n      transaction: this._name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        ...metadata,\n        capturedSpanScope,\n        capturedSpanIsolationScope,\n        ...dropUndefinedKeys({\n          dynamicSamplingContext: getDynamicSamplingContextFromSpan(this),\n        }),\n      },\n      _metrics_summary: getMetricSummaryJsonForSpan(this),\n      ...(source && {\n        transaction_info: {\n          source,\n        },\n      }),\n    };\n\n    const hasMeasurements = Object.keys(this._measurements).length > 0;\n\n    if (hasMeasurements) {\n      DEBUG_BUILD &&\n        logger.log(\n          '[Measurements] Adding measurements to transaction',\n          JSON.stringify(this._measurements, undefined, 2),\n        );\n      transaction.measurements = this._measurements;\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    DEBUG_BUILD && logger.log(`[Tracing] Finishing ${this.op} transaction: ${this._name}.`);\n\n    return transaction;\n  }\n}\n","/* eslint-disable max-lines */\nimport type { SpanTimeInput, TransactionContext } from '@sentry/types';\nimport { logger, timestampInSeconds } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { Hub } from '../hub';\nimport { spanTimeInputToSeconds, spanToJSON } from '../utils/spanUtils';\nimport type { Span } from './span';\nimport { SpanRecorder } from './span';\nimport { Transaction } from './transaction';\n\nexport const TRACING_DEFAULTS = {\n  idleTimeout: 1000,\n  finalTimeout: 30000,\n  heartbeatInterval: 5000,\n};\n\nconst FINISH_REASON_TAG = 'finishReason';\n\nconst IDLE_TRANSACTION_FINISH_REASONS = [\n  'heartbeatFailed',\n  'idleTimeout',\n  'documentHidden',\n  'finalTimeout',\n  'externalFinish',\n  'cancelled',\n];\n\n/**\n * @inheritDoc\n */\nexport class IdleTransactionSpanRecorder extends SpanRecorder {\n  public constructor(\n    private readonly _pushActivity: (id: string) => void,\n    private readonly _popActivity: (id: string) => void,\n    public transactionSpanId: string,\n    maxlen?: number,\n  ) {\n    super(maxlen);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public add(span: Span): void {\n    // We should make sure we do not push and pop activities for\n    // the transaction that this span recorder belongs to.\n    if (span.spanContext().spanId !== this.transactionSpanId) {\n      // We patch span.end() to pop an activity after setting an endTimestamp.\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      const originalEnd = span.end;\n      span.end = (...rest: unknown[]) => {\n        this._popActivity(span.spanContext().spanId);\n        return originalEnd.apply(span, rest);\n      };\n\n      // We should only push new activities if the span does not have an end timestamp.\n      if (spanToJSON(span).timestamp === undefined) {\n        this._pushActivity(span.spanContext().spanId);\n      }\n    }\n\n    super.add(span);\n  }\n}\n\nexport type BeforeFinishCallback = (transactionSpan: IdleTransaction, endTimestamp: number) => void;\n\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nexport class IdleTransaction extends Transaction {\n  // Activities store a list of active spans\n  public activities: Record<string, boolean>;\n  // Track state of activities in previous heartbeat\n  private _prevHeartbeatString: string | undefined;\n\n  // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n  private _heartbeatCounter: number;\n\n  // We should not use heartbeat if we finished a transaction\n  private _finished: boolean;\n\n  // Idle timeout was canceled and we should finish the transaction with the last span end.\n  private _idleTimeoutCanceledPermanently: boolean;\n\n  private readonly _beforeFinishCallbacks: BeforeFinishCallback[];\n\n  /**\n   * Timer that tracks Transaction idleTimeout\n   */\n  private _idleTimeoutID: ReturnType<typeof setTimeout> | undefined;\n\n  private _finishReason: (typeof IDLE_TRANSACTION_FINISH_REASONS)[number];\n\n  private _autoFinishAllowed: boolean;\n\n  /**\n   * @deprecated Transactions will be removed in v8. Use spans instead.\n   */\n  public constructor(\n    transactionContext: TransactionContext,\n    // eslint-disable-next-line deprecation/deprecation\n    private readonly _idleHub: Hub,\n    /**\n     * The time to wait in ms until the idle transaction will be finished. This timer is started each time\n     * there are no active spans on this transaction.\n     */\n    private readonly _idleTimeout: number = TRACING_DEFAULTS.idleTimeout,\n    /**\n     * The final value in ms that a transaction cannot exceed\n     */\n    private readonly _finalTimeout: number = TRACING_DEFAULTS.finalTimeout,\n    private readonly _heartbeatInterval: number = TRACING_DEFAULTS.heartbeatInterval,\n    // Whether or not the transaction should put itself on the scope when it starts and pop itself off when it ends\n    private readonly _onScope: boolean = false,\n    /**\n     * When set to `true`, will disable the idle timeout (`_idleTimeout` option) and heartbeat mechanisms (`_heartbeatInterval`\n     * option) until the `sendAutoFinishSignal()` method is called. The final timeout mechanism (`_finalTimeout` option)\n     * will not be affected by this option, meaning the transaction will definitely be finished when the final timeout is\n     * reached, no matter what this option is configured to.\n     *\n     * Defaults to `false`.\n     */\n    delayAutoFinishUntilSignal: boolean = false,\n  ) {\n    super(transactionContext, _idleHub);\n\n    this.activities = {};\n    this._heartbeatCounter = 0;\n    this._finished = false;\n    this._idleTimeoutCanceledPermanently = false;\n    this._beforeFinishCallbacks = [];\n    this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[4];\n    this._autoFinishAllowed = !delayAutoFinishUntilSignal;\n\n    if (_onScope) {\n      // We set the transaction here on the scope so error events pick up the trace\n      // context and attach it to the error.\n      DEBUG_BUILD && logger.log(`Setting idle transaction on scope. Span ID: ${this.spanContext().spanId}`);\n      // eslint-disable-next-line deprecation/deprecation\n      _idleHub.getScope().setSpan(this);\n    }\n\n    if (!delayAutoFinishUntilSignal) {\n      this._restartIdleTimeout();\n    }\n\n    setTimeout(() => {\n      if (!this._finished) {\n        this.setStatus('deadline_exceeded');\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[3];\n        this.end();\n      }\n    }, this._finalTimeout);\n  }\n\n  /** {@inheritDoc} */\n  public end(endTimestamp?: SpanTimeInput): string | undefined {\n    const endTimestampInS = spanTimeInputToSeconds(endTimestamp);\n\n    this._finished = true;\n    this.activities = {};\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.op === 'ui.action.click') {\n      this.setAttribute(FINISH_REASON_TAG, this._finishReason);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.spanRecorder) {\n      DEBUG_BUILD &&\n        // eslint-disable-next-line deprecation/deprecation\n        logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestampInS * 1000).toISOString(), this.op);\n\n      for (const callback of this._beforeFinishCallbacks) {\n        callback(this, endTimestampInS);\n      }\n\n      // eslint-disable-next-line deprecation/deprecation\n      this.spanRecorder.spans = this.spanRecorder.spans.filter((span: Span) => {\n        // If we are dealing with the transaction itself, we just return it\n        if (span.spanContext().spanId === this.spanContext().spanId) {\n          return true;\n        }\n\n        // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n        if (!spanToJSON(span).timestamp) {\n          span.setStatus('cancelled');\n          span.end(endTimestampInS);\n          DEBUG_BUILD &&\n            logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n        }\n\n        const { start_timestamp: startTime, timestamp: endTime } = spanToJSON(span);\n        const spanStartedBeforeTransactionFinish = startTime && startTime < endTimestampInS;\n\n        // Add a delta with idle timeout so that we prevent false positives\n        const timeoutWithMarginOfError = (this._finalTimeout + this._idleTimeout) / 1000;\n        const spanEndedBeforeFinalTimeout = endTime && startTime && endTime - startTime < timeoutWithMarginOfError;\n\n        if (DEBUG_BUILD) {\n          const stringifiedSpan = JSON.stringify(span, undefined, 2);\n          if (!spanStartedBeforeTransactionFinish) {\n            logger.log('[Tracing] discarding Span since it happened after Transaction was finished', stringifiedSpan);\n          } else if (!spanEndedBeforeFinalTimeout) {\n            logger.log('[Tracing] discarding Span since it finished after Transaction final timeout', stringifiedSpan);\n          }\n        }\n\n        return spanStartedBeforeTransactionFinish && spanEndedBeforeFinalTimeout;\n      });\n\n      DEBUG_BUILD && logger.log('[Tracing] flushing IdleTransaction');\n    } else {\n      DEBUG_BUILD && logger.log('[Tracing] No active IdleTransaction');\n    }\n\n    // if `this._onScope` is `true`, the transaction put itself on the scope when it started\n    if (this._onScope) {\n      // eslint-disable-next-line deprecation/deprecation\n      const scope = this._idleHub.getScope();\n      // eslint-disable-next-line deprecation/deprecation\n      if (scope.getTransaction() === this) {\n        // eslint-disable-next-line deprecation/deprecation\n        scope.setSpan(undefined);\n      }\n    }\n\n    return super.end(endTimestamp);\n  }\n\n  /**\n   * Register a callback function that gets executed before the transaction finishes.\n   * Useful for cleanup or if you want to add any additional spans based on current context.\n   *\n   * This is exposed because users have no other way of running something before an idle transaction\n   * finishes.\n   */\n  public registerBeforeFinishCallback(callback: BeforeFinishCallback): void {\n    this._beforeFinishCallbacks.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public initSpanRecorder(maxlen?: number): void {\n    // eslint-disable-next-line deprecation/deprecation\n    if (!this.spanRecorder) {\n      const pushActivity = (id: string): void => {\n        if (this._finished) {\n          return;\n        }\n        this._pushActivity(id);\n      };\n      const popActivity = (id: string): void => {\n        if (this._finished) {\n          return;\n        }\n        this._popActivity(id);\n      };\n\n      // eslint-disable-next-line deprecation/deprecation\n      this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanContext().spanId, maxlen);\n\n      // Start heartbeat so that transactions do not run forever.\n      DEBUG_BUILD && logger.log('Starting heartbeat');\n      this._pingHeartbeat();\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Cancels the existing idle timeout, if there is one.\n   * @param restartOnChildSpanChange Default is `true`.\n   *                                 If set to false the transaction will end\n   *                                 with the last child span.\n   */\n  public cancelIdleTimeout(\n    endTimestamp?: Parameters<IdleTransaction['end']>[0],\n    {\n      restartOnChildSpanChange,\n    }: {\n      restartOnChildSpanChange?: boolean;\n    } = {\n      restartOnChildSpanChange: true,\n    },\n  ): void {\n    this._idleTimeoutCanceledPermanently = restartOnChildSpanChange === false;\n    if (this._idleTimeoutID) {\n      clearTimeout(this._idleTimeoutID);\n      this._idleTimeoutID = undefined;\n\n      if (Object.keys(this.activities).length === 0 && this._idleTimeoutCanceledPermanently) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[5];\n        this.end(endTimestamp);\n      }\n    }\n  }\n\n  /**\n   * Temporary method used to externally set the transaction's `finishReason`\n   *\n   * ** WARNING**\n   * This is for the purpose of experimentation only and will be removed in the near future, do not use!\n   *\n   * @internal\n   *\n   */\n  public setFinishReason(reason: string): void {\n    this._finishReason = reason;\n  }\n\n  /**\n   * Permits the IdleTransaction to automatically end itself via the idle timeout and heartbeat mechanisms when the `delayAutoFinishUntilSignal` option was set to `true`.\n   */\n  public sendAutoFinishSignal(): void {\n    if (!this._autoFinishAllowed) {\n      DEBUG_BUILD && logger.log('[Tracing] Received finish signal for idle transaction.');\n      this._restartIdleTimeout();\n      this._autoFinishAllowed = true;\n    }\n  }\n\n  /**\n   * Restarts idle timeout, if there is no running idle timeout it will start one.\n   */\n  private _restartIdleTimeout(endTimestamp?: Parameters<IdleTransaction['end']>[0]): void {\n    this.cancelIdleTimeout();\n    this._idleTimeoutID = setTimeout(() => {\n      if (!this._finished && Object.keys(this.activities).length === 0) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[1];\n        this.end(endTimestamp);\n      }\n    }, this._idleTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n  private _pushActivity(spanId: string): void {\n    this.cancelIdleTimeout(undefined, { restartOnChildSpanChange: !this._idleTimeoutCanceledPermanently });\n    DEBUG_BUILD && logger.log(`[Tracing] pushActivity: ${spanId}`);\n    this.activities[spanId] = true;\n    DEBUG_BUILD && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n  private _popActivity(spanId: string): void {\n    if (this.activities[spanId]) {\n      DEBUG_BUILD && logger.log(`[Tracing] popActivity ${spanId}`);\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this.activities[spanId];\n      DEBUG_BUILD && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    }\n\n    if (Object.keys(this.activities).length === 0) {\n      const endTimestamp = timestampInSeconds();\n      if (this._idleTimeoutCanceledPermanently) {\n        if (this._autoFinishAllowed) {\n          this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[5];\n          this.end(endTimestamp);\n        }\n      } else {\n        // We need to add the timeout here to have the real endtimestamp of the transaction\n        // Remember timestampInSeconds is in seconds, timeout is in ms\n        this._restartIdleTimeout(endTimestamp + this._idleTimeout / 1000);\n      }\n    }\n  }\n\n  /**\n   * Checks when entries of this.activities are not changing for 3 beats.\n   * If this occurs we finish the transaction.\n   */\n  private _beat(): void {\n    // We should not be running heartbeat if the idle transaction is finished.\n    if (this._finished) {\n      return;\n    }\n\n    const heartbeatString = Object.keys(this.activities).join('');\n\n    if (heartbeatString === this._prevHeartbeatString) {\n      this._heartbeatCounter++;\n    } else {\n      this._heartbeatCounter = 1;\n    }\n\n    this._prevHeartbeatString = heartbeatString;\n\n    if (this._heartbeatCounter >= 3) {\n      if (this._autoFinishAllowed) {\n        DEBUG_BUILD && logger.log('[Tracing] Transaction finished because of no change for 3 heart beats');\n        this.setStatus('deadline_exceeded');\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[0];\n        this.end();\n      }\n    } else {\n      this._pingHeartbeat();\n    }\n  }\n\n  /**\n   * Pings the heartbeat\n   */\n  private _pingHeartbeat(): void {\n    DEBUG_BUILD && logger.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`);\n    setTimeout(() => {\n      this._beat();\n    }, this._heartbeatInterval);\n  }\n}\n","import type { Options, SamplingContext } from '@sentry/types';\nimport { isNaN, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE } from '../semanticAttributes';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled';\nimport { spanToJSON } from '../utils/spanUtils';\nimport type { Transaction } from './transaction';\n\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * This method muttes the given `transaction` and will set the `sampled` value on it.\n * It returns the same transaction, for convenience.\n */\nexport function sampleTransaction<T extends Transaction>(\n  transaction: T,\n  options: Pick<Options, 'tracesSampleRate' | 'tracesSampler' | 'enableTracing'>,\n  samplingContext: SamplingContext,\n): T {\n  // nothing to do if tracing is not enabled\n  if (!hasTracingEnabled(options)) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n  // eslint-disable-next-line deprecation/deprecation\n  if (transaction.sampled !== undefined) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, Number(transaction.sampled));\n    return transaction;\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` nor `enableTracing` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, Number(sampleRate));\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, Number(sampleRate));\n  } else {\n    // When `enableTracing === true`, we use a sample rate of 100%\n    sampleRate = 1;\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, sampleRate);\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(sampleRate)) {\n    DEBUG_BUILD && logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!sampleRate) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  // eslint-disable-next-line deprecation/deprecation\n  transaction.sampled = Math.random() < (sampleRate as number | boolean);\n\n  // if we're not going to keep it, we're done\n  // eslint-disable-next-line deprecation/deprecation\n  if (!transaction.sampled) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return transaction;\n  }\n\n  DEBUG_BUILD &&\n    // eslint-disable-next-line deprecation/deprecation\n    logger.log(`[Tracing] starting ${transaction.op} transaction - ${spanToJSON(transaction).description}`);\n  return transaction;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nexport function isValidSampleRate(rate: unknown): boolean {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if (isNaN(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    DEBUG_BUILD &&\n      logger.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n","import type { ClientOptions, CustomSamplingContext, TransactionContext } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { Hub } from '../hub';\nimport { getMainCarrier } from '../hub';\nimport { spanToTraceHeader } from '../utils/spanUtils';\nimport { registerErrorInstrumentation } from './errors';\nimport { IdleTransaction } from './idletransaction';\nimport { sampleTransaction } from './sampling';\nimport { Transaction } from './transaction';\n\n/** Returns all trace headers that are currently on the top scope. */\n// eslint-disable-next-line deprecation/deprecation\nfunction traceHeaders(this: Hub): { [key: string]: string } {\n  // eslint-disable-next-line deprecation/deprecation\n  const scope = this.getScope();\n  // eslint-disable-next-line deprecation/deprecation\n  const span = scope.getSpan();\n\n  return span\n    ? {\n        'sentry-trace': spanToTraceHeader(span),\n      }\n    : {};\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n  // eslint-disable-next-line deprecation/deprecation\n  this: Hub,\n  transactionContext: TransactionContext,\n  customSamplingContext?: CustomSamplingContext,\n): Transaction {\n  // eslint-disable-next-line deprecation/deprecation\n  const client = this.getClient();\n  const options: Partial<ClientOptions> = (client && client.getOptions()) || {};\n\n  const configInstrumenter = options.instrumenter || 'sentry';\n  const transactionInstrumenter = transactionContext.instrumenter || 'sentry';\n\n  if (configInstrumenter !== transactionInstrumenter) {\n    DEBUG_BUILD &&\n      logger.error(\n        `A transaction was started with instrumenter=\\`${transactionInstrumenter}\\`, but the SDK is configured with the \\`${configInstrumenter}\\` instrumenter.\nThe transaction will not be sampled. Please use the ${configInstrumenter} instrumentation to start transactions.`,\n      );\n\n    // eslint-disable-next-line deprecation/deprecation\n    transactionContext.sampled = false;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  let transaction = new Transaction(transactionContext, this);\n  transaction = sampleTransaction(transaction, options, {\n    name: transactionContext.name,\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    attributes: {\n      // eslint-disable-next-line deprecation/deprecation\n      ...transactionContext.data,\n      ...transactionContext.attributes,\n    },\n    ...customSamplingContext,\n  });\n  if (transaction.isRecording()) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans as number));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nexport function startIdleTransaction(\n  // eslint-disable-next-line deprecation/deprecation\n  hub: Hub,\n  transactionContext: TransactionContext,\n  idleTimeout: number,\n  finalTimeout: number,\n  onScope?: boolean,\n  customSamplingContext?: CustomSamplingContext,\n  heartbeatInterval?: number,\n  delayAutoFinishUntilSignal: boolean = false,\n): IdleTransaction {\n  // eslint-disable-next-line deprecation/deprecation\n  const client = hub.getClient();\n  const options: Partial<ClientOptions> = (client && client.getOptions()) || {};\n\n  // eslint-disable-next-line deprecation/deprecation\n  let transaction = new IdleTransaction(\n    transactionContext,\n    hub,\n    idleTimeout,\n    finalTimeout,\n    heartbeatInterval,\n    onScope,\n    delayAutoFinishUntilSignal,\n  );\n  transaction = sampleTransaction(transaction, options, {\n    name: transactionContext.name,\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    attributes: {\n      // eslint-disable-next-line deprecation/deprecation\n      ...transactionContext.data,\n      ...transactionContext.attributes,\n    },\n    ...customSamplingContext,\n  });\n  if (transaction.isRecording()) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans as number));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Adds tracing extensions to the global hub.\n */\nexport function addTracingExtensions(): void {\n  const carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n\n  registerErrorInstrumentation();\n}\n","import { SentryError } from './error';\nimport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise } from './syncpromise';\n\nexport interface PromiseBuffer<T> {\n  // exposes the internal array so tests can assert on the state of it.\n  // XXX: this really should not be public api.\n  $: Array<PromiseLike<T>>;\n  add(taskProducer: () => PromiseLike<T>): PromiseLike<T>;\n  drain(timeout?: number): PromiseLike<boolean>;\n}\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nexport function makePromiseBuffer<T>(limit?: number): PromiseBuffer<T> {\n  const buffer: Array<PromiseLike<T>> = [];\n\n  function isReady(): boolean {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task: PromiseLike<T>): PromiseLike<T> {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer: () => PromiseLike<T>): PromiseLike<T> {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n","import type { DataCategory, TransportMakeRequestResponse } from '@sentry/types';\n\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\nexport type RateLimits = Record<string, number>;\n\nexport const DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nexport function parseRetryAfterHeader(header: string, now: number = Date.now()): number {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nexport function disabledUntil(limits: RateLimits, dataCategory: DataCategory): number {\n  return limits[dataCategory] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nexport function isRateLimited(limits: RateLimits, dataCategory: DataCategory, now: number = Date.now()): boolean {\n  return disabledUntil(limits, dataCategory) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nexport function updateRateLimits(\n  limits: RateLimits,\n  { statusCode, headers }: TransportMakeRequestResponse,\n  now: number = Date.now(),\n): RateLimits {\n  const updatedRateLimits: RateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>: <namespaces>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     *     <namespaces> Semicolon-separated list of metric namespace identifiers. Defines which namespace(s) will be affected.\n     *         Only present if rate limit applies to the metric_bucket data category.\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories, , , namespaces] = limit.split(':', 5);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          if (category === 'metric_bucket') {\n            // namespaces will be present when category === 'metric_bucket'\n            if (!namespaces || namespaces.split(';').includes('custom')) {\n              updatedRateLimits[category] = now + delay;\n            }\n          } else {\n            updatedRateLimits[category] = now + delay;\n          }\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n","import type {\n  Envelope,\n  EnvelopeItem,\n  EnvelopeItemType,\n  Event,\n  EventDropReason,\n  EventItem,\n  InternalBaseTransportOptions,\n  Transport,\n  TransportMakeRequestResponse,\n  TransportRequestExecutor,\n} from '@sentry/types';\nimport type { PromiseBuffer, RateLimits } from '@sentry/utils';\nimport {\n  SentryError,\n  createEnvelope,\n  envelopeItemTypeToDataCategory,\n  forEachEnvelopeItem,\n  isRateLimited,\n  logger,\n  makePromiseBuffer,\n  resolvedSyncPromise,\n  serializeEnvelope,\n  updateRateLimits,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nexport const DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nexport function createTransport(\n  options: InternalBaseTransportOptions,\n  makeRequest: TransportRequestExecutor,\n  buffer: PromiseBuffer<void | TransportMakeRequestResponse> = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n): Transport {\n  let rateLimits: RateLimits = {};\n  const flush = (timeout?: number): PromiseLike<boolean> => buffer.drain(timeout);\n\n  function send(envelope: Envelope): PromiseLike<void | TransportMakeRequestResponse> {\n    const filteredEnvelopeItems: EnvelopeItem[] = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const dataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, dataCategory)) {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', dataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope: Envelope = createEnvelope(envelope[0], filteredEnvelopeItems as any);\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason: EventDropReason): void => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = (): PromiseLike<void | TransportMakeRequestResponse> =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            DEBUG_BUILD && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          DEBUG_BUILD && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  // We use this to identifify if the transport is the base transport\n  // TODO (v8): Remove this again as we'll no longer need it\n  send.__sentry__baseTransport__ = true;\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item: Envelope[1][number], type: EnvelopeItemType): Event | undefined {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item as EventItem)[1] : undefined;\n}\n","import type {\n  BaseTransportOptions,\n  Envelope,\n  EnvelopeItemType,\n  Event,\n  EventItem,\n  Transport,\n  TransportMakeRequestResponse,\n} from '@sentry/types';\nimport { dsnFromString, forEachEnvelopeItem } from '@sentry/utils';\n\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from '../api';\n\ninterface MatchParam {\n  /** The envelope to be sent */\n  envelope: Envelope;\n  /**\n   * A function that returns an event from the envelope if one exists. You can optionally pass an array of envelope item\n   * types to filter by - only envelopes matching the given types will be multiplexed.\n   * Allowed values are: 'event', 'transaction', 'profile', 'replay_event'\n   *\n   * @param types Defaults to ['event']\n   */\n  getEvent(types?: EnvelopeItemType[]): Event | undefined;\n}\n\ntype RouteTo = { dsn: string; release: string };\ntype Matcher = (param: MatchParam) => (string | RouteTo)[];\n\n/**\n * Gets an event from an envelope.\n *\n * This is only exported for use in the tests\n */\nexport function eventFromEnvelope(env: Envelope, types: EnvelopeItemType[]): Event | undefined {\n  let event: Event | undefined;\n\n  forEachEnvelopeItem(env, (item, type) => {\n    if (types.includes(type)) {\n      event = Array.isArray(item) ? (item as EventItem)[1] : undefined;\n    }\n    // bail out if we found an event\n    return !!event;\n  });\n\n  return event;\n}\n\n/**\n * Creates a transport that overrides the release on all events.\n */\nfunction makeOverrideReleaseTransport<TO extends BaseTransportOptions>(\n  createTransport: (options: TO) => Transport,\n  release: string,\n): (options: TO) => Transport {\n  return options => {\n    const transport = createTransport(options);\n\n    return {\n      send: async (envelope: Envelope): Promise<void | TransportMakeRequestResponse> => {\n        const event = eventFromEnvelope(envelope, ['event', 'transaction', 'profile', 'replay_event']);\n\n        if (event) {\n          event.release = release;\n        }\n        return transport.send(envelope);\n      },\n      flush: timeout => transport.flush(timeout),\n    };\n  };\n}\n\n/**\n * Creates a transport that can send events to different DSNs depending on the envelope contents.\n */\nexport function makeMultiplexedTransport<TO extends BaseTransportOptions>(\n  createTransport: (options: TO) => Transport,\n  matcher: Matcher,\n): (options: TO) => Transport {\n  return options => {\n    const fallbackTransport = createTransport(options);\n    const otherTransports: Record<string, Transport> = {};\n\n    function getTransport(dsn: string, release: string | undefined): Transport | undefined {\n      // We create a transport for every unique dsn/release combination as there may be code from multiple releases in\n      // use at the same time\n      const key = release ? `${dsn}:${release}` : dsn;\n\n      if (!otherTransports[key]) {\n        const validatedDsn = dsnFromString(dsn);\n        if (!validatedDsn) {\n          return undefined;\n        }\n        const url = getEnvelopeEndpointWithUrlEncodedAuth(validatedDsn);\n\n        otherTransports[key] = release\n          ? makeOverrideReleaseTransport(createTransport, release)({ ...options, url })\n          : createTransport({ ...options, url });\n      }\n\n      return otherTransports[key];\n    }\n\n    async function send(envelope: Envelope): Promise<void | TransportMakeRequestResponse> {\n      function getEvent(types?: EnvelopeItemType[]): Event | undefined {\n        const eventTypes: EnvelopeItemType[] = types && types.length ? types : ['event'];\n        return eventFromEnvelope(envelope, eventTypes);\n      }\n\n      const transports = matcher({ envelope, getEvent })\n        .map(result => {\n          if (typeof result === 'string') {\n            return getTransport(result, undefined);\n          } else {\n            return getTransport(result.dsn, result.release);\n          }\n        })\n        .filter((t): t is Transport => !!t);\n\n      // If we have no transports to send to, use the fallback transport\n      if (transports.length === 0) {\n        transports.push(fallbackTransport);\n      }\n\n      const results = await Promise.all(transports.map(transport => transport.send(envelope)));\n\n      return results[0];\n    }\n\n    async function flush(timeout: number | undefined): Promise<boolean> {\n      const allTransports = [...Object.keys(otherTransports).map(dsn => otherTransports[dsn]), fallbackTransport];\n      const results = await Promise.all(allTransports.map(transport => transport.flush(timeout)));\n      return results.every(r => r);\n    }\n\n    return {\n      send,\n      flush,\n    };\n  };\n}\n","export const COUNTER_METRIC_TYPE = 'c' as const;\nexport const GAUGE_METRIC_TYPE = 'g' as const;\nexport const SET_METRIC_TYPE = 's' as const;\nexport const DISTRIBUTION_METRIC_TYPE = 'd' as const;\n\n/**\n * This does not match spec in https://develop.sentry.dev/sdk/metrics\n * but was chosen to optimize for the most common case in browser environments.\n */\nexport const DEFAULT_BROWSER_FLUSH_INTERVAL = 5000;\n\n/**\n * SDKs are required to bucket into 10 second intervals (rollup in seconds)\n * which is the current lower bound of metric accuracy.\n */\nexport const DEFAULT_FLUSH_INTERVAL = 10000;\n\n/**\n * The maximum number of metrics that should be stored in memory.\n */\nexport const MAX_WEIGHT = 10000;\n","import type { MetricInstance } from '@sentry/types';\nimport { COUNTER_METRIC_TYPE, DISTRIBUTION_METRIC_TYPE, GAUGE_METRIC_TYPE, SET_METRIC_TYPE } from './constants';\nimport { simpleHash } from './utils';\n\n/**\n * A metric instance representing a counter.\n */\nexport class CounterMetric implements MetricInstance {\n  public constructor(private _value: number) {}\n\n  /** @inheritDoc */\n  public get weight(): number {\n    return 1;\n  }\n\n  /** @inheritdoc */\n  public add(value: number): void {\n    this._value += value;\n  }\n\n  /** @inheritdoc */\n  public toString(): string {\n    return `${this._value}`;\n  }\n}\n\n/**\n * A metric instance representing a gauge.\n */\nexport class GaugeMetric implements MetricInstance {\n  private _last: number;\n  private _min: number;\n  private _max: number;\n  private _sum: number;\n  private _count: number;\n\n  public constructor(value: number) {\n    this._last = value;\n    this._min = value;\n    this._max = value;\n    this._sum = value;\n    this._count = 1;\n  }\n\n  /** @inheritDoc */\n  public get weight(): number {\n    return 5;\n  }\n\n  /** @inheritdoc */\n  public add(value: number): void {\n    this._last = value;\n    if (value < this._min) {\n      this._min = value;\n    }\n    if (value > this._max) {\n      this._max = value;\n    }\n    this._sum += value;\n    this._count++;\n  }\n\n  /** @inheritdoc */\n  public toString(): string {\n    return `${this._last}:${this._min}:${this._max}:${this._sum}:${this._count}`;\n  }\n}\n\n/**\n * A metric instance representing a distribution.\n */\nexport class DistributionMetric implements MetricInstance {\n  private _value: number[];\n\n  public constructor(first: number) {\n    this._value = [first];\n  }\n\n  /** @inheritDoc */\n  public get weight(): number {\n    return this._value.length;\n  }\n\n  /** @inheritdoc */\n  public add(value: number): void {\n    this._value.push(value);\n  }\n\n  /** @inheritdoc */\n  public toString(): string {\n    return this._value.join(':');\n  }\n}\n\n/**\n * A metric instance representing a set.\n */\nexport class SetMetric implements MetricInstance {\n  private _value: Set<number | string>;\n\n  public constructor(public first: number | string) {\n    this._value = new Set([first]);\n  }\n\n  /** @inheritDoc */\n  public get weight(): number {\n    return this._value.size;\n  }\n\n  /** @inheritdoc */\n  public add(value: number | string): void {\n    this._value.add(value);\n  }\n\n  /** @inheritdoc */\n  public toString(): string {\n    return Array.from(this._value)\n      .map(val => (typeof val === 'string' ? simpleHash(val) : val))\n      .join(':');\n  }\n}\n\nexport const METRIC_MAP = {\n  [COUNTER_METRIC_TYPE]: CounterMetric,\n  [GAUGE_METRIC_TYPE]: GaugeMetric,\n  [DISTRIBUTION_METRIC_TYPE]: DistributionMetric,\n  [SET_METRIC_TYPE]: SetMetric,\n};\n","import type { Client, ClientOptions, MeasurementUnit, MetricsAggregator, Primitive } from '@sentry/types';\nimport { timestampInSeconds } from '@sentry/utils';\nimport { DEFAULT_BROWSER_FLUSH_INTERVAL, SET_METRIC_TYPE } from './constants';\nimport { METRIC_MAP } from './instance';\nimport { updateMetricSummaryOnActiveSpan } from './metric-summary';\nimport type { MetricBucket, MetricType } from './types';\nimport { getBucketKey, sanitizeMetricKey, sanitizeTags, sanitizeUnit } from './utils';\n\n/**\n * A simple metrics aggregator that aggregates metrics in memory and flushes them periodically.\n * Default flush interval is 5 seconds.\n *\n * @experimental This API is experimental and might change in the future.\n */\nexport class BrowserMetricsAggregator implements MetricsAggregator {\n  // TODO(@anonrig): Use FinalizationRegistry to have a proper way of flushing the buckets\n  // when the aggregator is garbage collected.\n  // Ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\n  private _buckets: MetricBucket;\n  private readonly _interval: ReturnType<typeof setInterval>;\n\n  public constructor(private readonly _client: Client<ClientOptions>) {\n    this._buckets = new Map();\n    this._interval = setInterval(() => this.flush(), DEFAULT_BROWSER_FLUSH_INTERVAL);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public add(\n    metricType: MetricType,\n    unsanitizedName: string,\n    value: number | string,\n    unsanitizedUnit: MeasurementUnit | undefined = 'none',\n    unsanitizedTags: Record<string, Primitive> | undefined = {},\n    maybeFloatTimestamp: number | undefined = timestampInSeconds(),\n  ): void {\n    const timestamp = Math.floor(maybeFloatTimestamp);\n    const name = sanitizeMetricKey(unsanitizedName);\n    const tags = sanitizeTags(unsanitizedTags);\n    const unit = sanitizeUnit(unsanitizedUnit as string);\n\n    const bucketKey = getBucketKey(metricType, name, unit, tags);\n\n    let bucketItem = this._buckets.get(bucketKey);\n    // If this is a set metric, we need to calculate the delta from the previous weight.\n    const previousWeight = bucketItem && metricType === SET_METRIC_TYPE ? bucketItem.metric.weight : 0;\n\n    if (bucketItem) {\n      bucketItem.metric.add(value);\n      // TODO(abhi): Do we need this check?\n      if (bucketItem.timestamp < timestamp) {\n        bucketItem.timestamp = timestamp;\n      }\n    } else {\n      bucketItem = {\n        // @ts-expect-error we don't need to narrow down the type of value here, saves bundle size.\n        metric: new METRIC_MAP[metricType](value),\n        timestamp,\n        metricType,\n        name,\n        unit,\n        tags,\n      };\n      this._buckets.set(bucketKey, bucketItem);\n    }\n\n    // If value is a string, it's a set metric so calculate the delta from the previous weight.\n    const val = typeof value === 'string' ? bucketItem.metric.weight - previousWeight : value;\n    updateMetricSummaryOnActiveSpan(metricType, name, val, unit, unsanitizedTags, bucketKey);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public flush(): void {\n    // short circuit if buckets are empty.\n    if (this._buckets.size === 0) {\n      return;\n    }\n\n    if (this._client.captureAggregateMetrics) {\n      // TODO(@anonrig): Use Object.values() when we support ES6+\n      const metricBuckets = Array.from(this._buckets).map(([, bucketItem]) => bucketItem);\n      this._client.captureAggregateMetrics(metricBuckets);\n    }\n\n    this._buckets.clear();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(): void {\n    clearInterval(this._interval);\n    this.flush();\n  }\n}\n","import type { Client, ClientOptions, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport type { BaseClient } from '../baseclient';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration';\nimport { BrowserMetricsAggregator } from './browser-aggregator';\n\nconst INTEGRATION_NAME = 'MetricsAggregator';\n\nconst _metricsAggregatorIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client: BaseClient<ClientOptions>) {\n      client.metricsAggregator = new BrowserMetricsAggregator(client);\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const metricsAggregatorIntegration = defineIntegration(_metricsAggregatorIntegration);\n\n/**\n * Enables Sentry metrics monitoring.\n *\n * @experimental This API is experimental and might having breaking changes in the future.\n * @deprecated Use `metricsAggegratorIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const MetricsAggregator = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  metricsAggregatorIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }>;\n","import type { ClientOptions, MeasurementUnit, Primitive } from '@sentry/types';\nimport { logger } from '@sentry/utils';\nimport type { BaseClient } from '../baseclient';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { getClient, getCurrentScope } from '../exports';\nimport { spanToJSON } from '../utils/spanUtils';\nimport { COUNTER_METRIC_TYPE, DISTRIBUTION_METRIC_TYPE, GAUGE_METRIC_TYPE, SET_METRIC_TYPE } from './constants';\nimport { MetricsAggregator, metricsAggregatorIntegration } from './integration';\nimport type { MetricType } from './types';\n\ninterface MetricData {\n  unit?: MeasurementUnit;\n  tags?: Record<string, Primitive>;\n  timestamp?: number;\n}\n\nfunction addToMetricsAggregator(\n  metricType: MetricType,\n  name: string,\n  value: number | string,\n  data: MetricData | undefined = {},\n): void {\n  const client = getClient<BaseClient<ClientOptions>>();\n  const scope = getCurrentScope();\n  if (client) {\n    if (!client.metricsAggregator) {\n      DEBUG_BUILD &&\n        logger.warn('No metrics aggregator enabled. Please add the MetricsAggregator integration to use metrics APIs');\n      return;\n    }\n    const { unit, tags, timestamp } = data;\n    const { release, environment } = client.getOptions();\n    // eslint-disable-next-line deprecation/deprecation\n    const transaction = scope.getTransaction();\n    const metricTags: Record<string, string> = {};\n    if (release) {\n      metricTags.release = release;\n    }\n    if (environment) {\n      metricTags.environment = environment;\n    }\n    if (transaction) {\n      metricTags.transaction = spanToJSON(transaction).description || '';\n    }\n\n    DEBUG_BUILD && logger.log(`Adding value of ${value} to ${metricType} metric ${name}`);\n    client.metricsAggregator.add(metricType, name, value, unit, { ...metricTags, ...tags }, timestamp);\n  }\n}\n\n/**\n * Adds a value to a counter metric\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nexport function increment(name: string, value: number = 1, data?: MetricData): void {\n  addToMetricsAggregator(COUNTER_METRIC_TYPE, name, value, data);\n}\n\n/**\n * Adds a value to a distribution metric\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nexport function distribution(name: string, value: number, data?: MetricData): void {\n  addToMetricsAggregator(DISTRIBUTION_METRIC_TYPE, name, value, data);\n}\n\n/**\n * Adds a value to a set metric. Value must be a string or integer.\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nexport function set(name: string, value: number | string, data?: MetricData): void {\n  addToMetricsAggregator(SET_METRIC_TYPE, name, value, data);\n}\n\n/**\n * Adds a value to a gauge metric\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nexport function gauge(name: string, value: number, data?: MetricData): void {\n  addToMetricsAggregator(GAUGE_METRIC_TYPE, name, value, data);\n}\n\nexport const metrics = {\n  increment,\n  distribution,\n  set,\n  gauge,\n  /** @deprecated Use `metrics.metricsAggregratorIntegration()` instead. */\n  // eslint-disable-next-line deprecation/deprecation\n  MetricsAggregator,\n  metricsAggregatorIntegration,\n};\n","import type { ParameterizedString } from '@sentry/types';\n\n/**\n * Tagged template function which returns paramaterized representation of the message\n * For example: parameterize`This is a log statement with ${x} and ${y} params`, would return:\n * \"__sentry_template_string__\": 'This is a log statement with %s and %s params',\n * \"__sentry_template_values__\": ['first', 'second']\n * @param strings An array of string values splitted between expressions\n * @param values Expressions extracted from template string\n * @returns String with template information in __sentry_template_string__ and __sentry_template_values__ properties\n */\nexport function parameterize(strings: TemplateStringsArray, ...values: string[]): ParameterizedString {\n  const formatted = new String(String.raw(strings, ...values)) as ParameterizedString;\n  formatted.__sentry_template_string__ = strings.join('\\x00').replace(/%/g, '%%').replace(/\\0/g, '%s');\n  formatted.__sentry_template_values__ = values;\n  return formatted;\n}\n","import type { Client, ClientOptions } from '@sentry/types';\nimport { consoleSandbox, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { getCurrentScope } from './exports';\nimport { getCurrentHub } from './hub';\n\n/** A class object that can instantiate Client objects. */\nexport type ClientClass<F extends Client, O extends ClientOptions> = new (options: O) => F;\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind<F extends Client, O extends ClientOptions>(\n  clientClass: ClientClass<F, O>,\n  options: O,\n): void {\n  if (options.debug === true) {\n    if (DEBUG_BUILD) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      consoleSandbox(() => {\n        // eslint-disable-next-line no-console\n        console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n      });\n    }\n  }\n  const scope = getCurrentScope();\n  scope.update(options.initialScope);\n\n  const client = new clientClass(options);\n  setCurrentClient(client);\n  initializeClient(client);\n}\n\n/**\n * Make the given client the current client.\n */\nexport function setCurrentClient(client: Client): void {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n  // eslint-disable-next-line deprecation/deprecation\n  const top = hub.getStackTop();\n  top.client = client;\n  top.scope.setClient(client);\n}\n\n/**\n * Initialize the client for the current scope.\n * Make sure to call this after `setCurrentClient()`.\n */\nfunction initializeClient(client: Client): void {\n  if (client.init) {\n    client.init();\n    // TODO v8: Remove this fallback\n    // eslint-disable-next-line deprecation/deprecation\n  } else if (client.setupIntegrations) {\n    // eslint-disable-next-line deprecation/deprecation\n    client.setupIntegrations();\n  }\n}\n","import type { MeasurementUnit } from '@sentry/types';\n\nimport { getActiveTransaction } from './utils';\n\n/**\n * Adds a measurement to the current active transaction.\n */\nexport function setMeasurement(name: string, value: number, unit: MeasurementUnit): void {\n  // eslint-disable-next-line deprecation/deprecation\n  const transaction = getActiveTransaction();\n  if (transaction) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setMeasurement(name, value, unit);\n  }\n}\n","import type { browserTracingIntegration } from '@sentry-internal/tracing';\nimport { BrowserTracing } from '@sentry-internal/tracing';\nimport { captureException, withScope } from '@sentry/core';\nimport type { DsnLike, Integration, Mechanism, WrappedFunction } from '@sentry/types';\nimport {\n  GLOBAL_OBJ,\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  addNonEnumerableProperty,\n  getOriginalFunction,\n  markFunctionWrapped,\n} from '@sentry/utils';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n  before?: WrappedFunction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped: WrappedFunction = function (this: unknown): void {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n *\n * @deprecated This type will be removed in the next major version of the Sentry SDK. `showReportDialog` will still be around, however the `eventId` option will now be required.\n */\nexport interface ReportDialogOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(this: void): void;\n  /** Callback after reportDialog closed */\n  onClose?(this: void): void;\n}\n\n/**\n * This is a slim shim of `browserTracingIntegration` for the CDN bundles.\n * Since the actual functional integration uses a different code from `BrowserTracing`,\n * we want to avoid shipping both of them in the CDN bundles, as that would blow up the size.\n * Instead, we provide a functional integration with the same API, but the old implementation.\n * This means that it's not possible to register custom routing instrumentation, but that's OK for now.\n * We also don't expose the utilities for this anyhow in the CDN bundles.\n * For users that need custom routing in CDN bundles, they have to continue using `new BrowserTracing()` until v8.\n */\nexport function bundleBrowserTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] = {},\n): Integration {\n  // Migrate some options from the old integration to the new one\n  // eslint-disable-next-line deprecation/deprecation\n  const opts: ConstructorParameters<typeof BrowserTracing>[0] = options;\n\n  if (typeof options.markBackgroundSpan === 'boolean') {\n    opts.markBackgroundTransactions = options.markBackgroundSpan;\n  }\n\n  if (typeof options.instrumentPageLoad === 'boolean') {\n    opts.startTransactionOnPageLoad = options.instrumentPageLoad;\n  }\n\n  if (typeof options.instrumentNavigation === 'boolean') {\n    opts.startTransactionOnLocationChange = options.instrumentNavigation;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return new BrowserTracing(opts);\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","import { getClient } from '@sentry/core';\nimport type {\n  Event,\n  EventHint,\n  Exception,\n  ParameterizedString,\n  Severity,\n  SeverityLevel,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  extractExceptionKeysForMessage,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isParameterizedString,\n  isPlainObject,\n  normalizeToSize,\n  resolvedSyncPromise,\n} from '@sentry/utils';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nexport function exceptionFromError(stackParser: StackParser, ex: Error): Exception {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception: Exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nexport function eventFromPlainObject(\n  stackParser: StackParser,\n  exception: Record<string, unknown>,\n  syntheticException?: Error,\n  isUnhandledRejection?: boolean,\n): Event {\n  const client = getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  const event: Event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception, normalizeDepth),\n    },\n  };\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception as { values: Exception[] }).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromError(stackParser: StackParser, ex: Error): Event {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nexport function parseStackFrames(\n  stackParser: StackParser,\n  ex: Error & { framesToPop?: number; stacktrace?: string },\n): StackFrame[] {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex: Error & { framesToPop?: number }): number {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex: Error & { message: { error?: Error } }): string {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nexport function eventFromException(\n  stackParser: StackParser,\n  exception: unknown,\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  // eslint-disable-next-line deprecation/deprecation\n  level: Severity | SeverityLevel = 'info',\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(\n  stackParser: StackParser,\n  exception: unknown,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n  isUnhandledRejection?: boolean,\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    return eventFromError(stackParser, errorEvent.error as Error);\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception as DOMException)) {\n    const domException = exception as DOMException;\n\n    if ('stack' in (exception as Error)) {\n      event = eventFromError(stackParser, exception as Error);\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception as Record<string, unknown>;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception as string, syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromString(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n): Event {\n  const event: Event = {};\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: message, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception: Record<string, unknown>,\n  { isUnhandledRejection }: { isUnhandledRejection?: boolean },\n): string {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj: unknown): string | undefined | void {\n  try {\n    const prototype: Prototype | null = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n","import type { DsnComponents, EventEnvelope, SdkMetadata, UserFeedback, UserFeedbackItem } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\n\n/**\n * Creates an envelope from a user feedback.\n */\nexport function createUserFeedbackEnvelope(\n  feedback: UserFeedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }: {\n    metadata: SdkMetadata | undefined;\n    tunnel: string | undefined;\n    dsn: DsnComponents | undefined;\n  },\n): EventEnvelope {\n  const headers: EventEnvelope[0] = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: dsnToString(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return createEnvelope(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback: UserFeedback): UserFeedbackItem {\n  const feedbackHeaders: UserFeedbackItem[0] = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n","import type { Scope } from '@sentry/core';\nimport { applySdkMetadata } from '@sentry/core';\nimport { BaseClient } from '@sentry/core';\nimport type {\n  BrowserClientProfilingOptions,\n  BrowserClientReplayOptions,\n  ClientOptions,\n  Event,\n  EventHint,\n  Options,\n  ParameterizedString,\n  Severity,\n  SeverityLevel,\n  UserFeedback,\n} from '@sentry/types';\nimport { createClientReportEnvelope, dsnToString, getSDKSource, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { WINDOW } from './helpers';\nimport type { BrowserTransportOptions } from './transports/types';\nimport { createUserFeedbackEnvelope } from './userfeedback';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\nexport type BrowserOptions = Options<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions;\n\n/**\n * Configuration options for the Sentry Browser SDK Client class\n * @see BrowserClient for more information.\n */\nexport type BrowserClientOptions = ClientOptions<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserClientOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserClientOptions) {\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(options, 'browser', ['browser'], sdkSource);\n\n    super(options);\n\n    if (options.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(\n    message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel = 'info',\n    hint?: EventHint,\n  ): PromiseLike<Event> {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   */\n  public captureUserFeedback(feedback: UserFeedback): void {\n    if (!this._isEnabled()) {\n      DEBUG_BUILD && logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = createUserFeedbackEnvelope(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n  private _flushOutcomes(): void {\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      DEBUG_BUILD && logger.log('No outcomes to send');\n      return;\n    }\n\n    // This is really the only place where we want to check for a DSN and only send outcomes then\n    if (!this._dsn) {\n      DEBUG_BUILD && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n}\n","import type { Options } from '@sentry/types';\nimport { SDK_VERSION } from '../version';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nexport function applySdkMetadata(options: Options, name: string, names = [name], source = 'npm'): void {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n","import type { ClientReport, ClientReportEnvelope, ClientReportItem } from '@sentry/types';\n\nimport { createEnvelope } from './envelope';\nimport { dateTimestampInSeconds } from './time';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nexport function createClientReportEnvelope(\n  discarded_events: ClientReport['discarded_events'],\n  dsn?: string,\n  timestamp?: number,\n): ClientReportEnvelope {\n  const clientReportItem: ClientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope<ClientReportEnvelope>(dsn ? { dsn } : {}, [clientReportItem]);\n}\n","import { isNativeFetch, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\nlet cachedFetchImpl: FetchImpl | undefined = undefined;\n\nexport type FetchImpl = typeof fetch;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nexport function getNativeFetchImplementation(): FetchImpl {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(WINDOW.fetch)) {\n    return (cachedFetchImpl = WINDOW.fetch.bind(WINDOW));\n  }\n\n  const document = WINDOW.document;\n  let fetchImpl = WINDOW.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      DEBUG_BUILD && logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(WINDOW));\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\n/** Clears cached fetch impl */\nexport function clearCachedFetchImplementation(): void {\n  cachedFetchImpl = undefined;\n}\n","import { createTransport } from '@sentry/core';\nimport type { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/types';\nimport { rejectedSyncPromise } from '@sentry/utils';\n\nimport type { BrowserTransportOptions } from './types';\nimport type { FetchImpl } from './utils';\nimport { clearCachedFetchImplementation, getNativeFetchImplementation } from './utils';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nexport function makeFetchTransport(\n  options: BrowserTransportOptions,\n  nativeFetch: FetchImpl = getNativeFetchImplementation(),\n): Transport {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions: RequestInit = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60_000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    try {\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedFetchImplementation();\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n","import { createTransport } from '@sentry/core';\nimport type { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n\nimport type { BrowserTransportOptions } from './types';\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nconst XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nexport function makeXHRTransport(options: BrowserTransportOptions): Transport {\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    return new SyncPromise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = (): void => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After'),\n            },\n          });\n        }\n      };\n\n      xhr.open('POST', options.url);\n\n      for (const header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return createTransport(options, makeRequest);\n}\n","// This was originally forked from https://github.com/csnover/TraceKit, and was largely\n// re - written as part of raven - js.\n//\n// This code was later copied to the JavaScript mono - repo and further modified and\n// refactored over the years.\n\n// Copyright (c) 2013 Onur Can Cakmak onur.cakmak@gmail.com and all TraceKit contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this\n// software and associated documentation files(the 'Software'), to deal in the Software\n// without restriction, including without limitation the rights to use, copy, modify,\n// merge, publish, distribute, sublicense, and / or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies\n// or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n// CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { StackFrame, StackLineParser, StackLineParserFn } from '@sentry/types';\nimport { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename: string, func: string, lineno?: number, colno?: number): StackFrame {\n  const frame: StackFrame = {\n    filename,\n    function: func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n// We cannot call this variable `chrome` because it can conflict with global `chrome` variable in certain environments\n// See: https://github.com/getsentry/sentry-javascript/issues/6880\nconst chromeStackParserFn: StackLineParserFn = line => {\n  const parts = chromeRegex.exec(line);\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nexport const chromeStackLineParser: StackLineParser = [CHROME_PRIORITY, chromeStackParserFn];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko: StackLineParserFn = line => {\n  const parts = geckoREgex.exec(line);\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nexport const geckoStackLineParser: StackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs: StackLineParserFn = line => {\n  const parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nexport const winjsStackLineParser: StackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10: StackLineParserFn = line => {\n  const parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nexport const opera10StackLineParser: StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11: StackLineParserFn = line => {\n  const parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nexport const opera11StackLineParser: StackLineParser = [OPERA11_PRIORITY, opera11];\n\nexport const defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nexport const defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func: string, filename: string): [string, string] => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n","// Based on https://github.com/angular/angular.js/pull/13945/files\n// The MIT License\n\n// Copyright (c) 2010-2016 Google, Inc. http://angularjs.org\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport { getGlobalObject } from '../worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chromeVar = (WINDOW as any).chrome;\n  const isChromePackagedApp = chromeVar && chromeVar.app && chromeVar.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataHistory } from '@sentry/types';\n\nimport { fill } from '../object';\nimport { supportsHistory } from '../supports';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\nlet lastHref: string | undefined;\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addHistoryInstrumentationHandler(handler: (data: HandlerDataHistory) => void): void {\n  const type = 'history';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentHistory);\n}\n\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function (this: WindowEventHandlers, ...args: any[]): any {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    const handlerData: HandlerDataHistory = { from, to };\n    triggerHandlers('history', handlerData);\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function (this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        const handlerData: HandlerDataHistory = { from, to };\n        triggerHandlers('history', handlerData);\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataDom } from '@sentry/types';\n\nimport { uuid4 } from '../misc';\nimport { addNonEnumerableProperty, fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\ntype SentryWrappedTarget = HTMLElement & { _sentryId?: string };\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: Function;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\nconst DEBOUNCE_DURATION = 1000;\n\nlet debounceTimerID: number | undefined;\nlet lastCapturedEventType: string | undefined;\nlet lastCapturedEventTargetId: string | undefined;\n\n/**\n * Add an instrumentation handler for when a click or a keypress happens.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addClickKeypressInstrumentationHandler(handler: (data: HandlerDataDom) => void): void {\n  const type = 'dom';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentDOM);\n}\n\n/** Exported for tests only. */\nexport function instrumentDOM(): void {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW as any)[target] && (WINDOW as any)[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener: AddEventListener): AddEventListener {\n      return function (\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n        return function (\n          this: Element,\n          type: string,\n          listener: EventListenerOrEventListenerObject,\n          options?: boolean | EventListenerOptions,\n        ): () => void {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this as InstrumentedElement;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\n/**\n * Check whether the event is similar to the last captured one. For example, two click events on the same button.\n */\nfunction isSimilarToLastCapturedEvent(event: Event): boolean {\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (event.type !== lastCapturedEventType) {\n    return false;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (!event.target || (event.target as SentryWrappedTarget)._sentryId !== lastCapturedEventTargetId) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return true;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(eventType: string, target: SentryWrappedTarget | null): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (eventType !== 'keypress') {\n    return false;\n  }\n\n  if (!target || !target.tagName) {\n    return true;\n  }\n\n  // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n  // e.g.tabbing through elements, hotkeys, etc.\n  if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n */\nfunction makeDOMEventHandler(\n  handler: (data: HandlerDataDom) => void,\n  globalListener: boolean = false,\n): (event: Event) => void {\n  return (event: Event & { _sentryCaptured?: true }): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || event['_sentryCaptured']) {\n      return;\n    }\n\n    const target = getEventTarget(event);\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event.type, target)) {\n      return;\n    }\n\n    // Mark event as \"seen\"\n    addNonEnumerableProperty(event, '_sentryCaptured', true);\n\n    if (target && !target._sentryId) {\n      // Add UUID to event target so we can identify if\n      addNonEnumerableProperty(target, '_sentryId', uuid4());\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no last captured event, it means that we can safely capture the new event and store it for future comparisons.\n    // If there is a last captured event, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    if (!isSimilarToLastCapturedEvent(event)) {\n      const handlerData: HandlerDataDom = { event, name, global: globalListener };\n      handler(handlerData);\n      lastCapturedEventType = event.type;\n      lastCapturedEventTargetId = target ? target._sentryId : undefined;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      lastCapturedEventTargetId = undefined;\n      lastCapturedEventType = undefined;\n    }, DEBOUNCE_DURATION);\n  };\n}\n\nfunction getEventTarget(event: Event): SentryWrappedTarget | null {\n  try {\n    return event.target as SentryWrappedTarget | null;\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n    return null;\n  }\n}\n","/* eslint-disable max-lines */\nimport { addBreadcrumb, convertIntegrationFnToClass, defineIntegration, getClient } from '@sentry/core';\nimport type {\n  Client,\n  Event as SentryEvent,\n  HandlerDataConsole,\n  HandlerDataDom,\n  HandlerDataFetch,\n  HandlerDataHistory,\n  HandlerDataXhr,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n} from '@sentry/types';\nimport type {\n  Breadcrumb,\n  FetchBreadcrumbData,\n  FetchBreadcrumbHint,\n  XhrBreadcrumbData,\n  XhrBreadcrumbHint,\n} from '@sentry/types/build/types/breadcrumb';\nimport {\n  SENTRY_XHR_DATA_KEY,\n  addClickKeypressInstrumentationHandler,\n  addConsoleInstrumentationHandler,\n  addFetchInstrumentationHandler,\n  addHistoryInstrumentationHandler,\n  addXhrInstrumentationHandler,\n  getComponentName,\n  getEventDescription,\n  htmlTreeAsString,\n  logger,\n  parseUrl,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\ninterface BreadcrumbsOptions {\n  console: boolean;\n  dom:\n    | boolean\n    | {\n        serializeAttribute?: string | string[];\n        maxStringLength?: number;\n      };\n  fetch: boolean;\n  history: boolean;\n  sentry: boolean;\n  xhr: boolean;\n}\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst INTEGRATION_NAME = 'Breadcrumbs';\n\nconst _breadcrumbsIntegration = ((options: Partial<BreadcrumbsOptions> = {}) => {\n  const _options = {\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (_options.console) {\n        addConsoleInstrumentationHandler(_getConsoleBreadcrumbHandler(client));\n      }\n      if (_options.dom) {\n        addClickKeypressInstrumentationHandler(_getDomBreadcrumbHandler(client, _options.dom));\n      }\n      if (_options.xhr) {\n        addXhrInstrumentationHandler(_getXhrBreadcrumbHandler(client));\n      }\n      if (_options.fetch) {\n        addFetchInstrumentationHandler(_getFetchBreadcrumbHandler(client));\n      }\n      if (_options.history) {\n        addHistoryInstrumentationHandler(_getHistoryBreadcrumbHandler(client));\n      }\n      if (_options.sentry && client.on) {\n        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const breadcrumbsIntegration = defineIntegration(_breadcrumbsIntegration);\n\n/**\n * Default Breadcrumbs instrumentations\n *\n * @deprecated Use `breadcrumbsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Breadcrumbs = convertIntegrationFnToClass(INTEGRATION_NAME, breadcrumbsIntegration) as IntegrationClass<\n  Integration & { setup: (client: Client) => void }\n> & {\n  new (\n    options?: Partial<{\n      console: boolean;\n      dom:\n        | boolean\n        | {\n            serializeAttribute?: string | string[];\n            maxStringLength?: number;\n          };\n      fetch: boolean;\n      history: boolean;\n      sentry: boolean;\n      xhr: boolean;\n    }>,\n  ): Integration;\n};\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction _getSentryBreadcrumbHandler(client: Client): (event: SentryEvent) => void {\n  return function addSentryBreadcrumb(event: SentryEvent): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  };\n}\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _getDomBreadcrumbHandler(\n  client: Client,\n  dom: BreadcrumbsOptions['dom'],\n): (handlerData: HandlerDataDom) => void {\n  return function _innerDomBreadcrumb(handlerData: HandlerDataDom): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let target;\n    let componentName;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event as Event | Node;\n      const element = _isEvent(event) ? event.target : event;\n\n      target = htmlTreeAsString(element, { keyAttrs, maxStringLength });\n      componentName = getComponentName(element);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    const breadcrumb: Breadcrumb = {\n      category: `ui.${handlerData.name}`,\n      message: target,\n    };\n\n    if (componentName) {\n      breadcrumb.data = { 'ui.component_name': componentName };\n    }\n\n    addBreadcrumb(breadcrumb, {\n      event: handlerData.event,\n      name: handlerData.name,\n      global: handlerData.global,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _getConsoleBreadcrumbHandler(client: Client): (handlerData: HandlerDataConsole) => void {\n  return function _consoleBreadcrumb(handlerData: HandlerDataConsole): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: severityLevelFromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _getXhrBreadcrumbHandler(client: Client): (handlerData: HandlerDataXhr) => void {\n  return function _xhrBreadcrumb(handlerData: HandlerDataXhr): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n    // We only capture complete, non-sentry requests\n    if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n      return;\n    }\n\n    const { method, url, status_code, body } = sentryXhrData;\n\n    const data: XhrBreadcrumbData = {\n      method,\n      url,\n      status_code,\n    };\n\n    const hint: XhrBreadcrumbHint = {\n      xhr: handlerData.xhr,\n      input: body,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    addBreadcrumb(\n      {\n        category: 'xhr',\n        data,\n        type: 'http',\n      },\n      hint,\n    );\n  };\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _getFetchBreadcrumbHandler(client: Client): (handlerData: HandlerDataFetch) => void {\n  return function _fetchBreadcrumb(handlerData: HandlerDataFetch): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    // We only capture complete fetch requests\n    if (!endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    if (handlerData.error) {\n      const data: FetchBreadcrumbData = handlerData.fetchData;\n      const hint: FetchBreadcrumbHint = {\n        data: handlerData.error,\n        input: handlerData.args,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          level: 'error',\n          type: 'http',\n        },\n        hint,\n      );\n    } else {\n      const response = handlerData.response as Response | undefined;\n      const data: FetchBreadcrumbData = {\n        ...handlerData.fetchData,\n        status_code: response && response.status,\n      };\n      const hint: FetchBreadcrumbHint = {\n        input: handlerData.args,\n        response,\n        startTimestamp,\n        endTimestamp,\n      };\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          type: 'http',\n        },\n        hint,\n      );\n    }\n  };\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _getHistoryBreadcrumbHandler(client: Client): (handlerData: HandlerDataHistory) => void {\n  return function _historyBreadcrumb(handlerData: HandlerDataHistory): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let from: string | undefined = handlerData.from;\n    let to: string | undefined = handlerData.to;\n    const parsedLoc = parseUrl(WINDOW.location.href);\n    let parsedFrom = from ? parseUrl(from) : undefined;\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom || !parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  };\n}\n\nfunction _isEvent(event: unknown): event is Event {\n  return !!event && !!(event as Record<string, unknown>).target;\n}\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Exception, Integration, IntegrationClass, IntegrationFn, StackFrame } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nconst INTEGRATION_NAME = 'Dedupe';\n\nconst _dedupeIntegration = (() => {\n  let previousEvent: Event | undefined;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(currentEvent) {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      // Juuust in case something goes wrong\n      try {\n        if (_shouldDropEvent(currentEvent, previousEvent)) {\n          DEBUG_BUILD && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n          return null;\n        }\n      } catch (_oO) {} // eslint-disable-line no-empty\n\n      return (previousEvent = currentEvent);\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const dedupeIntegration = defineIntegration(_dedupeIntegration);\n\n/**\n * Deduplication filter.\n * @deprecated Use `dedupeIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Dedupe = convertIntegrationFnToClass(INTEGRATION_NAME, dedupeIntegration) as IntegrationClass<\n  Integration & { processEvent: (event: Event) => Event }\n>;\n\nfunction _shouldDropEvent(currentEvent: Event, previousEvent?: Event): boolean {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isSameMessageEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameExceptionEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameStacktrace(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames as StackFrame[];\n  previousFrames = previousFrames as StackFrame[];\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _isSameFingerprint(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint as string[];\n  previousFingerprint = previousFingerprint as string[];\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\nfunction _getExceptionFromEvent(event: Event): Exception | undefined {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\nfunction _getFramesFromEvent(event: Event): StackFrame[] | undefined {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-expect-error Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { captureEvent, convertIntegrationFnToClass, defineIntegration, getClient } from '@sentry/core';\nimport type {\n  Client,\n  Event,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n  Primitive,\n  StackParser,\n} from '@sentry/types';\nimport {\n  addGlobalErrorInstrumentationHandler,\n  addGlobalUnhandledRejectionInstrumentationHandler,\n  getLocationHref,\n  isErrorEvent,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/utils';\n\nimport type { BrowserClient } from '../client';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\ntype GlobalHandlersIntegrationsOptionKeys = 'onerror' | 'onunhandledrejection';\n\ntype GlobalHandlersIntegrations = Record<GlobalHandlersIntegrationsOptionKeys, boolean>;\n\nconst INTEGRATION_NAME = 'GlobalHandlers';\n\nconst _globalHandlersIntegration = ((options: Partial<GlobalHandlersIntegrations> = {}) => {\n  const _options = {\n    onerror: true,\n    onunhandledrejection: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      Error.stackTraceLimit = 50;\n    },\n    setup(client) {\n      if (_options.onerror) {\n        _installGlobalOnErrorHandler(client);\n        globalHandlerLog('onerror');\n      }\n      if (_options.onunhandledrejection) {\n        _installGlobalOnUnhandledRejectionHandler(client);\n        globalHandlerLog('onunhandledrejection');\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const globalHandlersIntegration = defineIntegration(_globalHandlersIntegration);\n\n/**\n * Global handlers.\n * @deprecated Use `globalHandlersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const GlobalHandlers = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  globalHandlersIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }> & {\n  new (options?: Partial<GlobalHandlersIntegrations>): Integration;\n};\n\nfunction _installGlobalOnErrorHandler(client: Client): void {\n  addGlobalErrorInstrumentationHandler(data => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const { msg, url, line, column, error } = data;\n\n    const event =\n      error === undefined && isString(msg)\n        ? _eventFromIncompleteOnError(msg, url, line, column)\n        : _enhanceEventWithInitialFrame(\n            eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n            url,\n            line,\n            column,\n          );\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onerror',\n      },\n    });\n  });\n}\n\nfunction _installGlobalOnUnhandledRejectionHandler(client: Client): void {\n  addGlobalUnhandledRejectionInstrumentationHandler(e => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const error = _getUnhandledRejectionError(e as unknown);\n\n    const event = isPrimitive(error)\n      ? _eventFromRejectionWithPrimitive(error)\n      : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n  });\n}\n\nfunction _getUnhandledRejectionError(error: unknown): unknown {\n  if (isPrimitive(error)) {\n    return error;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const e = error as any;\n\n  // dig the object of the rejection out of known event types\n  try {\n    // PromiseRejectionEvents store the object of the rejection under 'reason'\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n    if ('reason' in e) {\n      return e.reason;\n    }\n\n    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n    // https://github.com/getsentry/sentry-javascript/issues/2380\n    else if ('detail' in e && 'reason' in e.detail) {\n      return e.detail.reason;\n    }\n  } catch {} // eslint-disable-line no-empty\n\n  return error;\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason: Primitive): Event {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg: any, url: any, line: any, column: any): Event {\n  const ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  const groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event: Event, url: any, line: any, column: any): Event {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type: string): void {\n  DEBUG_BUILD && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction getOptions(): { stackParser: StackParser; attachStacktrace?: boolean } {\n  const client = getClient<BrowserClient>();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return options;\n}\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\n\nimport { WINDOW } from '../helpers';\n\nconst INTEGRATION_NAME = 'HttpContext';\n\nconst _httpContextIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      // grab as much info as exists and add it to the event\n      const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n      const { referrer } = WINDOW.document || {};\n      const { userAgent } = WINDOW.navigator || {};\n\n      const headers = {\n        ...(event.request && event.request.headers),\n        ...(referrer && { Referer: referrer }),\n        ...(userAgent && { 'User-Agent': userAgent }),\n      };\n      const request = { ...event.request, ...(url && { url }), headers };\n\n      event.request = request;\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const httpContextIntegration = defineIntegration(_httpContextIntegration);\n\n/**\n * HttpContext integration collects information about HTTP request headers.\n * @deprecated Use `httpContextIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const HttpContext = convertIntegrationFnToClass(INTEGRATION_NAME, httpContextIntegration) as IntegrationClass<\n  Integration & { preprocessEvent: (event: Event) => void }\n>;\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Client, Event, EventHint, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport { applyAggregateErrorsToEvent } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder';\n\ninterface LinkedErrorsOptions {\n  key?: string;\n  limit?: number;\n}\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options: LinkedErrorsOptions = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n\n/**\n * Aggregrate linked errors in an event.\n * @deprecated Use `linkedErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const LinkedErrors = convertIntegrationFnToClass(INTEGRATION_NAME, linkedErrorsIntegration) as IntegrationClass<\n  Integration & { preprocessEvent: (event: Event, hint: EventHint, client: Client) => void }\n> & { new (options?: { key?: string; limit?: number }): Integration };\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Integration, IntegrationClass, IntegrationFn, WrappedFunction } from '@sentry/types';\nimport { fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\n\nimport { WINDOW, wrap } from '../helpers';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\nconst INTEGRATION_NAME = 'TryCatch';\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress' | 'onreadystatechange';\n\ninterface TryCatchOptions {\n  setTimeout: boolean;\n  setInterval: boolean;\n  requestAnimationFrame: boolean;\n  XMLHttpRequest: boolean;\n  eventTarget: boolean | string[];\n}\n\nconst _browserApiErrorsIntegration = ((options: Partial<TryCatchOptions> = {}) => {\n  const _options = {\n    XMLHttpRequest: true,\n    eventTarget: true,\n    requestAnimationFrame: true,\n    setInterval: true,\n    setTimeout: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO: This currently only works for the first client this is setup\n    // We may want to adjust this to check for client etc.\n    setupOnce() {\n      if (_options.setTimeout) {\n        fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n      }\n\n      if (_options.setInterval) {\n        fill(WINDOW, 'setInterval', _wrapTimeFunction);\n      }\n\n      if (_options.requestAnimationFrame) {\n        fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n      }\n\n      if (_options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n        fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n      }\n\n      const eventTargetOption = _options.eventTarget;\n      if (eventTargetOption) {\n        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(_wrapEventTarget);\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const browserApiErrorsIntegration = defineIntegration(_browserApiErrorsIntegration);\n\n/**\n * Wrap timer functions and event targets to catch errors and provide better meta data.\n * @deprecated Use `browserApiErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const TryCatch = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  browserApiErrorsIntegration,\n) as IntegrationClass<Integration> & {\n  new (options?: {\n    setTimeout: boolean;\n    setInterval: boolean;\n    requestAnimationFrame: boolean;\n    XMLHttpRequest: boolean;\n    eventTarget: boolean | string[];\n  }): Integration;\n};\n\nfunction _wrapTimeFunction(original: () => void): () => number {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, ...args: any[]): number {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original: any): (callback: () => void) => any {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, callback: () => void): () => void {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\nfunction _wrapXHR(originalSend: () => void): () => void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: XMLHttpRequest, ...args: any[]): void {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original: WrappedFunction): () => any {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\nfunction _wrapEventTarget(target: string): void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const globalObject = WINDOW as { [key: string]: any };\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = globalObject[target] && globalObject[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original: VoidFunction,): (\n    eventName: string,\n    fn: EventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ) => void {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this: any,\n      eventName: string,\n      fn: EventListenerObject,\n      options?: boolean | AddEventListenerOptions,\n    ): (eventName: string, fn: EventListenerObject, capture?: boolean, secure?: boolean) => void {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrap(fn as any as WrappedFunction, {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener: () => void,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): (this: any, eventName: string, fn: EventListenerObject, options?: boolean | EventListenerOptions) => () => void {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn as unknown as WrappedFunction;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n","import type { Hub } from '@sentry/core';\nimport { functionToStringIntegration, inboundFiltersIntegration } from '@sentry/core';\nimport {\n  captureSession,\n  getClient,\n  getCurrentHub,\n  getIntegrationsToSetup,\n  getReportDialogEndpoint,\n  initAndBind,\n  startSession,\n} from '@sentry/core';\nimport type { Integration, Options, UserFeedback } from '@sentry/types';\nimport {\n  addHistoryInstrumentationHandler,\n  logger,\n  stackParserFromStackParserOptions,\n  supportsFetch,\n} from '@sentry/utils';\n\nimport type { BrowserClientOptions, BrowserOptions } from './client';\nimport { BrowserClient } from './client';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { ReportDialogOptions } from './helpers';\nimport { WINDOW, wrap as internalWrap } from './helpers';\nimport { breadcrumbsIntegration } from './integrations/breadcrumbs';\nimport { dedupeIntegration } from './integrations/dedupe';\nimport { globalHandlersIntegration } from './integrations/globalhandlers';\nimport { httpContextIntegration } from './integrations/httpcontext';\nimport { linkedErrorsIntegration } from './integrations/linkederrors';\nimport { browserApiErrorsIntegration } from './integrations/trycatch';\nimport { defaultStackParser } from './stack-parsers';\nimport { makeFetchTransport, makeXHRTransport } from './transports';\n\n/** @deprecated Use `getDefaultIntegrations(options)` instead. */\nexport const defaultIntegrations = [\n  inboundFiltersIntegration(),\n  functionToStringIntegration(),\n  browserApiErrorsIntegration(),\n  breadcrumbsIntegration(),\n  globalHandlersIntegration(),\n  linkedErrorsIntegration(),\n  dedupeIntegration(),\n  httpContextIntegration(),\n];\n\n/** Get the default integrations for the browser SDK. */\nexport function getDefaultIntegrations(_options: Options): Integration[] {\n  // We return a copy of the defaultIntegrations here to avoid mutating this\n  return [\n    // eslint-disable-next-line deprecation/deprecation\n    ...defaultIntegrations,\n  ];\n}\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\ndeclare const __SENTRY_RELEASE__: string | undefined;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): void {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = getDefaultIntegrations(options);\n  }\n  if (options.release === undefined) {\n    // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n    if (typeof __SENTRY_RELEASE__ === 'string') {\n      options.release = __SENTRY_RELEASE__;\n    }\n\n    // This supports the variable that sentry-webpack-plugin injects\n    if (WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id) {\n      options.release = WINDOW.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  const clientOptions: BrowserClientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\ntype NewReportDialogOptions = ReportDialogOptions & { eventId: string }; // eslint-disable-line\n\ninterface ShowReportDialogFunction {\n  /**\n   * Present the user with a report dialog.\n   *\n   * @param options Everything is optional, we try to fetch all info need from the global scope.\n   */\n  (options: NewReportDialogOptions): void;\n\n  /**\n   * Present the user with a report dialog.\n   *\n   * @param options Everything is optional, we try to fetch all info need from the global scope.\n   *\n   * @deprecated Please always pass an `options` argument with `eventId`. The `hub` argument will not be used in the next version of the SDK.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  (options?: ReportDialogOptions, hub?: Hub): void;\n}\n\nexport const showReportDialog: ShowReportDialogFunction = (\n  // eslint-disable-next-line deprecation/deprecation\n  options: ReportDialogOptions = {},\n  // eslint-disable-next-line deprecation/deprecation\n  hub: Hub = getCurrentHub(),\n) => {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    DEBUG_BUILD && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  const { client, scope } = hub.getStackTop();\n  const dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    DEBUG_BUILD && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  // TODO(v8): Remove this entire if statement. `eventId` will be a required option.\n  // eslint-disable-next-line deprecation/deprecation\n  if (!options.eventId) {\n    // eslint-disable-next-line deprecation/deprecation\n    options.eventId = hub.lastEventId();\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const { onClose } = options;\n  if (onClose) {\n    const reportDialogClosedMessageHandler = (event: MessageEvent): void => {\n      if (event.data === '__sentry_reportdialog_closed__') {\n        try {\n          onClose();\n        } finally {\n          WINDOW.removeEventListener('message', reportDialogClosedMessageHandler);\n        }\n      }\n    };\n    WINDOW.addEventListener('message', reportDialogClosedMessageHandler);\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    DEBUG_BUILD && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n};\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @deprecated This function will be removed in v8.\n * It is not part of Sentry's official API and it's easily replaceable by using a try/catch block\n * and calling Sentry.captureException.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// TODO(v8): Remove this function\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function wrap(fn: (...args: any) => any): any {\n  return internalWrap(fn)();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking(): void {\n  if (typeof WINDOW.document === 'undefined') {\n    DEBUG_BUILD && logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSession({ ignoreDuration: true });\n  captureSession();\n\n  // We want to create a session for every navigation as well\n  addHistoryInstrumentationHandler(({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (from !== undefined && from !== to) {\n      startSession({ ignoreDuration: true });\n      captureSession();\n    }\n  });\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n */\nexport function captureUserFeedback(feedback: UserFeedback): void {\n  const client = getClient<BrowserClient>();\n  if (client) {\n    client.captureUserFeedback(feedback);\n  }\n}\n","// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport type { GenericFunction } from './types';\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nexport function _optionalChain(ops: unknown[]): unknown {\n  let lastAccessLHS: unknown = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] as string;\n    const fn = ops[i + 1] as (intermediateValue: unknown) => unknown;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args: unknown[]) => (value as GenericFunction).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n","import { isNodeEnv } from './node';\nimport { GLOBAL_OBJ } from './worldwide';\n\n/**\n * Returns true if we are in the browser.\n */\nexport function isBrowser(): boolean {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' && (!isNodeEnv() || isElectronNodeRenderer());\n}\n\ntype ElectronProcess = { type?: string };\n\n// Electron renderers with nodeIntegration enabled are detected as Node.js so we specifically test for them\nfunction isElectronNodeRenderer(): boolean {\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    (GLOBAL_OBJ as any).process !== undefined && ((GLOBAL_OBJ as any).process as ElectronProcess).type === 'renderer'\n  );\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Metric, ReportCallback } from '../types';\n\nexport const bindReporter = (\n  callback: ReportCallback,\n  metric: Metric,\n  reportAllChanges?: boolean,\n): ((forceReport?: boolean) => void) => {\n  let prevValue: number;\n  let delta: number;\n  return (forceReport?: boolean) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ &\n  // document is not available in all browser environments (webworkers). We make it optional so you have to explicitly check for it\n  Omit<Window, 'document'> &\n  Partial<Pick<Window, 'document'>>;\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport type { NavigationTimingPolyfillEntry } from '../types';\n\nconst getNavigationEntryFromPerformanceTiming = (): NavigationTimingPolyfillEntry => {\n  // eslint-disable-next-line deprecation/deprecation\n  const timing = WINDOW.performance.timing;\n  // eslint-disable-next-line deprecation/deprecation\n  const type = WINDOW.performance.navigation.type;\n\n  const navigationEntry: { [key: string]: number | string } = {\n    entryType: 'navigation',\n    startTime: 0,\n    type: type == 2 ? 'back_forward' : type === 1 ? 'reload' : 'navigate',\n  };\n\n  for (const key in timing) {\n    if (key !== 'navigationStart' && key !== 'toJSON') {\n      // eslint-disable-next-line deprecation/deprecation\n      navigationEntry[key] = Math.max((timing[key as keyof PerformanceTiming] as number) - timing.navigationStart, 0);\n    }\n  }\n  return navigationEntry as unknown as NavigationTimingPolyfillEntry;\n};\n\nexport const getNavigationEntry = (): PerformanceNavigationTiming | NavigationTimingPolyfillEntry | undefined => {\n  if (WINDOW.__WEB_VITALS_POLYFILL__) {\n    return (\n      WINDOW.performance &&\n      ((performance.getEntriesByType && performance.getEntriesByType('navigation')[0]) ||\n        getNavigationEntryFromPerformanceTiming())\n    );\n  } else {\n    return WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n  }\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getNavigationEntry } from './getNavigationEntry';\n\nexport const getActivationStart = (): number => {\n  const navEntry = getNavigationEntry();\n  return (navEntry && navEntry.activationStart) || 0;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport type { Metric } from '../types';\nimport { generateUniqueID } from './generateUniqueID';\nimport { getActivationStart } from './getActivationStart';\nimport { getNavigationEntry } from './getNavigationEntry';\n\nexport const initMetric = (name: Metric['name'], value?: number): Metric => {\n  const navEntry = getNavigationEntry();\n  let navigationType: Metric['navigationType'] = 'navigate';\n\n  if (navEntry) {\n    if ((WINDOW.document && WINDOW.document.prerendering) || getActivationStart() > 0) {\n      navigationType = 'prerender';\n    } else {\n      navigationType = navEntry.type.replace(/_/g, '-') as Metric['navigationType'];\n    }\n  }\n\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good', // Will be updated if the value changes.\n    delta: 0,\n    entries: [],\n    id: generateUniqueID(),\n    navigationType,\n  };\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nexport const generateUniqueID = (): string => {\n  return `v3-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FirstInputPolyfillEntry, NavigationTimingPolyfillEntry, PerformancePaintTiming } from '../types';\n\nexport interface PerformanceEntryHandler {\n  (entry: PerformanceEntry): void;\n}\n\ninterface PerformanceEntryMap {\n  event: PerformanceEventTiming[];\n  paint: PerformancePaintTiming[];\n  'layout-shift': LayoutShift[];\n  'largest-contentful-paint': LargestContentfulPaint[];\n  'first-input': PerformanceEventTiming[] | FirstInputPolyfillEntry[];\n  navigation: PerformanceNavigationTiming[] | NavigationTimingPolyfillEntry[];\n  resource: PerformanceResourceTiming[];\n  longtask: PerformanceEntry[];\n}\n\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nexport const observe = <K extends keyof PerformanceEntryMap>(\n  type: K,\n  callback: (entries: PerformanceEntryMap[K]) => void,\n  opts?: PerformanceObserverInit,\n): PerformanceObserver | undefined => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        callback(list.getEntries() as PerformanceEntryMap[K]);\n      });\n      po.observe(\n        Object.assign(\n          {\n            type,\n            buffered: true,\n          },\n          opts || {},\n        ) as PerformanceObserverInit,\n      );\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\n\nexport interface OnHiddenCallback {\n  (event: Event): void;\n}\n\nexport const onHidden = (cb: OnHiddenCallback, once?: boolean): void => {\n  const onHiddenOrPageHide = (event: Event): void => {\n    if (event.type === 'pagehide' || WINDOW.document!.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n\n  if (WINDOW.document) {\n    addEventListener('visibilitychange', onHiddenOrPageHide, true);\n    // Some browsers have buggy implementations of visibilitychange,\n    // so we use pagehide in addition, just to be safe.\n    addEventListener('pagehide', onHiddenOrPageHide, true);\n  }\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport type { CLSMetric, ReportCallback, StopListening } from './types';\n\n/**\n * Calculates the [CLS](https://web.dev/cls/) value for the current page and\n * calls the `callback` function once the value is ready to be reported, along\n * with all `layout-shift` performance entries that were used in the metric\n * value calculation. The reported value is a `double` (corresponding to a\n * [layout shift score](https://web.dev/cls/#layout-shift-score)).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** CLS should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nexport const onCLS = (onReport: ReportCallback): StopListening | undefined => {\n  const metric = initMetric('CLS', 0);\n  let report: ReturnType<typeof bindReporter>;\n\n  let sessionValue = 0;\n  let sessionEntries: PerformanceEntry[] = [];\n\n  // const handleEntries = (entries: Metric['entries']) => {\n  const handleEntries = (entries: LayoutShift[]): void => {\n    entries.forEach(entry => {\n      // Only count layout shifts without recent user input.\n      if (!entry.hadRecentInput) {\n        const firstSessionEntry = sessionEntries[0];\n        const lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n        // If the entry occurred less than 1 second after the previous entry and\n        // less than 5 seconds after the first entry in the session, include the\n        // entry in the current session. Otherwise, start a new session.\n        if (\n          sessionValue &&\n          sessionEntries.length !== 0 &&\n          entry.startTime - lastSessionEntry.startTime < 1000 &&\n          entry.startTime - firstSessionEntry.startTime < 5000\n        ) {\n          sessionValue += entry.value;\n          sessionEntries.push(entry);\n        } else {\n          sessionValue = entry.value;\n          sessionEntries = [entry];\n        }\n\n        // If the current session value is larger than the current CLS value,\n        // update CLS and the entries contributing to it.\n        if (sessionValue > metric.value) {\n          metric.value = sessionValue;\n          metric.entries = sessionEntries;\n          if (report) {\n            report();\n          }\n        }\n      }\n    });\n  };\n\n  const po = observe('layout-shift', handleEntries);\n  if (po) {\n    report = bindReporter(onReport, metric);\n\n    const stopListening = (): void => {\n      handleEntries(po.takeRecords() as CLSMetric['entries']);\n      report(true);\n    };\n\n    onHidden(stopListening);\n\n    return stopListening;\n  }\n\n  return;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport { onHidden } from './onHidden';\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = (): void => {\n  // If the document is hidden and not prerendering, assume it was always\n  // hidden and the page was loaded in the background.\n  if (WINDOW.document && WINDOW.document.visibilityState) {\n    firstHiddenTime = WINDOW.document.visibilityState === 'hidden' && !WINDOW.document.prerendering ? 0 : Infinity;\n  }\n};\n\nconst trackChanges = (): void => {\n  // Update the time if/when the document becomes hidden.\n  onHidden(({ timeStamp }) => {\n    firstHiddenTime = timeStamp;\n  }, true);\n};\n\nexport const getVisibilityWatcher = (): {\n  readonly firstHiddenTime: number;\n} => {\n  if (firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    initHiddenTime();\n    trackChanges();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport type { FIDMetric, PerformanceEventTiming, ReportCallback } from './types';\n\n/**\n * Calculates the [FID](https://web.dev/fid/) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `first-input` performance entry used to determine the value. The\n * reported value is a `DOMHighResTimeStamp`.\n *\n * _**Important:** since FID is only reported after the user interacts with the\n * page, it's possible that it will not be reported for some page loads._\n */\nexport const onFID = (onReport: ReportCallback): void => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('FID');\n  // eslint-disable-next-line prefer-const\n  let report: ReturnType<typeof bindReporter>;\n\n  const handleEntry = (entry: PerformanceEventTiming): void => {\n    // Only report if the page wasn't hidden prior to the first input.\n    if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n      metric.value = entry.processingStart - entry.startTime;\n      metric.entries.push(entry);\n      report(true);\n    }\n  };\n\n  const handleEntries = (entries: FIDMetric['entries']): void => {\n    (entries as PerformanceEventTiming[]).forEach(handleEntry);\n  };\n\n  const po = observe('first-input', handleEntries);\n  report = bindReporter(onReport, metric);\n\n  if (po) {\n    onHidden(() => {\n      handleEntries(po.takeRecords() as FIDMetric['entries']);\n      po.disconnect();\n    }, true);\n  }\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Metric } from '../../types';\nimport { observe } from '../observe';\n\ndeclare global {\n  interface Performance {\n    interactionCount: number;\n  }\n}\n\nlet interactionCountEstimate = 0;\nlet minKnownInteractionId = Infinity;\nlet maxKnownInteractionId = 0;\n\nconst updateEstimate = (entries: Metric['entries']): void => {\n  (entries as PerformanceEventTiming[]).forEach(e => {\n    if (e.interactionId) {\n      minKnownInteractionId = Math.min(minKnownInteractionId, e.interactionId);\n      maxKnownInteractionId = Math.max(maxKnownInteractionId, e.interactionId);\n\n      interactionCountEstimate = maxKnownInteractionId ? (maxKnownInteractionId - minKnownInteractionId) / 7 + 1 : 0;\n    }\n  });\n};\n\nlet po: PerformanceObserver | undefined;\n\n/**\n * Returns the `interactionCount` value using the native API (if available)\n * or the polyfill estimate in this module.\n */\nexport const getInteractionCount = (): number => {\n  return po ? interactionCountEstimate : performance.interactionCount || 0;\n};\n\n/**\n * Feature detects native support or initializes the polyfill if needed.\n */\nexport const initInteractionCountPolyfill = (): void => {\n  if ('interactionCount' in performance || po) return;\n\n  po = observe('event', updateEstimate, {\n    type: 'event',\n    buffered: true,\n    durationThreshold: 0,\n  } as PerformanceObserverInit);\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport { getInteractionCount, initInteractionCountPolyfill } from './lib/polyfills/interactionCountPolyfill';\nimport type { ReportCallback, ReportOpts } from './types';\nimport type { INPMetric } from './types/inp';\n\ninterface Interaction {\n  id: number;\n  latency: number;\n  entries: PerformanceEventTiming[];\n}\n\n/**\n * Returns the interaction count since the last bfcache restore (or for the\n * full page lifecycle if there were no bfcache restores).\n */\nconst getInteractionCountForNavigation = (): number => {\n  return getInteractionCount();\n};\n\n// To prevent unnecessary memory usage on pages with lots of interactions,\n// store at most 10 of the longest interactions to consider as INP candidates.\nconst MAX_INTERACTIONS_TO_CONSIDER = 10;\n\n// A list of longest interactions on the page (by latency) sorted so the\n// longest one is first. The list is as most MAX_INTERACTIONS_TO_CONSIDER long.\nconst longestInteractionList: Interaction[] = [];\n\n// A mapping of longest interactions by their interaction ID.\n// This is used for faster lookup.\nconst longestInteractionMap: { [interactionId: string]: Interaction } = {};\n\n/**\n * Takes a performance entry and adds it to the list of worst interactions\n * if its duration is long enough to make it among the worst. If the\n * entry is part of an existing interaction, it is merged and the latency\n * and entries list is updated as needed.\n */\nconst processEntry = (entry: PerformanceEventTiming): void => {\n  // The least-long of the 10 longest interactions.\n  const minLongestInteraction = longestInteractionList[longestInteractionList.length - 1];\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const existingInteraction = longestInteractionMap[entry.interactionId!];\n\n  // Only process the entry if it's possibly one of the ten longest,\n  // or if it's part of an existing interaction.\n  if (\n    existingInteraction ||\n    longestInteractionList.length < MAX_INTERACTIONS_TO_CONSIDER ||\n    entry.duration > minLongestInteraction.latency\n  ) {\n    // If the interaction already exists, update it. Otherwise create one.\n    if (existingInteraction) {\n      existingInteraction.entries.push(entry);\n      existingInteraction.latency = Math.max(existingInteraction.latency, entry.duration);\n    } else {\n      const interaction = {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        id: entry.interactionId!,\n        latency: entry.duration,\n        entries: [entry],\n      };\n      longestInteractionMap[interaction.id] = interaction;\n      longestInteractionList.push(interaction);\n    }\n\n    // Sort the entries by latency (descending) and keep only the top ten.\n    longestInteractionList.sort((a, b) => b.latency - a.latency);\n    longestInteractionList.splice(MAX_INTERACTIONS_TO_CONSIDER).forEach(i => {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete longestInteractionMap[i.id];\n    });\n  }\n};\n\n/**\n * Returns the estimated p98 longest interaction based on the stored\n * interaction candidates and the interaction count for the current page.\n */\nconst estimateP98LongestInteraction = (): Interaction => {\n  const candidateInteractionIndex = Math.min(\n    longestInteractionList.length - 1,\n    Math.floor(getInteractionCountForNavigation() / 50),\n  );\n\n  return longestInteractionList[candidateInteractionIndex];\n};\n\n/**\n * Calculates the [INP](https://web.dev/responsiveness/) value for the current\n * page and calls the `callback` function once the value is ready, along with\n * the `event` performance entries reported for that interaction. The reported\n * value is a `DOMHighResTimeStamp`.\n *\n * A custom `durationThreshold` configuration option can optionally be passed to\n * control what `event-timing` entries are considered for INP reporting. The\n * default threshold is `40`, which means INP scores of less than 40 are\n * reported as 0. Note that this will not affect your 75th percentile INP value\n * unless that value is also less than 40 (well below the recommended\n * [good](https://web.dev/inp/#what-is-a-good-inp-score) threshold).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** INP should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nexport const onINP = (onReport: ReportCallback, opts?: ReportOpts): void => {\n  // Set defaults\n  // eslint-disable-next-line no-param-reassign\n  opts = opts || {};\n\n  // https://web.dev/inp/#what's-a-%22good%22-inp-value\n  // const thresholds = [200, 500];\n\n  // TODO(philipwalton): remove once the polyfill is no longer needed.\n  initInteractionCountPolyfill();\n\n  const metric = initMetric('INP');\n  // eslint-disable-next-line prefer-const\n  let report: ReturnType<typeof bindReporter>;\n\n  const handleEntries = (entries: INPMetric['entries']): void => {\n    entries.forEach(entry => {\n      if (entry.interactionId) {\n        processEntry(entry);\n      }\n\n      // Entries of type `first-input` don't currently have an `interactionId`,\n      // so to consider them in INP we have to first check that an existing\n      // entry doesn't match the `duration` and `startTime`.\n      // Note that this logic assumes that `event` entries are dispatched\n      // before `first-input` entries. This is true in Chrome but it is not\n      // true in Firefox; however, Firefox doesn't support interactionId, so\n      // it's not an issue at the moment.\n      // TODO(philipwalton): remove once crbug.com/1325826 is fixed.\n      if (entry.entryType === 'first-input') {\n        const noMatchingEntry = !longestInteractionList.some(interaction => {\n          return interaction.entries.some(prevEntry => {\n            return entry.duration === prevEntry.duration && entry.startTime === prevEntry.startTime;\n          });\n        });\n        if (noMatchingEntry) {\n          processEntry(entry);\n        }\n      }\n    });\n\n    const inp = estimateP98LongestInteraction();\n\n    if (inp && inp.latency !== metric.value) {\n      metric.value = inp.latency;\n      metric.entries = inp.entries;\n      report();\n    }\n  };\n\n  const po = observe('event', handleEntries, {\n    // Event Timing entries have their durations rounded to the nearest 8ms,\n    // so a duration of 40ms would be any event that spans 2.5 or more frames\n    // at 60Hz. This threshold is chosen to strike a balance between usefulness\n    // and performance. Running this callback for any interaction that spans\n    // just one or two frames is likely not worth the insight that could be\n    // gained.\n    durationThreshold: opts.durationThreshold || 40,\n  } as PerformanceObserverInit);\n\n  report = bindReporter(onReport, metric, opts.reportAllChanges);\n\n  if (po) {\n    // Also observe entries of type `first-input`. This is useful in cases\n    // where the first interaction is less than the `durationThreshold`.\n    po.observe({ type: 'first-input', buffered: true });\n\n    onHidden(() => {\n      handleEntries(po.takeRecords() as INPMetric['entries']);\n\n      // If the interaction count shows that there were interactions but\n      // none were captured by the PerformanceObserver, report a latency of 0.\n      if (metric.value < 0 && getInteractionCountForNavigation() > 0) {\n        metric.value = 0;\n        metric.entries = [];\n      }\n\n      report(true);\n    });\n  }\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../types';\nimport { bindReporter } from './lib/bindReporter';\nimport { getActivationStart } from './lib/getActivationStart';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport type { LCPMetric, ReportCallback, StopListening } from './types';\n\nconst reportedMetricIDs: Record<string, boolean> = {};\n\n/**\n * Calculates the [LCP](https://web.dev/lcp/) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n */\nexport const onLCP = (onReport: ReportCallback): StopListening | undefined => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('LCP');\n  let report: ReturnType<typeof bindReporter>;\n\n  const handleEntries = (entries: LCPMetric['entries']): void => {\n    const lastEntry = entries[entries.length - 1] as LargestContentfulPaint;\n    if (lastEntry) {\n      // The startTime attribute returns the value of the renderTime if it is\n      // not 0, and the value of the loadTime otherwise. The activationStart\n      // reference is used because LCP should be relative to page activation\n      // rather than navigation start if the page was prerendered.\n      const value = Math.max(lastEntry.startTime - getActivationStart(), 0);\n\n      // Only report if the page wasn't hidden prior to LCP.\n      if (value < visibilityWatcher.firstHiddenTime) {\n        metric.value = value;\n        metric.entries = [lastEntry];\n        report();\n      }\n    }\n  };\n\n  const po = observe('largest-contentful-paint', handleEntries);\n\n  if (po) {\n    report = bindReporter(onReport, metric);\n\n    const stopListening = (): void => {\n      if (!reportedMetricIDs[metric.id]) {\n        handleEntries(po.takeRecords() as LCPMetric['entries']);\n        po.disconnect();\n        reportedMetricIDs[metric.id] = true;\n        report(true);\n      }\n    };\n\n    // Stop listening after input. Note: while scrolling is an input that\n    // stop LCP observation, it's unreliable since it can be programmatically\n    // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n    ['keydown', 'click'].forEach(type => {\n      if (WINDOW.document) {\n        addEventListener(type, stopListening, { once: true, capture: true });\n      }\n    });\n\n    onHidden(stopListening, true);\n\n    return stopListening;\n  }\n\n  return;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../types';\nimport { bindReporter } from './lib/bindReporter';\nimport { getActivationStart } from './lib/getActivationStart';\nimport { getNavigationEntry } from './lib/getNavigationEntry';\nimport { initMetric } from './lib/initMetric';\nimport type { ReportCallback, ReportOpts } from './types';\nimport type { TTFBMetric } from './types/ttfb';\n\n/**\n * Runs in the next task after the page is done loading and/or prerendering.\n * @param callback\n */\nconst whenReady = (callback: () => void): void => {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  if (WINDOW.document.prerendering) {\n    addEventListener('prerenderingchange', () => whenReady(callback), true);\n  } else if (WINDOW.document.readyState !== 'complete') {\n    addEventListener('load', () => whenReady(callback), true);\n  } else {\n    // Queue a task so the callback runs after `loadEventEnd`.\n    setTimeout(callback, 0);\n  }\n};\n\n/**\n * Calculates the [TTFB](https://web.dev/time-to-first-byte/) value for the\n * current page and calls the `callback` function once the page has loaded,\n * along with the relevant `navigation` performance entry used to determine the\n * value. The reported value is a `DOMHighResTimeStamp`.\n *\n * Note, this function waits until after the page is loaded to call `callback`\n * in order to ensure all properties of the `navigation` entry are populated.\n * This is useful if you want to report on other metrics exposed by the\n * [Navigation Timing API](https://w3c.github.io/navigation-timing/). For\n * example, the TTFB metric starts from the page's [time\n * origin](https://www.w3.org/TR/hr-time-2/#sec-time-origin), which means it\n * includes time spent on DNS lookup, connection negotiation, network latency,\n * and server processing time.\n */\nexport const onTTFB = (onReport: ReportCallback, opts?: ReportOpts): void => {\n  // Set defaults\n  // eslint-disable-next-line no-param-reassign\n  opts = opts || {};\n\n  // https://web.dev/ttfb/#what-is-a-good-ttfb-score\n  // const thresholds = [800, 1800];\n\n  const metric = initMetric('TTFB');\n  const report = bindReporter(onReport, metric, opts.reportAllChanges);\n\n  whenReady(() => {\n    const navEntry = getNavigationEntry() as TTFBMetric['entries'][number];\n\n    if (navEntry) {\n      // The activationStart reference is used because TTFB should be\n      // relative to page activation rather than navigation start if the\n      // page was prerendered. But in cases where `activationStart` occurs\n      // after the first byte is received, this time should be clamped at 0.\n      metric.value = Math.max(navEntry.responseStart - getActivationStart(), 0);\n\n      // In some cases the value reported is negative or is larger\n      // than the current page time. Ignore these cases:\n      // https://github.com/GoogleChrome/web-vitals/issues/137\n      // https://github.com/GoogleChrome/web-vitals/issues/162\n      if (metric.value < 0 || metric.value > performance.now()) return;\n\n      metric.entries = [navEntry];\n\n      report(true);\n    }\n  });\n};\n","import { getFunctionName, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../common/debug-build';\nimport { onCLS } from './web-vitals/getCLS';\nimport { onFID } from './web-vitals/getFID';\nimport { onINP } from './web-vitals/getINP';\nimport { onLCP } from './web-vitals/getLCP';\nimport { observe } from './web-vitals/lib/observe';\nimport { onTTFB } from './web-vitals/onTTFB';\n\ntype InstrumentHandlerTypePerformanceObserver =\n  | 'longtask'\n  | 'event'\n  | 'navigation'\n  | 'paint'\n  | 'resource'\n  | 'first-input';\n\ntype InstrumentHandlerTypeMetric = 'cls' | 'lcp' | 'fid' | 'ttfb' | 'inp';\n\n// We provide this here manually instead of relying on a global, as this is not available in non-browser environements\n// And we do not want to expose such types\ninterface PerformanceEntry {\n  readonly duration: number;\n  readonly entryType: string;\n  readonly name: string;\n  readonly startTime: number;\n  toJSON(): Record<string, unknown>;\n}\ninterface PerformanceEventTiming extends PerformanceEntry {\n  processingStart: number;\n  processingEnd: number;\n  duration: number;\n  cancelable?: boolean;\n  target?: unknown | null;\n  interactionId?: number;\n}\n\ninterface Metric {\n  /**\n   * The name of the metric (in acronym form).\n   */\n  name: 'CLS' | 'FCP' | 'FID' | 'INP' | 'LCP' | 'TTFB';\n\n  /**\n   * The current value of the metric.\n   */\n  value: number;\n\n  /**\n   * The rating as to whether the metric value is within the \"good\",\n   * \"needs improvement\", or \"poor\" thresholds of the metric.\n   */\n  rating: 'good' | 'needs-improvement' | 'poor';\n\n  /**\n   * The delta between the current value and the last-reported value.\n   * On the first report, `delta` and `value` will always be the same.\n   */\n  delta: number;\n\n  /**\n   * A unique ID representing this particular metric instance. This ID can\n   * be used by an analytics tool to dedupe multiple values sent for the same\n   * metric instance, or to group multiple deltas together and calculate a\n   * total. It can also be used to differentiate multiple different metric\n   * instances sent from the same page, which can happen if the page is\n   * restored from the back/forward cache (in that case new metrics object\n   * get created).\n   */\n  id: string;\n\n  /**\n   * Any performance entries relevant to the metric value calculation.\n   * The array may also be empty if the metric value was not based on any\n   * entries (e.g. a CLS value of 0 given no layout shifts).\n   */\n  entries: PerformanceEntry[];\n\n  /**\n   * The type of navigation\n   *\n   * Navigation Timing API (or `undefined` if the browser doesn't\n   * support that API). For pages that are restored from the bfcache, this\n   * value will be 'back-forward-cache'.\n   */\n  navigationType: 'navigate' | 'reload' | 'back-forward' | 'back-forward-cache' | 'prerender';\n}\n\ntype InstrumentHandlerType = InstrumentHandlerTypeMetric | InstrumentHandlerTypePerformanceObserver;\n\ntype StopListening = undefined | void | (() => void);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype InstrumentHandlerCallback = (data: any) => void;\n\ntype CleanupHandlerCallback = () => void;\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\nlet _previousCls: Metric | undefined;\nlet _previousFid: Metric | undefined;\nlet _previousLcp: Metric | undefined;\nlet _previousTtfb: Metric | undefined;\nlet _previousInp: Metric | undefined;\n\n/**\n * Add a callback that will be triggered when a CLS metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for CLS when the cleanup callback is called.\n * This will lead to the CLS being finalized and frozen.\n */\nexport function addClsInstrumentationHandler(\n  callback: (data: { metric: Metric }) => void,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  return addMetricObserver('cls', callback, instrumentCls, _previousCls, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a LCP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for LCP when the cleanup callback is called.\n * This will lead to the LCP being finalized and frozen.\n */\nexport function addLcpInstrumentationHandler(\n  callback: (data: { metric: Metric }) => void,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  return addMetricObserver('lcp', callback, instrumentLcp, _previousLcp, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n */\nexport function addTtfbInstrumentationHandler(callback: (data: { metric: Metric }) => void): CleanupHandlerCallback {\n  return addMetricObserver('ttfb', callback, instrumentTtfb, _previousTtfb);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addFidInstrumentationHandler(callback: (data: { metric: Metric }) => void): CleanupHandlerCallback {\n  return addMetricObserver('fid', callback, instrumentFid, _previousFid);\n}\n\n/**\n * Add a callback that will be triggered when a INP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addInpInstrumentationHandler(\n  callback: (data: { metric: Omit<Metric, 'entries'> & { entries: PerformanceEventTiming[] } }) => void,\n): CleanupHandlerCallback {\n  return addMetricObserver('inp', callback, instrumentInp, _previousInp);\n}\n\nexport function addPerformanceInstrumentationHandler(\n  type: 'event' | 'first-input',\n  callback: (data: { entries: ((PerformanceEntry & { target?: unknown | null }) | PerformanceEventTiming)[] }) => void,\n): CleanupHandlerCallback;\nexport function addPerformanceInstrumentationHandler(\n  type: InstrumentHandlerTypePerformanceObserver,\n  callback: (data: { entries: PerformanceEntry[] }) => void,\n): CleanupHandlerCallback;\n\n/**\n * Add a callback that will be triggered when a performance observer is triggered,\n * and receives the entries of the observer.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addPerformanceInstrumentationHandler(\n  type: InstrumentHandlerTypePerformanceObserver,\n  callback: (data: { entries: PerformanceEntry[] }) => void,\n): CleanupHandlerCallback {\n  addHandler(type, callback);\n\n  if (!instrumented[type]) {\n    instrumentPerformanceObserver(type);\n    instrumented[type] = true;\n  }\n\n  return getCleanupCallback(type, callback);\n}\n\n/** Trigger all handlers of a given type. */\nfunction triggerHandlers(type: InstrumentHandlerType, data: unknown): void {\n  const typeHandlers = handlers[type];\n\n  if (!typeHandlers || !typeHandlers.length) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nfunction instrumentCls(): StopListening {\n  return onCLS(metric => {\n    triggerHandlers('cls', {\n      metric,\n    });\n    _previousCls = metric;\n  });\n}\n\nfunction instrumentFid(): void {\n  return onFID(metric => {\n    triggerHandlers('fid', {\n      metric,\n    });\n    _previousFid = metric;\n  });\n}\n\nfunction instrumentLcp(): StopListening {\n  return onLCP(metric => {\n    triggerHandlers('lcp', {\n      metric,\n    });\n    _previousLcp = metric;\n  });\n}\n\nfunction instrumentTtfb(): StopListening {\n  return onTTFB(metric => {\n    triggerHandlers('ttfb', {\n      metric,\n    });\n    _previousTtfb = metric;\n  });\n}\n\nfunction instrumentInp(): void {\n  return onINP(metric => {\n    triggerHandlers('inp', {\n      metric,\n    });\n    _previousInp = metric;\n  });\n}\n\nfunction addMetricObserver(\n  type: InstrumentHandlerTypeMetric,\n  callback: InstrumentHandlerCallback,\n  instrumentFn: () => StopListening,\n  previousValue: Metric | undefined,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  addHandler(type, callback);\n\n  let stopListening: StopListening | undefined;\n\n  if (!instrumented[type]) {\n    stopListening = instrumentFn();\n    instrumented[type] = true;\n  }\n\n  if (previousValue) {\n    callback({ metric: previousValue });\n  }\n\n  return getCleanupCallback(type, callback, stopOnCallback ? stopListening : undefined);\n}\n\nfunction instrumentPerformanceObserver(type: InstrumentHandlerTypePerformanceObserver): void {\n  const options: PerformanceObserverInit = {};\n\n  // Special per-type options we want to use\n  if (type === 'event') {\n    options.durationThreshold = 0;\n  }\n\n  observe(\n    type,\n    entries => {\n      triggerHandlers(type, { entries });\n    },\n    options,\n  );\n}\n\nfunction addHandler(type: InstrumentHandlerType, handler: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(handler);\n}\n\n// Get a callback which can be called to remove the instrumentation handler\nfunction getCleanupCallback(\n  type: InstrumentHandlerType,\n  callback: InstrumentHandlerCallback,\n  stopListening: StopListening,\n): CleanupHandlerCallback {\n  return () => {\n    if (stopListening) {\n      stopListening();\n    }\n\n    const typeHandlers = handlers[type];\n\n    if (!typeHandlers) {\n      return;\n    }\n\n    const index = typeHandlers.indexOf(callback);\n    if (index !== -1) {\n      typeHandlers.splice(index, 1);\n    }\n  };\n}\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nexport const REPLAY_SESSION_KEY = 'sentryReplaySession';\nexport const REPLAY_EVENT_NAME = 'replay_event';\nexport const RECORDING_EVENT_NAME = 'replay_recording';\nexport const UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session after which recording is paused.\nexport const SESSION_IDLE_PAUSE_DURATION = 300_000; // 5 minutes in ms\n\n// The idle limit for a session after which the session expires.\nexport const SESSION_IDLE_EXPIRE_DURATION = 900_000; // 15 minutes in ms\n\n/** Default flush delays */\nexport const DEFAULT_FLUSH_MIN_DELAY = 5_000;\n// XXX: Temp fix for our debounce logic where `maxWait` would never occur if it\n// was the same as `wait`\nexport const DEFAULT_FLUSH_MAX_DELAY = 5_500;\n\n/* How long to wait for error checkouts */\nexport const BUFFER_CHECKOUT_TIME = 60_000;\n\nexport const RETRY_BASE_INTERVAL = 5000;\nexport const RETRY_MAX_COUNT = 3;\n\n/* The max (uncompressed) size in bytes of a network body. Any body larger than this will be truncated. */\nexport const NETWORK_BODY_MAX_SIZE = 150_000;\n\n/* The max size of a single console arg that is captured. Any arg larger than this will be truncated. */\nexport const CONSOLE_ARG_MAX_SIZE = 5_000;\n\n/* Min. time to wait before we consider something a slow click. */\nexport const SLOW_CLICK_THRESHOLD = 3_000;\n/* For scroll actions after a click, we only look for a very short time period to detect programmatic scrolling. */\nexport const SLOW_CLICK_SCROLL_TIMEOUT = 300;\n\n/** When encountering a total segment size exceeding this size, stop the replay (as we cannot properly ingest it). */\nexport const REPLAY_MAX_EVENT_BUFFER_SIZE = 20_000_000; // ~20MB\n\n/** Replays must be min. 5s long before we send them. */\nexport const MIN_REPLAY_DURATION = 4_999;\n/* The max. allowed value that the minReplayDuration can be set to. */\nexport const MIN_REPLAY_DURATION_LIMIT = 15_000;\n\n/** The max. length of a replay. */\nexport const MAX_REPLAY_DURATION = 3_600_000; // 60 minutes in ms;\n\n/** Default attributes to be ignored when `maskAllText` is enabled */\nexport const DEFAULT_IGNORED_ATTRIBUTES = ['title', 'placeholder'];\n","var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\r\n        return fixSafariColons(rule.cssText);\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    const a = doc.createElement('a');\r\n    a.href = attributeValue;\r\n    return a.href;\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref() {\r\n    const a = document.createElement('a');\r\n    a.href = '';\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref());\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref());\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            delete attributes.rel;\r\n            delete attributes.href;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = document.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const oldValue = image.crossOrigin;\r\n        image.crossOrigin = 'anonymous';\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\r\n            }\r\n            oldValue\r\n                ? (attributes.crossOrigin = oldValue)\r\n                : image.removeAttribute('crossorigin');\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!n.contentDocument) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload') &&\r\n                    sn.attributes.as === 'script') ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    sn.attributes.href.endsWith('.js')))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = n.contentDocument;\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        serializedNode.attributes.rel === 'stylesheet') {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        const m = match(/^([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const splitSelectors = trim(m[0])\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        })\r\n            .split(/\\s*(?![^(]*\\)),\\s*/);\r\n        if (splitSelectors.length <= 1) {\r\n            return splitSelectors.map((s) => {\r\n                return s.replace(/\\u200C/g, ',');\r\n            });\r\n        }\r\n        let i = 0;\r\n        let j = 0;\r\n        const len = splitSelectors.length;\r\n        const finalSelectors = [];\r\n        while (i < len) {\r\n            const openingParensCount = (splitSelectors[i].match(/\\(/g) || []).length;\r\n            const closingParensCount = (splitSelectors[i].match(/\\)/g) || []).length;\r\n            let unbalancedParens = openingParensCount - closingParensCount;\r\n            if (unbalancedParens >= 1) {\r\n                let foundClosingSelector = false;\r\n                j = i + 1;\r\n                while (j < len) {\r\n                    const nextOpeningParensCount = (splitSelectors[j].match(/\\(/g) || [])\r\n                        .length;\r\n                    const nextClosingParensCount = (splitSelectors[j].match(/\\)/g) || [])\r\n                        .length;\r\n                    const nextUnbalancedParens = nextClosingParensCount - nextOpeningParensCount;\r\n                    if (nextUnbalancedParens === unbalancedParens) {\r\n                        finalSelectors.push(splitSelectors.slice(i, j + 1).join(','));\r\n                        i = j + 1;\r\n                        foundClosingSelector = true;\r\n                        break;\r\n                    }\r\n                    j++;\r\n                    unbalancedParens -= nextUnbalancedParens;\r\n                }\r\n                if (foundClosingSelector) {\r\n                    continue;\r\n                }\r\n                splitSelectors\r\n                    .slice(i, len)\r\n                    .forEach((selector) => selector && finalSelectors.push(selector));\r\n                break;\r\n            }\r\n            splitSelectors[i] && finalSelectors.push(splitSelectors[i]);\r\n            i++;\r\n        }\r\n        return finalSelectors.map((s) => {\r\n            return s.replace(/\\u200C/g, ',');\r\n        });\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload') &&\r\n                        n.attributes.as === 'script') {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        n.attributes.href.endsWith('.js')) {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = document.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, fixSafariColons, genId, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, rebuild, serializeNodeWithId, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute };\n","import { distanceToMatch, IGNORED_NODE, isShadowRoot, createMatchPredicate } from '../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nfunction on(type, fn, target = document) {\r\n    const options = { capture: true, passive: true };\r\n    target.addEventListener(type, fn, options);\r\n    return () => target.removeEventListener(type, fn, options);\r\n}\r\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\r\n    '\\r\\n' +\r\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\r\n    '\\r\\n' +\r\n    'or you can use record.mirror to access the mirror instance during recording.';\r\nlet _mirror = {\r\n    map: {},\r\n    getId() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return -1;\r\n    },\r\n    getNode() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return null;\r\n    },\r\n    removeNodeFromMap() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n    has() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return false;\r\n    },\r\n    reset() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n};\r\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\r\n    _mirror = new Proxy(_mirror, {\r\n        get(target, prop, receiver) {\r\n            if (prop === 'map') {\r\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n            }\r\n            return Reflect.get(target, prop, receiver);\r\n        },\r\n    });\r\n}\r\nfunction throttle(func, wait, options = {}) {\r\n    let timeout = null;\r\n    let previous = 0;\r\n    return function (...args) {\r\n        const now = Date.now();\r\n        if (!previous && options.leading === false) {\r\n            previous = now;\r\n        }\r\n        const remaining = wait - (now - previous);\r\n        const context = this;\r\n        if (remaining <= 0 || remaining > wait) {\r\n            if (timeout) {\r\n                clearTimeout(timeout);\r\n                timeout = null;\r\n            }\r\n            previous = now;\r\n            func.apply(context, args);\r\n        }\r\n        else if (!timeout && options.trailing !== false) {\r\n            timeout = setTimeout(() => {\r\n                previous = options.leading === false ? 0 : Date.now();\r\n                timeout = null;\r\n                func.apply(context, args);\r\n            }, remaining);\r\n        }\r\n    };\r\n}\r\nfunction hookSetter(target, key, d, isRevoked, win = window) {\r\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\r\n    win.Object.defineProperty(target, key, isRevoked\r\n        ? d\r\n        : {\r\n            set(value) {\r\n                setTimeout(() => {\r\n                    d.set.call(this, value);\r\n                }, 0);\r\n                if (original && original.set) {\r\n                    original.set.call(this, value);\r\n                }\r\n            },\r\n        });\r\n    return () => hookSetter(target, key, original || {}, true);\r\n}\r\nfunction patch(source, name, replacement) {\r\n    try {\r\n        if (!(name in source)) {\r\n            return () => {\r\n            };\r\n        }\r\n        const original = source[name];\r\n        const wrapped = replacement(original);\r\n        if (typeof wrapped === 'function') {\r\n            wrapped.prototype = wrapped.prototype || {};\r\n            Object.defineProperties(wrapped, {\r\n                __rrweb_original__: {\r\n                    enumerable: false,\r\n                    value: original,\r\n                },\r\n            });\r\n        }\r\n        source[name] = wrapped;\r\n        return () => {\r\n            source[name] = original;\r\n        };\r\n    }\r\n    catch {\r\n        return () => {\r\n        };\r\n    }\r\n}\r\nlet nowTimestamp = Date.now;\r\nif (!(/[1-9][0-9]{12}/.test(Date.now().toString()))) {\r\n    nowTimestamp = () => new Date().getTime();\r\n}\r\nfunction getWindowScroll(win) {\r\n    const doc = win.document;\r\n    return {\r\n        left: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollLeft\r\n            : win.pageXOffset !== undefined\r\n                ? win.pageXOffset\r\n                : doc?.documentElement.scrollLeft ||\r\n                    doc?.body?.parentElement?.scrollLeft ||\r\n                    doc?.body?.scrollLeft ||\r\n                    0,\r\n        top: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollTop\r\n            : win.pageYOffset !== undefined\r\n                ? win.pageYOffset\r\n                : doc?.documentElement.scrollTop ||\r\n                    doc?.body?.parentElement?.scrollTop ||\r\n                    doc?.body?.scrollTop ||\r\n                    0,\r\n    };\r\n}\r\nfunction getWindowHeight() {\r\n    return (window.innerHeight ||\r\n        (document.documentElement && document.documentElement.clientHeight) ||\r\n        (document.body && document.body.clientHeight));\r\n}\r\nfunction getWindowWidth() {\r\n    return (window.innerWidth ||\r\n        (document.documentElement && document.documentElement.clientWidth) ||\r\n        (document.body && document.body.clientWidth));\r\n}\r\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\r\n    if (!node) {\r\n        return false;\r\n    }\r\n    const el = node.nodeType === node.ELEMENT_NODE\r\n        ? node\r\n        : node.parentElement;\r\n    if (!el)\r\n        return false;\r\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\r\n    if (!checkAncestors) {\r\n        const isUnblocked = unblockSelector && el.matches(unblockSelector);\r\n        return blockedPredicate(el) && !isUnblocked;\r\n    }\r\n    const blockDistance = distanceToMatch(el, blockedPredicate);\r\n    let unblockDistance = -1;\r\n    if (blockDistance < 0) {\r\n        return false;\r\n    }\r\n    if (unblockSelector) {\r\n        unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\r\n    }\r\n    if (blockDistance > -1 && unblockDistance < 0) {\r\n        return true;\r\n    }\r\n    return blockDistance < unblockDistance;\r\n}\r\nfunction isSerialized(n, mirror) {\r\n    return mirror.getId(n) !== -1;\r\n}\r\nfunction isIgnored(n, mirror) {\r\n    return mirror.getId(n) === IGNORED_NODE;\r\n}\r\nfunction isAncestorRemoved(target, mirror) {\r\n    if (isShadowRoot(target)) {\r\n        return false;\r\n    }\r\n    const id = mirror.getId(target);\r\n    if (!mirror.has(id)) {\r\n        return true;\r\n    }\r\n    if (target.parentNode &&\r\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\r\n        return false;\r\n    }\r\n    if (!target.parentNode) {\r\n        return true;\r\n    }\r\n    return isAncestorRemoved(target.parentNode, mirror);\r\n}\r\nfunction legacy_isTouchEvent(event) {\r\n    return Boolean(event.changedTouches);\r\n}\r\nfunction polyfill(win = window) {\r\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\r\n        win.NodeList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\r\n        win.DOMTokenList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if (!Node.prototype.contains) {\r\n        Node.prototype.contains = (...args) => {\r\n            let node = args[0];\r\n            if (!(0 in args)) {\r\n                throw new TypeError('1 argument is required');\r\n            }\r\n            do {\r\n                if (this === node) {\r\n                    return true;\r\n                }\r\n            } while ((node = node && node.parentNode));\r\n            return false;\r\n        };\r\n    }\r\n}\r\nfunction queueToResolveTrees(queue) {\r\n    const queueNodeMap = {};\r\n    const putIntoMap = (m, parent) => {\r\n        const nodeInTree = {\r\n            value: m,\r\n            parent,\r\n            children: [],\r\n        };\r\n        queueNodeMap[m.node.id] = nodeInTree;\r\n        return nodeInTree;\r\n    };\r\n    const queueNodeTrees = [];\r\n    for (const mutation of queue) {\r\n        const { nextId, parentId } = mutation;\r\n        if (nextId && nextId in queueNodeMap) {\r\n            const nextInTree = queueNodeMap[nextId];\r\n            if (nextInTree.parent) {\r\n                const idx = nextInTree.parent.children.indexOf(nextInTree);\r\n                nextInTree.parent.children.splice(idx, 0, putIntoMap(mutation, nextInTree.parent));\r\n            }\r\n            else {\r\n                const idx = queueNodeTrees.indexOf(nextInTree);\r\n                queueNodeTrees.splice(idx, 0, putIntoMap(mutation, null));\r\n            }\r\n            continue;\r\n        }\r\n        if (parentId in queueNodeMap) {\r\n            const parentInTree = queueNodeMap[parentId];\r\n            parentInTree.children.push(putIntoMap(mutation, parentInTree));\r\n            continue;\r\n        }\r\n        queueNodeTrees.push(putIntoMap(mutation, null));\r\n    }\r\n    return queueNodeTrees;\r\n}\r\nfunction iterateResolveTree(tree, cb) {\r\n    cb(tree.value);\r\n    for (let i = tree.children.length - 1; i >= 0; i--) {\r\n        iterateResolveTree(tree.children[i], cb);\r\n    }\r\n}\r\nfunction isSerializedIframe(n, mirror) {\r\n    return Boolean(n.nodeName === 'IFRAME' && mirror.getMeta(n));\r\n}\r\nfunction isSerializedStylesheet(n, mirror) {\r\n    return Boolean(n.nodeName === 'LINK' &&\r\n        n.nodeType === n.ELEMENT_NODE &&\r\n        n.getAttribute &&\r\n        n.getAttribute('rel') === 'stylesheet' &&\r\n        mirror.getMeta(n));\r\n}\r\nfunction getBaseDimension(node, rootIframe) {\r\n    const frameElement = node.ownerDocument?.defaultView?.frameElement;\r\n    if (!frameElement || frameElement === rootIframe) {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n            relativeScale: 1,\r\n            absoluteScale: 1,\r\n        };\r\n    }\r\n    const frameDimension = frameElement.getBoundingClientRect();\r\n    const frameBaseDimension = getBaseDimension(frameElement, rootIframe);\r\n    const relativeScale = frameDimension.height / frameElement.clientHeight;\r\n    return {\r\n        x: frameDimension.x * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.x,\r\n        y: frameDimension.y * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.y,\r\n        relativeScale,\r\n        absoluteScale: frameBaseDimension.absoluteScale * relativeScale,\r\n    };\r\n}\r\nfunction hasShadowRoot(n) {\r\n    return Boolean(n?.shadowRoot);\r\n}\r\nfunction getNestedRule(rules, position) {\r\n    const rule = rules[position[0]];\r\n    if (position.length === 1) {\r\n        return rule;\r\n    }\r\n    else {\r\n        return getNestedRule(rule.cssRules[position[1]].cssRules, position.slice(2));\r\n    }\r\n}\r\nfunction getPositionsAndIndex(nestedIndex) {\r\n    const positions = [...nestedIndex];\r\n    const index = positions.pop();\r\n    return { positions, index };\r\n}\r\nfunction uniqueTextMutations(mutations) {\r\n    const idSet = new Set();\r\n    const uniqueMutations = [];\r\n    for (let i = mutations.length; i--;) {\r\n        const mutation = mutations[i];\r\n        if (!idSet.has(mutation.id)) {\r\n            uniqueMutations.push(mutation);\r\n            idSet.add(mutation.id);\r\n        }\r\n    }\r\n    return uniqueMutations;\r\n}\r\nclass StyleSheetMirror {\r\n    constructor() {\r\n        this.id = 1;\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n    }\r\n    getId(stylesheet) {\r\n        return this.styleIDMap.get(stylesheet) ?? -1;\r\n    }\r\n    has(stylesheet) {\r\n        return this.styleIDMap.has(stylesheet);\r\n    }\r\n    add(stylesheet, id) {\r\n        if (this.has(stylesheet))\r\n            return this.getId(stylesheet);\r\n        let newId;\r\n        if (id === undefined) {\r\n            newId = this.id++;\r\n        }\r\n        else\r\n            newId = id;\r\n        this.styleIDMap.set(stylesheet, newId);\r\n        this.idStyleMap.set(newId, stylesheet);\r\n        return newId;\r\n    }\r\n    getStyle(id) {\r\n        return this.idStyleMap.get(id) || null;\r\n    }\r\n    reset() {\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n        this.id = 1;\r\n    }\r\n    generateId() {\r\n        return this.id++;\r\n    }\r\n}\r\nfunction getShadowHost(n) {\r\n    let shadowHost = null;\r\n    if (n.getRootNode?.()?.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\r\n        n.getRootNode().host)\r\n        shadowHost = n.getRootNode().host;\r\n    return shadowHost;\r\n}\r\nfunction getRootShadowHost(n) {\r\n    let rootShadowHost = n;\r\n    let shadowHost;\r\n    while ((shadowHost = getShadowHost(rootShadowHost)))\r\n        rootShadowHost = shadowHost;\r\n    return rootShadowHost;\r\n}\r\nfunction shadowHostInDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    const shadowHost = getRootShadowHost(n);\r\n    return doc.contains(shadowHost);\r\n}\r\nfunction inDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    return doc.contains(n) || shadowHostInDom(n);\r\n}\r\nlet cachedRequestAnimationFrameImplementation;\r\nfunction getRequestAnimationFrameImplementation() {\r\n    if (cachedRequestAnimationFrameImplementation) {\r\n        return cachedRequestAnimationFrameImplementation;\r\n    }\r\n    const document = window.document;\r\n    let requestAnimationFrameImplementation = window.requestAnimationFrame;\r\n    if (document && typeof document.createElement === 'function') {\r\n        try {\r\n            const sandbox = document.createElement('iframe');\r\n            sandbox.hidden = true;\r\n            document.head.appendChild(sandbox);\r\n            const contentWindow = sandbox.contentWindow;\r\n            if (contentWindow && contentWindow.requestAnimationFrame) {\r\n                requestAnimationFrameImplementation =\r\n                    contentWindow.requestAnimationFrame;\r\n            }\r\n            document.head.removeChild(sandbox);\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    return (cachedRequestAnimationFrameImplementation =\r\n        requestAnimationFrameImplementation.bind(window));\r\n}\r\nfunction onRequestAnimationFrame(...rest) {\r\n    return getRequestAnimationFrameImplementation()(...rest);\r\n}\n\nexport { StyleSheetMirror, _mirror, getBaseDimension, getNestedRule, getPositionsAndIndex, getRootShadowHost, getShadowHost, getWindowHeight, getWindowScroll, getWindowWidth, hasShadowRoot, hookSetter, inDom, isAncestorRemoved, isBlocked, isIgnored, isSerialized, isSerializedIframe, isSerializedStylesheet, iterateResolveTree, legacy_isTouchEvent, nowTimestamp, on, onRequestAnimationFrame, patch, polyfill, queueToResolveTrees, shadowHostInDom, throttle, uniqueTextMutations };\n","// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nexport function _nullishCoalesce(lhs: unknown, rhsFn: () => unknown): unknown {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n","var EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\nvar CanvasContext = /* @__PURE__ */ ((CanvasContext2) => {\n  CanvasContext2[CanvasContext2[\"2D\"] = 0] = \"2D\";\n  CanvasContext2[CanvasContext2[\"WebGL\"] = 1] = \"WebGL\";\n  CanvasContext2[CanvasContext2[\"WebGL2\"] = 2] = \"WebGL2\";\n  return CanvasContext2;\n})(CanvasContext || {});\nvar ReplayerEvents = /* @__PURE__ */ ((ReplayerEvents2) => {\n  ReplayerEvents2[\"Start\"] = \"start\";\n  ReplayerEvents2[\"Pause\"] = \"pause\";\n  ReplayerEvents2[\"Resume\"] = \"resume\";\n  ReplayerEvents2[\"Resize\"] = \"resize\";\n  ReplayerEvents2[\"Finish\"] = \"finish\";\n  ReplayerEvents2[\"FullsnapshotRebuilded\"] = \"fullsnapshot-rebuilded\";\n  ReplayerEvents2[\"LoadStylesheetStart\"] = \"load-stylesheet-start\";\n  ReplayerEvents2[\"LoadStylesheetEnd\"] = \"load-stylesheet-end\";\n  ReplayerEvents2[\"SkipStart\"] = \"skip-start\";\n  ReplayerEvents2[\"SkipEnd\"] = \"skip-end\";\n  ReplayerEvents2[\"MouseInteraction\"] = \"mouse-interaction\";\n  ReplayerEvents2[\"EventCast\"] = \"event-cast\";\n  ReplayerEvents2[\"CustomEvent\"] = \"custom-event\";\n  ReplayerEvents2[\"Flush\"] = \"flush\";\n  ReplayerEvents2[\"StateChange\"] = \"state-change\";\n  ReplayerEvents2[\"PlayBack\"] = \"play-back\";\n  ReplayerEvents2[\"Destroy\"] = \"destroy\";\n  return ReplayerEvents2;\n})(ReplayerEvents || {});\n\nexport { CanvasContext, EventType, IncrementalSource, MouseInteractions, PointerTypes, ReplayerEvents };\n","import { isShadowRoot, isNativeShadowDom, getInputType, getInputValue, shouldMaskInput, needMaskingText, maskInputValue, ignoreAttribute, transformAttribute, toLowerCase, IGNORED_NODE, serializeNodeWithId } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { isIgnored, isBlocked, isSerialized, isAncestorRemoved, hasShadowRoot, inDom, getShadowHost, isSerializedIframe, isSerializedStylesheet } from '../utils.js';\n\nfunction isNodeInLinkedList(n) {\r\n    return '__ln' in n;\r\n}\r\nclass DoubleLinkedList {\r\n    constructor() {\r\n        this.length = 0;\r\n        this.head = null;\r\n        this.tail = null;\r\n    }\r\n    get(position) {\r\n        if (position >= this.length) {\r\n            throw new Error('Position outside of list range');\r\n        }\r\n        let current = this.head;\r\n        for (let index = 0; index < position; index++) {\r\n            current = current?.next || null;\r\n        }\r\n        return current;\r\n    }\r\n    addNode(n) {\r\n        const node = {\r\n            value: n,\r\n            previous: null,\r\n            next: null,\r\n        };\r\n        n.__ln = node;\r\n        if (n.previousSibling && isNodeInLinkedList(n.previousSibling)) {\r\n            const current = n.previousSibling.__ln.next;\r\n            node.next = current;\r\n            node.previous = n.previousSibling.__ln;\r\n            n.previousSibling.__ln.next = node;\r\n            if (current) {\r\n                current.previous = node;\r\n            }\r\n        }\r\n        else if (n.nextSibling &&\r\n            isNodeInLinkedList(n.nextSibling) &&\r\n            n.nextSibling.__ln.previous) {\r\n            const current = n.nextSibling.__ln.previous;\r\n            node.previous = current;\r\n            node.next = n.nextSibling.__ln;\r\n            n.nextSibling.__ln.previous = node;\r\n            if (current) {\r\n                current.next = node;\r\n            }\r\n        }\r\n        else {\r\n            if (this.head) {\r\n                this.head.previous = node;\r\n            }\r\n            node.next = this.head;\r\n            this.head = node;\r\n        }\r\n        if (node.next === null) {\r\n            this.tail = node;\r\n        }\r\n        this.length++;\r\n    }\r\n    removeNode(n) {\r\n        const current = n.__ln;\r\n        if (!this.head) {\r\n            return;\r\n        }\r\n        if (!current.previous) {\r\n            this.head = current.next;\r\n            if (this.head) {\r\n                this.head.previous = null;\r\n            }\r\n            else {\r\n                this.tail = null;\r\n            }\r\n        }\r\n        else {\r\n            current.previous.next = current.next;\r\n            if (current.next) {\r\n                current.next.previous = current.previous;\r\n            }\r\n            else {\r\n                this.tail = current.previous;\r\n            }\r\n        }\r\n        if (n.__ln) {\r\n            delete n.__ln;\r\n        }\r\n        this.length--;\r\n    }\r\n}\r\nconst moveKey = (id, parentId) => `${id}@${parentId}`;\r\nclass MutationBuffer {\r\n    constructor() {\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.texts = [];\r\n        this.attributes = [];\r\n        this.removes = [];\r\n        this.mapRemoves = [];\r\n        this.movedMap = {};\r\n        this.addedSet = new Set();\r\n        this.movedSet = new Set();\r\n        this.droppedSet = new Set();\r\n        this.processMutations = (mutations) => {\r\n            mutations.forEach(this.processMutation);\r\n            this.emit();\r\n        };\r\n        this.emit = () => {\r\n            if (this.frozen || this.locked) {\r\n                return;\r\n            }\r\n            const adds = [];\r\n            const addedIds = new Set();\r\n            const addList = new DoubleLinkedList();\r\n            const getNextId = (n) => {\r\n                let ns = n;\r\n                let nextId = IGNORED_NODE;\r\n                while (nextId === IGNORED_NODE) {\r\n                    ns = ns && ns.nextSibling;\r\n                    nextId = ns && this.mirror.getId(ns);\r\n                }\r\n                return nextId;\r\n            };\r\n            const pushAdd = (n) => {\r\n                if (!n.parentNode || !inDom(n)) {\r\n                    return;\r\n                }\r\n                const parentId = isShadowRoot(n.parentNode)\r\n                    ? this.mirror.getId(getShadowHost(n))\r\n                    : this.mirror.getId(n.parentNode);\r\n                const nextId = getNextId(n);\r\n                if (parentId === -1 || nextId === -1) {\r\n                    return addList.addNode(n);\r\n                }\r\n                const sn = serializeNodeWithId(n, {\r\n                    doc: this.doc,\r\n                    mirror: this.mirror,\r\n                    blockClass: this.blockClass,\r\n                    blockSelector: this.blockSelector,\r\n                    maskAllText: this.maskAllText,\r\n                    unblockSelector: this.unblockSelector,\r\n                    maskTextClass: this.maskTextClass,\r\n                    unmaskTextClass: this.unmaskTextClass,\r\n                    maskTextSelector: this.maskTextSelector,\r\n                    unmaskTextSelector: this.unmaskTextSelector,\r\n                    skipChild: true,\r\n                    newlyAddedElement: true,\r\n                    inlineStylesheet: this.inlineStylesheet,\r\n                    maskInputOptions: this.maskInputOptions,\r\n                    maskAttributeFn: this.maskAttributeFn,\r\n                    maskTextFn: this.maskTextFn,\r\n                    maskInputFn: this.maskInputFn,\r\n                    slimDOMOptions: this.slimDOMOptions,\r\n                    dataURLOptions: this.dataURLOptions,\r\n                    recordCanvas: this.recordCanvas,\r\n                    inlineImages: this.inlineImages,\r\n                    onSerialize: (currentN) => {\r\n                        if (isSerializedIframe(currentN, this.mirror)) {\r\n                            this.iframeManager.addIframe(currentN);\r\n                        }\r\n                        if (isSerializedStylesheet(currentN, this.mirror)) {\r\n                            this.stylesheetManager.trackLinkElement(currentN);\r\n                        }\r\n                        if (hasShadowRoot(n)) {\r\n                            this.shadowDomManager.addShadowRoot(n.shadowRoot, this.doc);\r\n                        }\r\n                    },\r\n                    onIframeLoad: (iframe, childSn) => {\r\n                        this.iframeManager.attachIframe(iframe, childSn);\r\n                        this.shadowDomManager.observeAttachShadow(iframe);\r\n                    },\r\n                    onStylesheetLoad: (link, childSn) => {\r\n                        this.stylesheetManager.attachLinkElement(link, childSn);\r\n                    },\r\n                });\r\n                if (sn) {\r\n                    adds.push({\r\n                        parentId,\r\n                        nextId,\r\n                        node: sn,\r\n                    });\r\n                    addedIds.add(sn.id);\r\n                }\r\n            };\r\n            while (this.mapRemoves.length) {\r\n                this.mirror.removeNodeFromMap(this.mapRemoves.shift());\r\n            }\r\n            for (const n of this.movedSet) {\r\n                if (isParentRemoved(this.removes, n, this.mirror) &&\r\n                    !this.movedSet.has(n.parentNode)) {\r\n                    continue;\r\n                }\r\n                pushAdd(n);\r\n            }\r\n            for (const n of this.addedSet) {\r\n                if (!isAncestorInSet(this.droppedSet, n) &&\r\n                    !isParentRemoved(this.removes, n, this.mirror)) {\r\n                    pushAdd(n);\r\n                }\r\n                else if (isAncestorInSet(this.movedSet, n)) {\r\n                    pushAdd(n);\r\n                }\r\n                else {\r\n                    this.droppedSet.add(n);\r\n                }\r\n            }\r\n            let candidate = null;\r\n            while (addList.length) {\r\n                let node = null;\r\n                if (candidate) {\r\n                    const parentId = this.mirror.getId(candidate.value.parentNode);\r\n                    const nextId = getNextId(candidate.value);\r\n                    if (parentId !== -1 && nextId !== -1) {\r\n                        node = candidate;\r\n                    }\r\n                }\r\n                if (!node) {\r\n                    let tailNode = addList.tail;\r\n                    while (tailNode) {\r\n                        const _node = tailNode;\r\n                        tailNode = tailNode.previous;\r\n                        if (_node) {\r\n                            const parentId = this.mirror.getId(_node.value.parentNode);\r\n                            const nextId = getNextId(_node.value);\r\n                            if (nextId === -1)\r\n                                continue;\r\n                            else if (parentId !== -1) {\r\n                                node = _node;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                const unhandledNode = _node.value;\r\n                                if (unhandledNode.parentNode &&\r\n                                    unhandledNode.parentNode.nodeType ===\r\n                                        Node.DOCUMENT_FRAGMENT_NODE) {\r\n                                    const shadowHost = unhandledNode.parentNode\r\n                                        .host;\r\n                                    const parentId = this.mirror.getId(shadowHost);\r\n                                    if (parentId !== -1) {\r\n                                        node = _node;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (!node) {\r\n                    while (addList.head) {\r\n                        addList.removeNode(addList.head.value);\r\n                    }\r\n                    break;\r\n                }\r\n                candidate = node.previous;\r\n                addList.removeNode(node.value);\r\n                pushAdd(node.value);\r\n            }\r\n            const payload = {\r\n                texts: this.texts\r\n                    .map((text) => ({\r\n                    id: this.mirror.getId(text.node),\r\n                    value: text.value,\r\n                }))\r\n                    .filter((text) => !addedIds.has(text.id))\r\n                    .filter((text) => this.mirror.has(text.id)),\r\n                attributes: this.attributes\r\n                    .map((attribute) => {\r\n                    const { attributes } = attribute;\r\n                    if (typeof attributes.style === 'string') {\r\n                        const diffAsStr = JSON.stringify(attribute.styleDiff);\r\n                        const unchangedAsStr = JSON.stringify(attribute._unchangedStyles);\r\n                        if (diffAsStr.length < attributes.style.length) {\r\n                            if ((diffAsStr + unchangedAsStr).split('var(').length ===\r\n                                attributes.style.split('var(').length) {\r\n                                attributes.style = attribute.styleDiff;\r\n                            }\r\n                        }\r\n                    }\r\n                    return {\r\n                        id: this.mirror.getId(attribute.node),\r\n                        attributes: attributes,\r\n                    };\r\n                })\r\n                    .filter((attribute) => !addedIds.has(attribute.id))\r\n                    .filter((attribute) => this.mirror.has(attribute.id)),\r\n                removes: this.removes,\r\n                adds,\r\n            };\r\n            if (!payload.texts.length &&\r\n                !payload.attributes.length &&\r\n                !payload.removes.length &&\r\n                !payload.adds.length) {\r\n                return;\r\n            }\r\n            this.texts = [];\r\n            this.attributes = [];\r\n            this.removes = [];\r\n            this.addedSet = new Set();\r\n            this.movedSet = new Set();\r\n            this.droppedSet = new Set();\r\n            this.movedMap = {};\r\n            this.mutationCb(payload);\r\n        };\r\n        this.processMutation = (m) => {\r\n            if (isIgnored(m.target, this.mirror)) {\r\n                return;\r\n            }\r\n            let unattachedDoc;\r\n            try {\r\n                unattachedDoc = document.implementation.createHTMLDocument();\r\n            }\r\n            catch (e) {\r\n                unattachedDoc = this.doc;\r\n            }\r\n            switch (m.type) {\r\n                case 'characterData': {\r\n                    const value = m.target.textContent;\r\n                    if (!isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) &&\r\n                        value !== m.oldValue) {\r\n                        this.texts.push({\r\n                            value: needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, this.maskAllText) && value\r\n                                ? this.maskTextFn\r\n                                    ? this.maskTextFn(value)\r\n                                    : value.replace(/[\\S]/g, '*')\r\n                                : value,\r\n                            node: m.target,\r\n                        });\r\n                    }\r\n                    break;\r\n                }\r\n                case 'attributes': {\r\n                    const target = m.target;\r\n                    let attributeName = m.attributeName;\r\n                    let value = m.target.getAttribute(attributeName);\r\n                    if (attributeName === 'value') {\r\n                        const type = getInputType(target);\r\n                        const tagName = target.tagName;\r\n                        value = getInputValue(target, tagName, type);\r\n                        const isInputMasked = shouldMaskInput({\r\n                            maskInputOptions: this.maskInputOptions,\r\n                            tagName,\r\n                            type,\r\n                        });\r\n                        const forceMask = needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, isInputMasked);\r\n                        value = maskInputValue({\r\n                            isMasked: forceMask,\r\n                            element: target,\r\n                            value,\r\n                            maskInputFn: this.maskInputFn,\r\n                        });\r\n                    }\r\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\r\n                        value === m.oldValue) {\r\n                        return;\r\n                    }\r\n                    let item = this.attributes.find((a) => a.node === m.target);\r\n                    if (target.tagName === 'IFRAME' &&\r\n                        attributeName === 'src' &&\r\n                        !this.keepIframeSrcFn(value)) {\r\n                        if (!target.contentDocument) {\r\n                            attributeName = 'rr_src';\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (!item) {\r\n                        item = {\r\n                            node: m.target,\r\n                            attributes: {},\r\n                            styleDiff: {},\r\n                            _unchangedStyles: {},\r\n                        };\r\n                        this.attributes.push(item);\r\n                    }\r\n                    if (attributeName === 'type' &&\r\n                        target.tagName === 'INPUT' &&\r\n                        (m.oldValue || '').toLowerCase() === 'password') {\r\n                        target.setAttribute('data-rr-is-password', 'true');\r\n                    }\r\n                    if (!ignoreAttribute(target.tagName, attributeName)) {\r\n                        item.attributes[attributeName] = transformAttribute(this.doc, toLowerCase(target.tagName), toLowerCase(attributeName), value, target, this.maskAttributeFn);\r\n                        if (attributeName === 'style') {\r\n                            const old = unattachedDoc.createElement('span');\r\n                            if (m.oldValue) {\r\n                                old.setAttribute('style', m.oldValue);\r\n                            }\r\n                            for (const pname of Array.from(target.style)) {\r\n                                const newValue = target.style.getPropertyValue(pname);\r\n                                const newPriority = target.style.getPropertyPriority(pname);\r\n                                if (newValue !== old.style.getPropertyValue(pname) ||\r\n                                    newPriority !== old.style.getPropertyPriority(pname)) {\r\n                                    if (newPriority === '') {\r\n                                        item.styleDiff[pname] = newValue;\r\n                                    }\r\n                                    else {\r\n                                        item.styleDiff[pname] = [newValue, newPriority];\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    item._unchangedStyles[pname] = [newValue, newPriority];\r\n                                }\r\n                            }\r\n                            for (const pname of Array.from(old.style)) {\r\n                                if (target.style.getPropertyValue(pname) === '') {\r\n                                    item.styleDiff[pname] = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case 'childList': {\r\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, true)) {\r\n                        return;\r\n                    }\r\n                    m.addedNodes.forEach((n) => this.genAdds(n, m.target));\r\n                    m.removedNodes.forEach((n) => {\r\n                        const nodeId = this.mirror.getId(n);\r\n                        const parentId = isShadowRoot(m.target)\r\n                            ? this.mirror.getId(m.target.host)\r\n                            : this.mirror.getId(m.target);\r\n                        if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\r\n                            isIgnored(n, this.mirror) ||\r\n                            !isSerialized(n, this.mirror)) {\r\n                            return;\r\n                        }\r\n                        if (this.addedSet.has(n)) {\r\n                            deepDelete(this.addedSet, n);\r\n                            this.droppedSet.add(n);\r\n                        }\r\n                        else if (this.addedSet.has(m.target) && nodeId === -1) ;\r\n                        else if (isAncestorRemoved(m.target, this.mirror)) ;\r\n                        else if (this.movedSet.has(n) &&\r\n                            this.movedMap[moveKey(nodeId, parentId)]) {\r\n                            deepDelete(this.movedSet, n);\r\n                        }\r\n                        else {\r\n                            this.removes.push({\r\n                                parentId,\r\n                                id: nodeId,\r\n                                isShadow: isShadowRoot(m.target) && isNativeShadowDom(m.target)\r\n                                    ? true\r\n                                    : undefined,\r\n                            });\r\n                        }\r\n                        this.mapRemoves.push(n);\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n        this.genAdds = (n, target) => {\r\n            if (this.processedNodeManager.inOtherBuffer(n, this))\r\n                return;\r\n            if (this.addedSet.has(n) || this.movedSet.has(n))\r\n                return;\r\n            if (this.mirror.hasNode(n)) {\r\n                if (isIgnored(n, this.mirror)) {\r\n                    return;\r\n                }\r\n                this.movedSet.add(n);\r\n                let targetId = null;\r\n                if (target && this.mirror.hasNode(target)) {\r\n                    targetId = this.mirror.getId(target);\r\n                }\r\n                if (targetId && targetId !== -1) {\r\n                    this.movedMap[moveKey(this.mirror.getId(n), targetId)] = true;\r\n                }\r\n            }\r\n            else {\r\n                this.addedSet.add(n);\r\n                this.droppedSet.delete(n);\r\n            }\r\n            if (!isBlocked(n, this.blockClass, this.blockSelector, this.unblockSelector, false)) {\r\n                n.childNodes.forEach((childN) => this.genAdds(childN));\r\n                if (hasShadowRoot(n)) {\r\n                    n.shadowRoot.childNodes.forEach((childN) => {\r\n                        this.processedNodeManager.add(childN, this);\r\n                        this.genAdds(childN, n);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n    init(options) {\r\n        [\r\n            'mutationCb',\r\n            'blockClass',\r\n            'blockSelector',\r\n            'unblockSelector',\r\n            'maskAllText',\r\n            'maskTextClass',\r\n            'unmaskTextClass',\r\n            'maskTextSelector',\r\n            'unmaskTextSelector',\r\n            'inlineStylesheet',\r\n            'maskInputOptions',\r\n            'maskAttributeFn',\r\n            'maskTextFn',\r\n            'maskInputFn',\r\n            'keepIframeSrcFn',\r\n            'recordCanvas',\r\n            'inlineImages',\r\n            'slimDOMOptions',\r\n            'dataURLOptions',\r\n            'doc',\r\n            'mirror',\r\n            'iframeManager',\r\n            'stylesheetManager',\r\n            'shadowDomManager',\r\n            'canvasManager',\r\n            'processedNodeManager',\r\n        ].forEach((key) => {\r\n            this[key] = options[key];\r\n        });\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n        this.canvasManager.freeze();\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n        this.canvasManager.unfreeze();\r\n        this.emit();\r\n    }\r\n    isFrozen() {\r\n        return this.frozen;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n        this.canvasManager.lock();\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n        this.canvasManager.unlock();\r\n        this.emit();\r\n    }\r\n    reset() {\r\n        this.shadowDomManager.reset();\r\n        this.canvasManager.reset();\r\n    }\r\n}\r\nfunction deepDelete(addsSet, n) {\r\n    addsSet.delete(n);\r\n    n.childNodes.forEach((childN) => deepDelete(addsSet, childN));\r\n}\r\nfunction isParentRemoved(removes, n, mirror) {\r\n    if (removes.length === 0)\r\n        return false;\r\n    return _isParentRemoved(removes, n, mirror);\r\n}\r\nfunction _isParentRemoved(removes, n, mirror) {\r\n    const { parentNode } = n;\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    const parentId = mirror.getId(parentNode);\r\n    if (removes.some((r) => r.id === parentId)) {\r\n        return true;\r\n    }\r\n    return _isParentRemoved(removes, parentNode, mirror);\r\n}\r\nfunction isAncestorInSet(set, n) {\r\n    if (set.size === 0)\r\n        return false;\r\n    return _isAncestorInSet(set, n);\r\n}\r\nfunction _isAncestorInSet(set, n) {\r\n    const { parentNode } = n;\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    if (set.has(parentNode)) {\r\n        return true;\r\n    }\r\n    return _isAncestorInSet(set, parentNode);\r\n}\n\nexport { MutationBuffer as default };\n","let errorHandler;\r\nfunction registerErrorHandler(handler) {\r\n    errorHandler = handler;\r\n}\r\nfunction unregisterErrorHandler() {\r\n    errorHandler = undefined;\r\n}\r\nconst callbackWrapper = (cb) => {\r\n    if (!errorHandler) {\r\n        return cb;\r\n    }\r\n    const rrwebWrapped = ((...rest) => {\r\n        try {\r\n            return cb(...rest);\r\n        }\r\n        catch (error) {\r\n            if (errorHandler && errorHandler(error) === true) {\r\n                return () => {\r\n                };\r\n            }\r\n            throw error;\r\n        }\r\n    });\r\n    return rrwebWrapped;\r\n};\n\nexport { callbackWrapper, registerErrorHandler, unregisterErrorHandler };\n","import { toLowerCase, toUpperCase, getInputType, getInputValue, shouldMaskInput, needMaskingText, maskInputValue } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { on, throttle, isBlocked, getWindowScroll, hookSetter, patch, legacy_isTouchEvent, nowTimestamp, getWindowHeight, getWindowWidth } from '../utils.js';\nimport { MouseInteractions, IncrementalSource, PointerTypes } from '../../../types/dist/rrweb-types.js';\nimport MutationBuffer from './mutation.js';\nimport { callbackWrapper } from './error-handler.js';\n\nconst mutationBuffers = [];\r\nfunction getEventTarget(event) {\r\n    try {\r\n        if ('composedPath' in event) {\r\n            const path = event.composedPath();\r\n            if (path.length) {\r\n                return path[0];\r\n            }\r\n        }\r\n        else if ('path' in event && event.path.length) {\r\n            return event.path[0];\r\n        }\r\n    }\r\n    catch {\r\n    }\r\n    return event && event.target;\r\n}\r\nfunction initMutationObserver(options, rootEl) {\r\n    const mutationBuffer = new MutationBuffer();\r\n    mutationBuffers.push(mutationBuffer);\r\n    mutationBuffer.init(options);\r\n    let mutationObserverCtor = window.MutationObserver ||\r\n        window.__rrMutationObserver;\r\n    const angularZoneSymbol = window?.Zone?.__symbol__?.('MutationObserver');\r\n    if (angularZoneSymbol &&\r\n        window[angularZoneSymbol]) {\r\n        mutationObserverCtor = window[angularZoneSymbol];\r\n    }\r\n    const observer = new mutationObserverCtor(callbackWrapper((mutations) => {\r\n        if (options.onMutation && options.onMutation(mutations) === false) {\r\n            return;\r\n        }\r\n        mutationBuffer.processMutations.bind(mutationBuffer)(mutations);\r\n    }));\r\n    observer.observe(rootEl, {\r\n        attributes: true,\r\n        attributeOldValue: true,\r\n        characterData: true,\r\n        characterDataOldValue: true,\r\n        childList: true,\r\n        subtree: true,\r\n    });\r\n    return observer;\r\n}\r\nfunction initMoveObserver({ mousemoveCb, sampling, doc, mirror, }) {\r\n    if (sampling.mousemove === false) {\r\n        return () => {\r\n        };\r\n    }\r\n    const threshold = typeof sampling.mousemove === 'number' ? sampling.mousemove : 50;\r\n    const callbackThreshold = typeof sampling.mousemoveCallback === 'number'\r\n        ? sampling.mousemoveCallback\r\n        : 500;\r\n    let positions = [];\r\n    let timeBaseline;\r\n    const wrappedCb = throttle(callbackWrapper((source) => {\r\n        const totalOffset = Date.now() - timeBaseline;\r\n        mousemoveCb(positions.map((p) => {\r\n            p.timeOffset -= totalOffset;\r\n            return p;\r\n        }), source);\r\n        positions = [];\r\n        timeBaseline = null;\r\n    }), callbackThreshold);\r\n    const updatePosition = callbackWrapper(throttle(callbackWrapper((evt) => {\r\n        const target = getEventTarget(evt);\r\n        const { clientX, clientY } = legacy_isTouchEvent(evt)\r\n            ? evt.changedTouches[0]\r\n            : evt;\r\n        if (!timeBaseline) {\r\n            timeBaseline = nowTimestamp();\r\n        }\r\n        positions.push({\r\n            x: clientX,\r\n            y: clientY,\r\n            id: mirror.getId(target),\r\n            timeOffset: nowTimestamp() - timeBaseline,\r\n        });\r\n        wrappedCb(typeof DragEvent !== 'undefined' && evt instanceof DragEvent\r\n            ? IncrementalSource.Drag\r\n            : evt instanceof MouseEvent\r\n                ? IncrementalSource.MouseMove\r\n                : IncrementalSource.TouchMove);\r\n    }), threshold, {\r\n        trailing: false,\r\n    }));\r\n    const handlers = [\r\n        on('mousemove', updatePosition, doc),\r\n        on('touchmove', updatePosition, doc),\r\n        on('drag', updatePosition, doc),\r\n    ];\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initMouseInteractionObserver({ mouseInteractionCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\r\n    if (sampling.mouseInteraction === false) {\r\n        return () => {\r\n        };\r\n    }\r\n    const disableMap = sampling.mouseInteraction === true ||\r\n        sampling.mouseInteraction === undefined\r\n        ? {}\r\n        : sampling.mouseInteraction;\r\n    const handlers = [];\r\n    let currentPointerType = null;\r\n    const getHandler = (eventKey) => {\r\n        return (event) => {\r\n            const target = getEventTarget(event);\r\n            if (isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n                return;\r\n            }\r\n            let pointerType = null;\r\n            let thisEventKey = eventKey;\r\n            if ('pointerType' in event) {\r\n                switch (event.pointerType) {\r\n                    case 'mouse':\r\n                        pointerType = PointerTypes.Mouse;\r\n                        break;\r\n                    case 'touch':\r\n                        pointerType = PointerTypes.Touch;\r\n                        break;\r\n                    case 'pen':\r\n                        pointerType = PointerTypes.Pen;\r\n                        break;\r\n                }\r\n                if (pointerType === PointerTypes.Touch) {\r\n                    if (MouseInteractions[eventKey] === MouseInteractions.MouseDown) {\r\n                        thisEventKey = 'TouchStart';\r\n                    }\r\n                    else if (MouseInteractions[eventKey] === MouseInteractions.MouseUp) {\r\n                        thisEventKey = 'TouchEnd';\r\n                    }\r\n                }\r\n                else if (pointerType === PointerTypes.Pen) ;\r\n            }\r\n            else if (legacy_isTouchEvent(event)) {\r\n                pointerType = PointerTypes.Touch;\r\n            }\r\n            if (pointerType !== null) {\r\n                currentPointerType = pointerType;\r\n                if ((thisEventKey.startsWith('Touch') &&\r\n                    pointerType === PointerTypes.Touch) ||\r\n                    (thisEventKey.startsWith('Mouse') &&\r\n                        pointerType === PointerTypes.Mouse)) {\r\n                    pointerType = null;\r\n                }\r\n            }\r\n            else if (MouseInteractions[eventKey] === MouseInteractions.Click) {\r\n                pointerType = currentPointerType;\r\n                currentPointerType = null;\r\n            }\r\n            const e = legacy_isTouchEvent(event) ? event.changedTouches[0] : event;\r\n            if (!e) {\r\n                return;\r\n            }\r\n            const id = mirror.getId(target);\r\n            const { clientX, clientY } = e;\r\n            callbackWrapper(mouseInteractionCb)({\r\n                type: MouseInteractions[thisEventKey],\r\n                id,\r\n                x: clientX,\r\n                y: clientY,\r\n                ...(pointerType !== null && { pointerType }),\r\n            });\r\n        };\r\n    };\r\n    Object.keys(MouseInteractions)\r\n        .filter((key) => Number.isNaN(Number(key)) &&\r\n        !key.endsWith('_Departed') &&\r\n        disableMap[key] !== false)\r\n        .forEach((eventKey) => {\r\n        let eventName = toLowerCase(eventKey);\r\n        const handler = getHandler(eventKey);\r\n        if (window.PointerEvent) {\r\n            switch (MouseInteractions[eventKey]) {\r\n                case MouseInteractions.MouseDown:\r\n                case MouseInteractions.MouseUp:\r\n                    eventName = eventName.replace('mouse', 'pointer');\r\n                    break;\r\n                case MouseInteractions.TouchStart:\r\n                case MouseInteractions.TouchEnd:\r\n                    return;\r\n            }\r\n        }\r\n        handlers.push(on(eventName, handler, doc));\r\n    });\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initScrollObserver({ scrollCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\r\n    const updatePosition = callbackWrapper(throttle(callbackWrapper((evt) => {\r\n        const target = getEventTarget(evt);\r\n        if (!target ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const id = mirror.getId(target);\r\n        if (target === doc && doc.defaultView) {\r\n            const scrollLeftTop = getWindowScroll(doc.defaultView);\r\n            scrollCb({\r\n                id,\r\n                x: scrollLeftTop.left,\r\n                y: scrollLeftTop.top,\r\n            });\r\n        }\r\n        else {\r\n            scrollCb({\r\n                id,\r\n                x: target.scrollLeft,\r\n                y: target.scrollTop,\r\n            });\r\n        }\r\n    }), sampling.scroll || 100));\r\n    return on('scroll', updatePosition, doc);\r\n}\r\nfunction initViewportResizeObserver({ viewportResizeCb }, { win }) {\r\n    let lastH = -1;\r\n    let lastW = -1;\r\n    const updateDimension = callbackWrapper(throttle(callbackWrapper(() => {\r\n        const height = getWindowHeight();\r\n        const width = getWindowWidth();\r\n        if (lastH !== height || lastW !== width) {\r\n            viewportResizeCb({\r\n                width: Number(width),\r\n                height: Number(height),\r\n            });\r\n            lastH = height;\r\n            lastW = width;\r\n        }\r\n    }), 200));\r\n    return on('resize', updateDimension, win);\r\n}\r\nconst INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\r\nconst lastInputValueMap = new WeakMap();\r\nfunction initInputObserver({ inputCb, doc, mirror, blockClass, blockSelector, unblockSelector, ignoreClass, ignoreSelector, maskInputOptions, maskInputFn, sampling, userTriggeredOnInput, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, }) {\r\n    function eventHandler(event) {\r\n        let target = getEventTarget(event);\r\n        const userTriggered = event.isTrusted;\r\n        const tagName = target && toUpperCase(target.tagName);\r\n        if (tagName === 'OPTION')\r\n            target = target.parentElement;\r\n        if (!target ||\r\n            !tagName ||\r\n            INPUT_TAGS.indexOf(tagName) < 0 ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const el = target;\r\n        if (el.classList.contains(ignoreClass) ||\r\n            (ignoreSelector && el.matches(ignoreSelector))) {\r\n            return;\r\n        }\r\n        const type = getInputType(target);\r\n        let text = getInputValue(el, tagName, type);\r\n        let isChecked = false;\r\n        const isInputMasked = shouldMaskInput({\r\n            maskInputOptions,\r\n            tagName,\r\n            type,\r\n        });\r\n        const forceMask = needMaskingText(target, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked);\r\n        if (type === 'radio' || type === 'checkbox') {\r\n            isChecked = target.checked;\r\n        }\r\n        text = maskInputValue({\r\n            isMasked: forceMask,\r\n            element: target,\r\n            value: text,\r\n            maskInputFn,\r\n        });\r\n        cbWithDedup(target, userTriggeredOnInput\r\n            ? { text, isChecked, userTriggered }\r\n            : { text, isChecked });\r\n        const name = target.name;\r\n        if (type === 'radio' && name && isChecked) {\r\n            doc\r\n                .querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`)\r\n                .forEach((el) => {\r\n                if (el !== target) {\r\n                    const text = maskInputValue({\r\n                        isMasked: forceMask,\r\n                        element: el,\r\n                        value: getInputValue(el, tagName, type),\r\n                        maskInputFn,\r\n                    });\r\n                    cbWithDedup(el, userTriggeredOnInput\r\n                        ? { text, isChecked: !isChecked, userTriggered: false }\r\n                        : { text, isChecked: !isChecked });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    function cbWithDedup(target, v) {\r\n        const lastInputValue = lastInputValueMap.get(target);\r\n        if (!lastInputValue ||\r\n            lastInputValue.text !== v.text ||\r\n            lastInputValue.isChecked !== v.isChecked) {\r\n            lastInputValueMap.set(target, v);\r\n            const id = mirror.getId(target);\r\n            callbackWrapper(inputCb)({\r\n                ...v,\r\n                id,\r\n            });\r\n        }\r\n    }\r\n    const events = sampling.input === 'last' ? ['change'] : ['input', 'change'];\r\n    const handlers = events.map((eventName) => on(eventName, callbackWrapper(eventHandler), doc));\r\n    const currentWindow = doc.defaultView;\r\n    if (!currentWindow) {\r\n        return () => {\r\n            handlers.forEach((h) => h());\r\n        };\r\n    }\r\n    const propertyDescriptor = currentWindow.Object.getOwnPropertyDescriptor(currentWindow.HTMLInputElement.prototype, 'value');\r\n    const hookProperties = [\r\n        [currentWindow.HTMLInputElement.prototype, 'value'],\r\n        [currentWindow.HTMLInputElement.prototype, 'checked'],\r\n        [currentWindow.HTMLSelectElement.prototype, 'value'],\r\n        [currentWindow.HTMLTextAreaElement.prototype, 'value'],\r\n        [currentWindow.HTMLSelectElement.prototype, 'selectedIndex'],\r\n        [currentWindow.HTMLOptionElement.prototype, 'selected'],\r\n    ];\r\n    if (propertyDescriptor && propertyDescriptor.set) {\r\n        handlers.push(...hookProperties.map((p) => hookSetter(p[0], p[1], {\r\n            set() {\r\n                callbackWrapper(eventHandler)({\r\n                    target: this,\r\n                    isTrusted: false,\r\n                });\r\n            },\r\n        }, false, currentWindow)));\r\n    }\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction getNestedCSSRulePositions(rule) {\r\n    const positions = [];\r\n    function recurse(childRule, pos) {\r\n        if ((hasNestedCSSRule('CSSGroupingRule') &&\r\n            childRule.parentRule instanceof CSSGroupingRule) ||\r\n            (hasNestedCSSRule('CSSMediaRule') &&\r\n                childRule.parentRule instanceof CSSMediaRule) ||\r\n            (hasNestedCSSRule('CSSSupportsRule') &&\r\n                childRule.parentRule instanceof CSSSupportsRule) ||\r\n            (hasNestedCSSRule('CSSConditionRule') &&\r\n                childRule.parentRule instanceof CSSConditionRule)) {\r\n            const rules = Array.from(childRule.parentRule.cssRules);\r\n            const index = rules.indexOf(childRule);\r\n            pos.unshift(index);\r\n        }\r\n        else if (childRule.parentStyleSheet) {\r\n            const rules = Array.from(childRule.parentStyleSheet.cssRules);\r\n            const index = rules.indexOf(childRule);\r\n            pos.unshift(index);\r\n        }\r\n        return pos;\r\n    }\r\n    return recurse(rule, positions);\r\n}\r\nfunction getIdAndStyleId(sheet, mirror, styleMirror) {\r\n    let id, styleId;\r\n    if (!sheet)\r\n        return {};\r\n    if (sheet.ownerNode)\r\n        id = mirror.getId(sheet.ownerNode);\r\n    else\r\n        styleId = styleMirror.getId(sheet);\r\n    return {\r\n        styleId,\r\n        id,\r\n    };\r\n}\r\nfunction initStyleSheetObserver({ styleSheetRuleCb, mirror, stylesheetManager }, { win }) {\r\n    if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\r\n        return () => {\r\n        };\r\n    }\r\n    const insertRule = win.CSSStyleSheet.prototype.insertRule;\r\n    win.CSSStyleSheet.prototype.insertRule = new Proxy(insertRule, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [rule, index] = argumentsList;\r\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleSheetRuleCb({\r\n                    id,\r\n                    styleId,\r\n                    adds: [{ rule, index }],\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    const deleteRule = win.CSSStyleSheet.prototype.deleteRule;\r\n    win.CSSStyleSheet.prototype.deleteRule = new Proxy(deleteRule, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [index] = argumentsList;\r\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleSheetRuleCb({\r\n                    id,\r\n                    styleId,\r\n                    removes: [{ index }],\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    let replace;\r\n    if (win.CSSStyleSheet.prototype.replace) {\r\n        replace = win.CSSStyleSheet.prototype.replace;\r\n        win.CSSStyleSheet.prototype.replace = new Proxy(replace, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [text] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        replace: text,\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    }\r\n    let replaceSync;\r\n    if (win.CSSStyleSheet.prototype.replaceSync) {\r\n        replaceSync = win.CSSStyleSheet.prototype.replaceSync;\r\n        win.CSSStyleSheet.prototype.replaceSync = new Proxy(replaceSync, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [text] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        replaceSync: text,\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    }\r\n    const supportedNestedCSSRuleTypes = {};\r\n    if (canMonkeyPatchNestedCSSRule('CSSGroupingRule')) {\r\n        supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\r\n    }\r\n    else {\r\n        if (canMonkeyPatchNestedCSSRule('CSSMediaRule')) {\r\n            supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\r\n        }\r\n        if (canMonkeyPatchNestedCSSRule('CSSConditionRule')) {\r\n            supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\r\n        }\r\n        if (canMonkeyPatchNestedCSSRule('CSSSupportsRule')) {\r\n            supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\r\n        }\r\n    }\r\n    const unmodifiedFunctions = {};\r\n    Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\r\n        unmodifiedFunctions[typeKey] = {\r\n            insertRule: type.prototype.insertRule,\r\n            deleteRule: type.prototype.deleteRule,\r\n        };\r\n        type.prototype.insertRule = new Proxy(unmodifiedFunctions[typeKey].insertRule, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [rule, index] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        adds: [\r\n                            {\r\n                                rule,\r\n                                index: [\r\n                                    ...getNestedCSSRulePositions(thisArg),\r\n                                    index || 0,\r\n                                ],\r\n                            },\r\n                        ],\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n        type.prototype.deleteRule = new Proxy(unmodifiedFunctions[typeKey].deleteRule, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [index] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        removes: [\r\n                            { index: [...getNestedCSSRulePositions(thisArg), index] },\r\n                        ],\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    });\r\n    return callbackWrapper(() => {\r\n        win.CSSStyleSheet.prototype.insertRule = insertRule;\r\n        win.CSSStyleSheet.prototype.deleteRule = deleteRule;\r\n        replace && (win.CSSStyleSheet.prototype.replace = replace);\r\n        replaceSync && (win.CSSStyleSheet.prototype.replaceSync = replaceSync);\r\n        Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\r\n            type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\r\n            type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\r\n        });\r\n    });\r\n}\r\nfunction initAdoptedStyleSheetObserver({ mirror, stylesheetManager, }, host) {\r\n    let hostId = null;\r\n    if (host.nodeName === '#document')\r\n        hostId = mirror.getId(host);\r\n    else\r\n        hostId = mirror.getId(host.host);\r\n    const patchTarget = host.nodeName === '#document'\r\n        ? host.defaultView?.Document\r\n        : host.ownerDocument?.defaultView?.ShadowRoot;\r\n    const originalPropertyDescriptor = patchTarget?.prototype\r\n        ? Object.getOwnPropertyDescriptor(patchTarget?.prototype, 'adoptedStyleSheets')\r\n        : undefined;\r\n    if (hostId === null ||\r\n        hostId === -1 ||\r\n        !patchTarget ||\r\n        !originalPropertyDescriptor)\r\n        return () => {\r\n        };\r\n    Object.defineProperty(host, 'adoptedStyleSheets', {\r\n        configurable: originalPropertyDescriptor.configurable,\r\n        enumerable: originalPropertyDescriptor.enumerable,\r\n        get() {\r\n            return originalPropertyDescriptor.get?.call(this);\r\n        },\r\n        set(sheets) {\r\n            const result = originalPropertyDescriptor.set?.call(this, sheets);\r\n            if (hostId !== null && hostId !== -1) {\r\n                try {\r\n                    stylesheetManager.adoptStyleSheets(sheets, hostId);\r\n                }\r\n                catch (e) {\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n    });\r\n    return callbackWrapper(() => {\r\n        Object.defineProperty(host, 'adoptedStyleSheets', {\r\n            configurable: originalPropertyDescriptor.configurable,\r\n            enumerable: originalPropertyDescriptor.enumerable,\r\n            get: originalPropertyDescriptor.get,\r\n            set: originalPropertyDescriptor.set,\r\n        });\r\n    });\r\n}\r\nfunction initStyleDeclarationObserver({ styleDeclarationCb, mirror, ignoreCSSAttributes, stylesheetManager, }, { win }) {\r\n    const setProperty = win.CSSStyleDeclaration.prototype.setProperty;\r\n    win.CSSStyleDeclaration.prototype.setProperty = new Proxy(setProperty, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [property, value, priority] = argumentsList;\r\n            if (ignoreCSSAttributes.has(property)) {\r\n                return setProperty.apply(thisArg, [property, value, priority]);\r\n            }\r\n            const { id, styleId } = getIdAndStyleId(thisArg.parentRule?.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleDeclarationCb({\r\n                    id,\r\n                    styleId,\r\n                    set: {\r\n                        property,\r\n                        value,\r\n                        priority,\r\n                    },\r\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    const removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\r\n    win.CSSStyleDeclaration.prototype.removeProperty = new Proxy(removeProperty, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [property] = argumentsList;\r\n            if (ignoreCSSAttributes.has(property)) {\r\n                return removeProperty.apply(thisArg, [property]);\r\n            }\r\n            const { id, styleId } = getIdAndStyleId(thisArg.parentRule?.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleDeclarationCb({\r\n                    id,\r\n                    styleId,\r\n                    remove: {\r\n                        property,\r\n                    },\r\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    return callbackWrapper(() => {\r\n        win.CSSStyleDeclaration.prototype.setProperty = setProperty;\r\n        win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\r\n    });\r\n}\r\nfunction initMediaInteractionObserver({ mediaInteractionCb, blockClass, blockSelector, unblockSelector, mirror, sampling, doc, }) {\r\n    const handler = callbackWrapper((type) => throttle(callbackWrapper((event) => {\r\n        const target = getEventTarget(event);\r\n        if (!target ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const { currentTime, volume, muted, playbackRate } = target;\r\n        mediaInteractionCb({\r\n            type,\r\n            id: mirror.getId(target),\r\n            currentTime,\r\n            volume,\r\n            muted,\r\n            playbackRate,\r\n        });\r\n    }), sampling.media || 500));\r\n    const handlers = [\r\n        on('play', handler(0), doc),\r\n        on('pause', handler(1), doc),\r\n        on('seeked', handler(2), doc),\r\n        on('volumechange', handler(3), doc),\r\n        on('ratechange', handler(4), doc),\r\n    ];\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initFontObserver({ fontCb, doc }) {\r\n    const win = doc.defaultView;\r\n    if (!win) {\r\n        return () => {\r\n        };\r\n    }\r\n    const handlers = [];\r\n    const fontMap = new WeakMap();\r\n    const originalFontFace = win.FontFace;\r\n    win.FontFace = function FontFace(family, source, descriptors) {\r\n        const fontFace = new originalFontFace(family, source, descriptors);\r\n        fontMap.set(fontFace, {\r\n            family,\r\n            buffer: typeof source !== 'string',\r\n            descriptors,\r\n            fontSource: typeof source === 'string'\r\n                ? source\r\n                : JSON.stringify(Array.from(new Uint8Array(source))),\r\n        });\r\n        return fontFace;\r\n    };\r\n    const restoreHandler = patch(doc.fonts, 'add', function (original) {\r\n        return function (fontFace) {\r\n            setTimeout(callbackWrapper(() => {\r\n                const p = fontMap.get(fontFace);\r\n                if (p) {\r\n                    fontCb(p);\r\n                    fontMap.delete(fontFace);\r\n                }\r\n            }), 0);\r\n            return original.apply(this, [fontFace]);\r\n        };\r\n    });\r\n    handlers.push(() => {\r\n        win.FontFace = originalFontFace;\r\n    });\r\n    handlers.push(restoreHandler);\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initSelectionObserver(param) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, selectionCb, } = param;\r\n    let collapsed = true;\r\n    const updateSelection = callbackWrapper(() => {\r\n        const selection = doc.getSelection();\r\n        if (!selection || (collapsed && selection?.isCollapsed))\r\n            return;\r\n        collapsed = selection.isCollapsed || false;\r\n        const ranges = [];\r\n        const count = selection.rangeCount || 0;\r\n        for (let i = 0; i < count; i++) {\r\n            const range = selection.getRangeAt(i);\r\n            const { startContainer, startOffset, endContainer, endOffset } = range;\r\n            const blocked = isBlocked(startContainer, blockClass, blockSelector, unblockSelector, true) ||\r\n                isBlocked(endContainer, blockClass, blockSelector, unblockSelector, true);\r\n            if (blocked)\r\n                continue;\r\n            ranges.push({\r\n                start: mirror.getId(startContainer),\r\n                startOffset,\r\n                end: mirror.getId(endContainer),\r\n                endOffset,\r\n            });\r\n        }\r\n        selectionCb({ ranges });\r\n    });\r\n    updateSelection();\r\n    return on('selectionchange', updateSelection);\r\n}\r\nfunction initCustomElementObserver({ doc, customElementCb, }) {\r\n    const win = doc.defaultView;\r\n    if (!win || !win.customElements)\r\n        return () => { };\r\n    const restoreHandler = patch(win.customElements, 'define', function (original) {\r\n        return function (name, constructor, options) {\r\n            try {\r\n                customElementCb({\r\n                    define: {\r\n                        name,\r\n                    },\r\n                });\r\n            }\r\n            catch (e) {\r\n            }\r\n            return original.apply(this, [name, constructor, options]);\r\n        };\r\n    });\r\n    return restoreHandler;\r\n}\r\nfunction initObservers(o, _hooks = {}) {\r\n    const currentWindow = o.doc.defaultView;\r\n    if (!currentWindow) {\r\n        return () => {\r\n        };\r\n    }\r\n    const mutationObserver = initMutationObserver(o, o.doc);\r\n    const mousemoveHandler = initMoveObserver(o);\r\n    const mouseInteractionHandler = initMouseInteractionObserver(o);\r\n    const scrollHandler = initScrollObserver(o);\r\n    const viewportResizeHandler = initViewportResizeObserver(o, {\r\n        win: currentWindow,\r\n    });\r\n    const inputHandler = initInputObserver(o);\r\n    const mediaInteractionHandler = initMediaInteractionObserver(o);\r\n    const styleSheetObserver = initStyleSheetObserver(o, { win: currentWindow });\r\n    const adoptedStyleSheetObserver = initAdoptedStyleSheetObserver(o, o.doc);\r\n    const styleDeclarationObserver = initStyleDeclarationObserver(o, {\r\n        win: currentWindow,\r\n    });\r\n    const fontObserver = o.collectFonts\r\n        ? initFontObserver(o)\r\n        : () => {\r\n        };\r\n    const selectionObserver = initSelectionObserver(o);\r\n    const customElementObserver = initCustomElementObserver(o);\r\n    const pluginHandlers = [];\r\n    for (const plugin of o.plugins) {\r\n        pluginHandlers.push(plugin.observer(plugin.callback, currentWindow, plugin.options));\r\n    }\r\n    return callbackWrapper(() => {\r\n        mutationBuffers.forEach((b) => b.reset());\r\n        mutationObserver.disconnect();\r\n        mousemoveHandler();\r\n        mouseInteractionHandler();\r\n        scrollHandler();\r\n        viewportResizeHandler();\r\n        inputHandler();\r\n        mediaInteractionHandler();\r\n        styleSheetObserver();\r\n        adoptedStyleSheetObserver();\r\n        styleDeclarationObserver();\r\n        fontObserver();\r\n        selectionObserver();\r\n        customElementObserver();\r\n        pluginHandlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction hasNestedCSSRule(prop) {\r\n    return typeof window[prop] !== 'undefined';\r\n}\r\nfunction canMonkeyPatchNestedCSSRule(prop) {\r\n    return Boolean(typeof window[prop] !== 'undefined' &&\r\n        window[prop].prototype &&\r\n        'insertRule' in window[prop].prototype &&\r\n        'deleteRule' in window[prop].prototype);\r\n}\n\nexport { INPUT_TAGS, initAdoptedStyleSheetObserver, initMutationObserver, initObservers, initScrollObserver, mutationBuffers };\n","class CrossOriginIframeMirror {\r\n    constructor(generateIdFn) {\r\n        this.generateIdFn = generateIdFn;\r\n        this.iframeIdToRemoteIdMap = new WeakMap();\r\n        this.iframeRemoteIdToIdMap = new WeakMap();\r\n    }\r\n    getId(iframe, remoteId, idToRemoteMap, remoteToIdMap) {\r\n        const idToRemoteIdMap = idToRemoteMap || this.getIdToRemoteIdMap(iframe);\r\n        const remoteIdToIdMap = remoteToIdMap || this.getRemoteIdToIdMap(iframe);\r\n        let id = idToRemoteIdMap.get(remoteId);\r\n        if (!id) {\r\n            id = this.generateIdFn();\r\n            idToRemoteIdMap.set(remoteId, id);\r\n            remoteIdToIdMap.set(id, remoteId);\r\n        }\r\n        return id;\r\n    }\r\n    getIds(iframe, remoteId) {\r\n        const idToRemoteIdMap = this.getIdToRemoteIdMap(iframe);\r\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\r\n        return remoteId.map((id) => this.getId(iframe, id, idToRemoteIdMap, remoteIdToIdMap));\r\n    }\r\n    getRemoteId(iframe, id, map) {\r\n        const remoteIdToIdMap = map || this.getRemoteIdToIdMap(iframe);\r\n        if (typeof id !== 'number')\r\n            return id;\r\n        const remoteId = remoteIdToIdMap.get(id);\r\n        if (!remoteId)\r\n            return -1;\r\n        return remoteId;\r\n    }\r\n    getRemoteIds(iframe, ids) {\r\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\r\n        return ids.map((id) => this.getRemoteId(iframe, id, remoteIdToIdMap));\r\n    }\r\n    reset(iframe) {\r\n        if (!iframe) {\r\n            this.iframeIdToRemoteIdMap = new WeakMap();\r\n            this.iframeRemoteIdToIdMap = new WeakMap();\r\n            return;\r\n        }\r\n        this.iframeIdToRemoteIdMap.delete(iframe);\r\n        this.iframeRemoteIdToIdMap.delete(iframe);\r\n    }\r\n    getIdToRemoteIdMap(iframe) {\r\n        let idToRemoteIdMap = this.iframeIdToRemoteIdMap.get(iframe);\r\n        if (!idToRemoteIdMap) {\r\n            idToRemoteIdMap = new Map();\r\n            this.iframeIdToRemoteIdMap.set(iframe, idToRemoteIdMap);\r\n        }\r\n        return idToRemoteIdMap;\r\n    }\r\n    getRemoteIdToIdMap(iframe) {\r\n        let remoteIdToIdMap = this.iframeRemoteIdToIdMap.get(iframe);\r\n        if (!remoteIdToIdMap) {\r\n            remoteIdToIdMap = new Map();\r\n            this.iframeRemoteIdToIdMap.set(iframe, remoteIdToIdMap);\r\n        }\r\n        return remoteIdToIdMap;\r\n    }\r\n}\n\nexport { CrossOriginIframeMirror as default };\n","import { genId, NodeType } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport CrossOriginIframeMirror from './cross-origin-iframe-mirror.js';\nimport { EventType, IncrementalSource } from '../../../types/dist/rrweb-types.js';\n\nclass IframeManagerNoop {\r\n    constructor() {\r\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\r\n        this.crossOriginIframeRootIdMap = new WeakMap();\r\n    }\r\n    addIframe() {\r\n    }\r\n    addLoadListener() {\r\n    }\r\n    attachIframe() {\r\n    }\r\n}\r\nclass IframeManager {\r\n    constructor(options) {\r\n        this.iframes = new WeakMap();\r\n        this.crossOriginIframeMap = new WeakMap();\r\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\r\n        this.crossOriginIframeRootIdMap = new WeakMap();\r\n        this.mutationCb = options.mutationCb;\r\n        this.wrappedEmit = options.wrappedEmit;\r\n        this.stylesheetManager = options.stylesheetManager;\r\n        this.recordCrossOriginIframes = options.recordCrossOriginIframes;\r\n        this.crossOriginIframeStyleMirror = new CrossOriginIframeMirror(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror));\r\n        this.mirror = options.mirror;\r\n        if (this.recordCrossOriginIframes) {\r\n            window.addEventListener('message', this.handleMessage.bind(this));\r\n        }\r\n    }\r\n    addIframe(iframeEl) {\r\n        this.iframes.set(iframeEl, true);\r\n        if (iframeEl.contentWindow)\r\n            this.crossOriginIframeMap.set(iframeEl.contentWindow, iframeEl);\r\n    }\r\n    addLoadListener(cb) {\r\n        this.loadListener = cb;\r\n    }\r\n    attachIframe(iframeEl, childSn) {\r\n        this.mutationCb({\r\n            adds: [\r\n                {\r\n                    parentId: this.mirror.getId(iframeEl),\r\n                    nextId: null,\r\n                    node: childSn,\r\n                },\r\n            ],\r\n            removes: [],\r\n            texts: [],\r\n            attributes: [],\r\n            isAttachIframe: true,\r\n        });\r\n        this.loadListener?.(iframeEl);\r\n        if (iframeEl.contentDocument &&\r\n            iframeEl.contentDocument.adoptedStyleSheets &&\r\n            iframeEl.contentDocument.adoptedStyleSheets.length > 0)\r\n            this.stylesheetManager.adoptStyleSheets(iframeEl.contentDocument.adoptedStyleSheets, this.mirror.getId(iframeEl.contentDocument));\r\n    }\r\n    handleMessage(message) {\r\n        const crossOriginMessageEvent = message;\r\n        if (crossOriginMessageEvent.data.type !== 'rrweb' ||\r\n            crossOriginMessageEvent.origin !== crossOriginMessageEvent.data.origin)\r\n            return;\r\n        const iframeSourceWindow = message.source;\r\n        if (!iframeSourceWindow)\r\n            return;\r\n        const iframeEl = this.crossOriginIframeMap.get(message.source);\r\n        if (!iframeEl)\r\n            return;\r\n        const transformedEvent = this.transformCrossOriginEvent(iframeEl, crossOriginMessageEvent.data.event);\r\n        if (transformedEvent)\r\n            this.wrappedEmit(transformedEvent, crossOriginMessageEvent.data.isCheckout);\r\n    }\r\n    transformCrossOriginEvent(iframeEl, e) {\r\n        switch (e.type) {\r\n            case EventType.FullSnapshot: {\r\n                this.crossOriginIframeMirror.reset(iframeEl);\r\n                this.crossOriginIframeStyleMirror.reset(iframeEl);\r\n                this.replaceIdOnNode(e.data.node, iframeEl);\r\n                const rootId = e.data.node.id;\r\n                this.crossOriginIframeRootIdMap.set(iframeEl, rootId);\r\n                this.patchRootIdOnNode(e.data.node, rootId);\r\n                return {\r\n                    timestamp: e.timestamp,\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Mutation,\r\n                        adds: [\r\n                            {\r\n                                parentId: this.mirror.getId(iframeEl),\r\n                                nextId: null,\r\n                                node: e.data.node,\r\n                            },\r\n                        ],\r\n                        removes: [],\r\n                        texts: [],\r\n                        attributes: [],\r\n                        isAttachIframe: true,\r\n                    },\r\n                };\r\n            }\r\n            case EventType.Meta:\r\n            case EventType.Load:\r\n            case EventType.DomContentLoaded: {\r\n                return false;\r\n            }\r\n            case EventType.Plugin: {\r\n                return e;\r\n            }\r\n            case EventType.Custom: {\r\n                this.replaceIds(e.data.payload, iframeEl, ['id', 'parentId', 'previousId', 'nextId']);\r\n                return e;\r\n            }\r\n            case EventType.IncrementalSnapshot: {\r\n                switch (e.data.source) {\r\n                    case IncrementalSource.Mutation: {\r\n                        e.data.adds.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, [\r\n                                'parentId',\r\n                                'nextId',\r\n                                'previousId',\r\n                            ]);\r\n                            this.replaceIdOnNode(n.node, iframeEl);\r\n                            const rootId = this.crossOriginIframeRootIdMap.get(iframeEl);\r\n                            rootId && this.patchRootIdOnNode(n.node, rootId);\r\n                        });\r\n                        e.data.removes.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['parentId', 'id']);\r\n                        });\r\n                        e.data.attributes.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['id']);\r\n                        });\r\n                        e.data.texts.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['id']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Drag:\r\n                    case IncrementalSource.TouchMove:\r\n                    case IncrementalSource.MouseMove: {\r\n                        e.data.positions.forEach((p) => {\r\n                            this.replaceIds(p, iframeEl, ['id']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.ViewportResize: {\r\n                        return false;\r\n                    }\r\n                    case IncrementalSource.MediaInteraction:\r\n                    case IncrementalSource.MouseInteraction:\r\n                    case IncrementalSource.Scroll:\r\n                    case IncrementalSource.CanvasMutation:\r\n                    case IncrementalSource.Input: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.StyleSheetRule:\r\n                    case IncrementalSource.StyleDeclaration: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        this.replaceStyleIds(e.data, iframeEl, ['styleId']);\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Font: {\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Selection: {\r\n                        e.data.ranges.forEach((range) => {\r\n                            this.replaceIds(range, iframeEl, ['start', 'end']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.AdoptedStyleSheet: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        this.replaceStyleIds(e.data, iframeEl, ['styleIds']);\r\n                        e.data.styles?.forEach((style) => {\r\n                            this.replaceStyleIds(style, iframeEl, ['styleId']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    replace(iframeMirror, obj, iframeEl, keys) {\r\n        for (const key of keys) {\r\n            if (!Array.isArray(obj[key]) && typeof obj[key] !== 'number')\r\n                continue;\r\n            if (Array.isArray(obj[key])) {\r\n                obj[key] = iframeMirror.getIds(iframeEl, obj[key]);\r\n            }\r\n            else {\r\n                obj[key] = iframeMirror.getId(iframeEl, obj[key]);\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n    replaceIds(obj, iframeEl, keys) {\r\n        return this.replace(this.crossOriginIframeMirror, obj, iframeEl, keys);\r\n    }\r\n    replaceStyleIds(obj, iframeEl, keys) {\r\n        return this.replace(this.crossOriginIframeStyleMirror, obj, iframeEl, keys);\r\n    }\r\n    replaceIdOnNode(node, iframeEl) {\r\n        this.replaceIds(node, iframeEl, ['id', 'rootId']);\r\n        if ('childNodes' in node) {\r\n            node.childNodes.forEach((child) => {\r\n                this.replaceIdOnNode(child, iframeEl);\r\n            });\r\n        }\r\n    }\r\n    patchRootIdOnNode(node, rootId) {\r\n        if (node.type !== NodeType.Document && !node.rootId)\r\n            node.rootId = rootId;\r\n        if ('childNodes' in node) {\r\n            node.childNodes.forEach((child) => {\r\n                this.patchRootIdOnNode(child, rootId);\r\n            });\r\n        }\r\n    }\r\n}\n\nexport { IframeManager, IframeManagerNoop };\n","import { initMutationObserver, initScrollObserver, initAdoptedStyleSheetObserver } from './observer.js';\nimport { patch, inDom } from '../utils.js';\nimport { isNativeShadowDom } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nclass ShadowDomManagerNoop {\r\n    init() {\r\n    }\r\n    addShadowRoot() {\r\n    }\r\n    observeAttachShadow() {\r\n    }\r\n    reset() {\r\n    }\r\n}\r\nclass ShadowDomManager {\r\n    constructor(options) {\r\n        this.shadowDoms = new WeakSet();\r\n        this.restoreHandlers = [];\r\n        this.mutationCb = options.mutationCb;\r\n        this.scrollCb = options.scrollCb;\r\n        this.bypassOptions = options.bypassOptions;\r\n        this.mirror = options.mirror;\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.reset();\r\n        this.patchAttachShadow(Element, document);\r\n    }\r\n    addShadowRoot(shadowRoot, doc) {\r\n        if (!isNativeShadowDom(shadowRoot))\r\n            return;\r\n        if (this.shadowDoms.has(shadowRoot))\r\n            return;\r\n        this.shadowDoms.add(shadowRoot);\r\n        const observer = initMutationObserver({\r\n            ...this.bypassOptions,\r\n            doc,\r\n            mutationCb: this.mutationCb,\r\n            mirror: this.mirror,\r\n            shadowDomManager: this,\r\n        }, shadowRoot);\r\n        this.restoreHandlers.push(() => observer.disconnect());\r\n        this.restoreHandlers.push(initScrollObserver({\r\n            ...this.bypassOptions,\r\n            scrollCb: this.scrollCb,\r\n            doc: shadowRoot,\r\n            mirror: this.mirror,\r\n        }));\r\n        setTimeout(() => {\r\n            if (shadowRoot.adoptedStyleSheets &&\r\n                shadowRoot.adoptedStyleSheets.length > 0)\r\n                this.bypassOptions.stylesheetManager.adoptStyleSheets(shadowRoot.adoptedStyleSheets, this.mirror.getId(shadowRoot.host));\r\n            this.restoreHandlers.push(initAdoptedStyleSheetObserver({\r\n                mirror: this.mirror,\r\n                stylesheetManager: this.bypassOptions.stylesheetManager,\r\n            }, shadowRoot));\r\n        }, 0);\r\n    }\r\n    observeAttachShadow(iframeElement) {\r\n        if (!iframeElement.contentWindow || !iframeElement.contentDocument)\r\n            return;\r\n        this.patchAttachShadow(iframeElement.contentWindow.Element, iframeElement.contentDocument);\r\n    }\r\n    patchAttachShadow(element, doc) {\r\n        const manager = this;\r\n        this.restoreHandlers.push(patch(element.prototype, 'attachShadow', function (original) {\r\n            return function (option) {\r\n                const shadowRoot = original.call(this, option);\r\n                if (this.shadowRoot && inDom(this))\r\n                    manager.addShadowRoot(this.shadowRoot, doc);\r\n                return shadowRoot;\r\n            };\r\n        }));\r\n    }\r\n    reset() {\r\n        this.restoreHandlers.forEach((handler) => {\r\n            try {\r\n                handler();\r\n            }\r\n            catch (e) {\r\n            }\r\n        });\r\n        this.restoreHandlers = [];\r\n        this.shadowDoms = new WeakSet();\r\n    }\r\n}\n\nexport { ShadowDomManager, ShadowDomManagerNoop };\n","import { onRequestAnimationFrame, isBlocked } from '../../../utils.js';\nimport { CanvasContext } from '../../../../../types/dist/rrweb-types.js';\nimport initCanvas2DMutationObserver from './2d.js';\nimport initCanvasContextObserver from './canvas.js';\nimport initCanvasWebGLMutationObserver from './webgl.js';\nimport { getImageBitmapDataUrlWorkerURL as t } from '../../../../../rrweb-worker/es/rrweb-worker/index.js';\nimport { callbackWrapper, registerErrorHandler } from '../../error-handler.js';\n\nclass CanvasManagerNoop {\r\n    reset() {\r\n    }\r\n    freeze() {\r\n    }\r\n    unfreeze() {\r\n    }\r\n    lock() {\r\n    }\r\n    unlock() {\r\n    }\r\n    snapshot() {\r\n    }\r\n}\r\nclass CanvasManager {\r\n    reset() {\r\n        this.pendingCanvasMutations.clear();\r\n        this.resetObservers && this.resetObservers();\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n    }\r\n    constructor(options) {\r\n        this.pendingCanvasMutations = new Map();\r\n        this.rafStamps = { latestId: 0, invokeId: null };\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.processMutation = (target, mutation) => {\r\n            const newFrame = this.rafStamps.invokeId &&\r\n                this.rafStamps.latestId !== this.rafStamps.invokeId;\r\n            if (newFrame || !this.rafStamps.invokeId)\r\n                this.rafStamps.invokeId = this.rafStamps.latestId;\r\n            if (!this.pendingCanvasMutations.has(target)) {\r\n                this.pendingCanvasMutations.set(target, []);\r\n            }\r\n            this.pendingCanvasMutations.get(target).push(mutation);\r\n        };\r\n        const { sampling = 'all', win, blockClass, blockSelector, unblockSelector, maxCanvasSize, recordCanvas, dataURLOptions, errorHandler, } = options;\r\n        this.mutationCb = options.mutationCb;\r\n        this.mirror = options.mirror;\r\n        this.options = options;\r\n        if (errorHandler) {\r\n            registerErrorHandler(errorHandler);\r\n        }\r\n        if (options.enableManualSnapshot) {\r\n            return;\r\n        }\r\n        callbackWrapper(() => {\r\n            if (recordCanvas && sampling === 'all')\r\n                this.initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector);\r\n            if (recordCanvas && typeof sampling === 'number')\r\n                this.initCanvasFPSObserver(sampling, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, {\r\n                    dataURLOptions,\r\n                });\r\n        })();\r\n    }\r\n    initCanvasFPSObserver(fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, options) {\r\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, true);\r\n        const rafId = this.takeSnapshot(false, fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, options.dataURLOptions);\r\n        this.resetObservers = () => {\r\n            canvasContextReset();\r\n            cancelAnimationFrame(rafId);\r\n        };\r\n    }\r\n    initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector) {\r\n        this.startRAFTimestamping();\r\n        this.startPendingCanvasMutationFlusher();\r\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, false);\r\n        const canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector);\r\n        const canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\r\n        this.resetObservers = () => {\r\n            canvasContextReset();\r\n            canvas2DReset();\r\n            canvasWebGL1and2Reset();\r\n        };\r\n    }\r\n    snapshot(canvasElement) {\r\n        const { options } = this;\r\n        const rafId = this.takeSnapshot(true, options.sampling === 'all' ? 2 : options.sampling || 2, options.win, options.blockClass, options.blockSelector, options.unblockSelector, options.maxCanvasSize, options.dataURLOptions, canvasElement);\r\n        this.resetObservers = () => {\r\n            cancelAnimationFrame(rafId);\r\n        };\r\n    }\r\n    takeSnapshot(isManualSnapshot, fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, dataURLOptions, canvasElement) {\r\n        const snapshotInProgressMap = new Map();\r\n        const worker = new Worker(t());\r\n        worker.onmessage = (e) => {\r\n            const data = e.data;\r\n            const { id } = data;\r\n            snapshotInProgressMap.set(id, false);\r\n            if (!('base64' in data))\r\n                return;\r\n            const { base64, type, width, height } = data;\r\n            this.mutationCb({\r\n                id,\r\n                type: CanvasContext['2D'],\r\n                commands: [\r\n                    {\r\n                        property: 'clearRect',\r\n                        args: [0, 0, width, height],\r\n                    },\r\n                    {\r\n                        property: 'drawImage',\r\n                        args: [\r\n                            {\r\n                                rr_type: 'ImageBitmap',\r\n                                args: [\r\n                                    {\r\n                                        rr_type: 'Blob',\r\n                                        data: [{ rr_type: 'ArrayBuffer', base64 }],\r\n                                        type,\r\n                                    },\r\n                                ],\r\n                            },\r\n                            0,\r\n                            0,\r\n                            width,\r\n                            height,\r\n                        ],\r\n                    },\r\n                ],\r\n            });\r\n        };\r\n        const timeBetweenSnapshots = 1000 / fps;\r\n        let lastSnapshotTime = 0;\r\n        let rafId;\r\n        const getCanvas = (canvasElement) => {\r\n            if (canvasElement) {\r\n                return [canvasElement];\r\n            }\r\n            const matchedCanvas = [];\r\n            win.document.querySelectorAll('canvas').forEach((canvas) => {\r\n                if (!isBlocked(canvas, blockClass, blockSelector, unblockSelector, true)) {\r\n                    matchedCanvas.push(canvas);\r\n                }\r\n            });\r\n            return matchedCanvas;\r\n        };\r\n        const takeCanvasSnapshots = (timestamp) => {\r\n            if (lastSnapshotTime &&\r\n                timestamp - lastSnapshotTime < timeBetweenSnapshots) {\r\n                rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n                return;\r\n            }\r\n            lastSnapshotTime = timestamp;\r\n            getCanvas(canvasElement).forEach((canvas) => {\r\n                const id = this.mirror.getId(canvas);\r\n                if (snapshotInProgressMap.get(id))\r\n                    return;\r\n                if (!canvas.width || !canvas.height)\r\n                    return;\r\n                snapshotInProgressMap.set(id, true);\r\n                if (!isManualSnapshot &&\r\n                    ['webgl', 'webgl2'].includes(canvas.__context)) {\r\n                    const context = canvas.getContext(canvas.__context);\r\n                    if (context?.getContextAttributes()?.preserveDrawingBuffer === false) {\r\n                        context.clear(context.COLOR_BUFFER_BIT);\r\n                    }\r\n                }\r\n                createImageBitmap(canvas)\r\n                    .then((bitmap) => {\r\n                    worker.postMessage({\r\n                        id,\r\n                        bitmap,\r\n                        width: canvas.width,\r\n                        height: canvas.height,\r\n                        dataURLOptions,\r\n                        maxCanvasSize,\r\n                    }, [bitmap]);\r\n                })\r\n                    .catch((error) => {\r\n                    callbackWrapper(() => {\r\n                        throw error;\r\n                    })();\r\n                });\r\n            });\r\n            rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        };\r\n        rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        return rafId;\r\n    }\r\n    startPendingCanvasMutationFlusher() {\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    startRAFTimestamping() {\r\n        const setLatestRAFTimestamp = (timestamp) => {\r\n            this.rafStamps.latestId = timestamp;\r\n            onRequestAnimationFrame(setLatestRAFTimestamp);\r\n        };\r\n        onRequestAnimationFrame(setLatestRAFTimestamp);\r\n    }\r\n    flushPendingCanvasMutations() {\r\n        this.pendingCanvasMutations.forEach((values, canvas) => {\r\n            const id = this.mirror.getId(canvas);\r\n            this.flushPendingCanvasMutationFor(canvas, id);\r\n        });\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    flushPendingCanvasMutationFor(canvas, id) {\r\n        if (this.frozen || this.locked) {\r\n            return;\r\n        }\r\n        const valuesWithType = this.pendingCanvasMutations.get(canvas);\r\n        if (!valuesWithType || id === -1)\r\n            return;\r\n        const values = valuesWithType.map((value) => {\r\n            const { type, ...rest } = value;\r\n            return rest;\r\n        });\r\n        const { type } = valuesWithType[0];\r\n        this.mutationCb({ id, type, commands: values });\r\n        this.pendingCanvasMutations.delete(canvas);\r\n    }\r\n}\n\nexport { CanvasManager, CanvasManagerNoop };\n","import { stringifyRule } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { StyleSheetMirror } from '../utils.js';\n\nclass StylesheetManager {\r\n    constructor(options) {\r\n        this.trackedLinkElements = new WeakSet();\r\n        this.styleMirror = new StyleSheetMirror();\r\n        this.mutationCb = options.mutationCb;\r\n        this.adoptedStyleSheetCb = options.adoptedStyleSheetCb;\r\n    }\r\n    attachLinkElement(linkEl, childSn) {\r\n        if ('_cssText' in childSn.attributes)\r\n            this.mutationCb({\r\n                adds: [],\r\n                removes: [],\r\n                texts: [],\r\n                attributes: [\r\n                    {\r\n                        id: childSn.id,\r\n                        attributes: childSn\r\n                            .attributes,\r\n                    },\r\n                ],\r\n            });\r\n        this.trackLinkElement(linkEl);\r\n    }\r\n    trackLinkElement(linkEl) {\r\n        if (this.trackedLinkElements.has(linkEl))\r\n            return;\r\n        this.trackedLinkElements.add(linkEl);\r\n        this.trackStylesheetInLinkElement(linkEl);\r\n    }\r\n    adoptStyleSheets(sheets, hostId) {\r\n        if (sheets.length === 0)\r\n            return;\r\n        const adoptedStyleSheetData = {\r\n            id: hostId,\r\n            styleIds: [],\r\n        };\r\n        const styles = [];\r\n        for (const sheet of sheets) {\r\n            let styleId;\r\n            if (!this.styleMirror.has(sheet)) {\r\n                styleId = this.styleMirror.add(sheet);\r\n                styles.push({\r\n                    styleId,\r\n                    rules: Array.from(sheet.rules || CSSRule, (r, index) => ({\r\n                        rule: stringifyRule(r),\r\n                        index,\r\n                    })),\r\n                });\r\n            }\r\n            else\r\n                styleId = this.styleMirror.getId(sheet);\r\n            adoptedStyleSheetData.styleIds.push(styleId);\r\n        }\r\n        if (styles.length > 0)\r\n            adoptedStyleSheetData.styles = styles;\r\n        this.adoptedStyleSheetCb(adoptedStyleSheetData);\r\n    }\r\n    reset() {\r\n        this.styleMirror.reset();\r\n        this.trackedLinkElements = new WeakSet();\r\n    }\r\n    trackStylesheetInLinkElement(linkEl) {\r\n    }\r\n}\n\nexport { StylesheetManager };\n","import { onRequestAnimationFrame } from '../utils.js';\n\nclass ProcessedNodeManager {\r\n    constructor() {\r\n        this.nodeMap = new WeakMap();\r\n        this.loop = true;\r\n        this.periodicallyClear();\r\n    }\r\n    periodicallyClear() {\r\n        onRequestAnimationFrame(() => {\r\n            this.clear();\r\n            if (this.loop)\r\n                this.periodicallyClear();\r\n        });\r\n    }\r\n    inOtherBuffer(node, thisBuffer) {\r\n        const buffers = this.nodeMap.get(node);\r\n        return (buffers && Array.from(buffers).some((buffer) => buffer !== thisBuffer));\r\n    }\r\n    add(node, buffer) {\r\n        this.nodeMap.set(node, (this.nodeMap.get(node) || new Set()).add(buffer));\r\n    }\r\n    clear() {\r\n        this.nodeMap = new WeakMap();\r\n    }\r\n    destroy() {\r\n        this.loop = false;\r\n    }\r\n}\n\nexport { ProcessedNodeManager as default };\n","import { createMirror, snapshot } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { initObservers, mutationBuffers } from './observer.js';\nimport { polyfill, on, nowTimestamp, getWindowWidth, getWindowHeight, getWindowScroll, isSerializedIframe, isSerializedStylesheet, hasShadowRoot } from '../utils.js';\nimport { EventType, IncrementalSource } from '../../../types/dist/rrweb-types.js';\nimport { IframeManagerNoop, IframeManager } from './iframe-manager.js';\nimport { ShadowDomManagerNoop, ShadowDomManager } from './shadow-dom-manager.js';\nimport { CanvasManagerNoop } from './observers/canvas/canvas-manager.js';\nexport { CanvasManager } from './observers/canvas/canvas-manager.js';\nimport { StylesheetManager } from './stylesheet-manager.js';\nimport ProcessedNodeManager from './processed-node-manager.js';\nimport { callbackWrapper, unregisterErrorHandler, registerErrorHandler } from './error-handler.js';\n\nfunction wrapEvent(e) {\r\n    const eWithTime = e;\r\n    eWithTime.timestamp = nowTimestamp();\r\n    return eWithTime;\r\n}\r\nlet _wrappedEmit;\r\nlet _takeFullSnapshot;\r\nconst mirror = createMirror();\r\nfunction record(options = {}) {\r\n    const { emit, checkoutEveryNms, checkoutEveryNth, blockClass = 'rr-block', blockSelector = null, unblockSelector = null, ignoreClass = 'rr-ignore', ignoreSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, maskAllInputs, maskInputOptions: _maskInputOptions, slimDOMOptions: _slimDOMOptions, maskAttributeFn, maskInputFn, maskTextFn, maxCanvasSize = null, packFn, sampling = {}, dataURLOptions = {}, mousemoveWait, recordCanvas = false, recordCrossOriginIframes = false, recordAfter = options.recordAfter === 'DOMContentLoaded'\r\n        ? options.recordAfter\r\n        : 'load', userTriggeredOnInput = false, collectFonts = false, inlineImages = false, plugins, keepIframeSrcFn = () => false, ignoreCSSAttributes = new Set([]), errorHandler, onMutation, getCanvasManager, } = options;\r\n    registerErrorHandler(errorHandler);\r\n    const inEmittingFrame = recordCrossOriginIframes\r\n        ? window.parent === window\r\n        : true;\r\n    let passEmitsToParent = false;\r\n    if (!inEmittingFrame) {\r\n        try {\r\n            if (window.parent.document) {\r\n                passEmitsToParent = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            passEmitsToParent = true;\r\n        }\r\n    }\r\n    if (inEmittingFrame && !emit) {\r\n        throw new Error('emit function is required');\r\n    }\r\n    if (mousemoveWait !== undefined && sampling.mousemove === undefined) {\r\n        sampling.mousemove = mousemoveWait;\r\n    }\r\n    mirror.reset();\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n            radio: true,\r\n            checkbox: true,\r\n        }\r\n        : _maskInputOptions !== undefined\r\n            ? _maskInputOptions\r\n            : {};\r\n    const slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === 'all'\r\n        ? {\r\n            script: true,\r\n            comment: true,\r\n            headFavicon: true,\r\n            headWhitespace: true,\r\n            headMetaSocial: true,\r\n            headMetaRobots: true,\r\n            headMetaHttpEquiv: true,\r\n            headMetaVerification: true,\r\n            headMetaAuthorship: _slimDOMOptions === 'all',\r\n            headMetaDescKeywords: _slimDOMOptions === 'all',\r\n        }\r\n        : _slimDOMOptions\r\n            ? _slimDOMOptions\r\n            : {};\r\n    polyfill();\r\n    let lastFullSnapshotEvent;\r\n    let incrementalSnapshotCount = 0;\r\n    const eventProcessor = (e) => {\r\n        for (const plugin of plugins || []) {\r\n            if (plugin.eventProcessor) {\r\n                e = plugin.eventProcessor(e);\r\n            }\r\n        }\r\n        if (packFn &&\r\n            !passEmitsToParent) {\r\n            e = packFn(e);\r\n        }\r\n        return e;\r\n    };\r\n    const wrappedEmit = (e, isCheckout) => {\r\n        if (mutationBuffers[0]?.isFrozen() &&\r\n            e.type !== EventType.FullSnapshot &&\r\n            !(e.type === EventType.IncrementalSnapshot &&\r\n                e.data.source === IncrementalSource.Mutation)) {\r\n            mutationBuffers.forEach((buf) => buf.unfreeze());\r\n        }\r\n        if (inEmittingFrame) {\r\n            emit?.(eventProcessor(e), isCheckout);\r\n        }\r\n        else if (passEmitsToParent) {\r\n            const message = {\r\n                type: 'rrweb',\r\n                event: eventProcessor(e),\r\n                origin: window.location.origin,\r\n                isCheckout,\r\n            };\r\n            window.parent.postMessage(message, '*');\r\n        }\r\n        if (e.type === EventType.FullSnapshot) {\r\n            lastFullSnapshotEvent = e;\r\n            incrementalSnapshotCount = 0;\r\n        }\r\n        else if (e.type === EventType.IncrementalSnapshot) {\r\n            if (e.data.source === IncrementalSource.Mutation &&\r\n                e.data.isAttachIframe) {\r\n                return;\r\n            }\r\n            incrementalSnapshotCount++;\r\n            const exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\r\n            const exceedTime = checkoutEveryNms &&\r\n                lastFullSnapshotEvent &&\r\n                e.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\r\n            if (exceedCount || exceedTime) {\r\n                takeFullSnapshot(true);\r\n            }\r\n        }\r\n    };\r\n    _wrappedEmit = wrappedEmit;\r\n    const wrappedMutationEmit = (m) => {\r\n        wrappedEmit(wrapEvent({\r\n            type: EventType.IncrementalSnapshot,\r\n            data: {\r\n                source: IncrementalSource.Mutation,\r\n                ...m,\r\n            },\r\n        }));\r\n    };\r\n    const wrappedScrollEmit = (p) => wrappedEmit(wrapEvent({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.Scroll,\r\n            ...p,\r\n        },\r\n    }));\r\n    const wrappedCanvasMutationEmit = (p) => wrappedEmit(wrapEvent({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.CanvasMutation,\r\n            ...p,\r\n        },\r\n    }));\r\n    const wrappedAdoptedStyleSheetEmit = (a) => wrappedEmit(wrapEvent({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.AdoptedStyleSheet,\r\n            ...a,\r\n        },\r\n    }));\r\n    const stylesheetManager = new StylesheetManager({\r\n        mutationCb: wrappedMutationEmit,\r\n        adoptedStyleSheetCb: wrappedAdoptedStyleSheetEmit,\r\n    });\r\n    const iframeManager = typeof __RRWEB_EXCLUDE_IFRAME__ === 'boolean' && __RRWEB_EXCLUDE_IFRAME__\r\n        ? new IframeManagerNoop()\r\n        : new IframeManager({\r\n            mirror,\r\n            mutationCb: wrappedMutationEmit,\r\n            stylesheetManager: stylesheetManager,\r\n            recordCrossOriginIframes,\r\n            wrappedEmit,\r\n        });\r\n    for (const plugin of plugins || []) {\r\n        if (plugin.getMirror)\r\n            plugin.getMirror({\r\n                nodeMirror: mirror,\r\n                crossOriginIframeMirror: iframeManager.crossOriginIframeMirror,\r\n                crossOriginIframeStyleMirror: iframeManager.crossOriginIframeStyleMirror,\r\n            });\r\n    }\r\n    const processedNodeManager = new ProcessedNodeManager();\r\n    const canvasManager = _getCanvasManager(getCanvasManager, {\r\n        mirror,\r\n        win: window,\r\n        mutationCb: (p) => wrappedEmit(wrapEvent({\r\n            type: EventType.IncrementalSnapshot,\r\n            data: {\r\n                source: IncrementalSource.CanvasMutation,\r\n                ...p,\r\n            },\r\n        })),\r\n        recordCanvas,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maxCanvasSize,\r\n        sampling: sampling['canvas'],\r\n        dataURLOptions,\r\n        errorHandler,\r\n    });\r\n    const shadowDomManager = typeof __RRWEB_EXCLUDE_SHADOW_DOM__ === 'boolean' &&\r\n        __RRWEB_EXCLUDE_SHADOW_DOM__\r\n        ? new ShadowDomManagerNoop()\r\n        : new ShadowDomManager({\r\n            mutationCb: wrappedMutationEmit,\r\n            scrollCb: wrappedScrollEmit,\r\n            bypassOptions: {\r\n                onMutation,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                inlineStylesheet,\r\n                maskInputOptions,\r\n                dataURLOptions,\r\n                maskAttributeFn,\r\n                maskTextFn,\r\n                maskInputFn,\r\n                recordCanvas,\r\n                inlineImages,\r\n                sampling,\r\n                slimDOMOptions,\r\n                iframeManager,\r\n                stylesheetManager,\r\n                canvasManager,\r\n                keepIframeSrcFn,\r\n                processedNodeManager,\r\n            },\r\n            mirror,\r\n        });\r\n    const takeFullSnapshot = (isCheckout = false) => {\r\n        wrappedEmit(wrapEvent({\r\n            type: EventType.Meta,\r\n            data: {\r\n                href: window.location.href,\r\n                width: getWindowWidth(),\r\n                height: getWindowHeight(),\r\n            },\r\n        }), isCheckout);\r\n        stylesheetManager.reset();\r\n        shadowDomManager.init();\r\n        mutationBuffers.forEach((buf) => buf.lock());\r\n        const node = snapshot(document, {\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            unblockSelector,\r\n            maskAllText,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            inlineStylesheet,\r\n            maskAllInputs: maskInputOptions,\r\n            maskAttributeFn,\r\n            maskInputFn,\r\n            maskTextFn,\r\n            slimDOM: slimDOMOptions,\r\n            dataURLOptions,\r\n            recordCanvas,\r\n            inlineImages,\r\n            onSerialize: (n) => {\r\n                if (isSerializedIframe(n, mirror)) {\r\n                    iframeManager.addIframe(n);\r\n                }\r\n                if (isSerializedStylesheet(n, mirror)) {\r\n                    stylesheetManager.trackLinkElement(n);\r\n                }\r\n                if (hasShadowRoot(n)) {\r\n                    shadowDomManager.addShadowRoot(n.shadowRoot, document);\r\n                }\r\n            },\r\n            onIframeLoad: (iframe, childSn) => {\r\n                iframeManager.attachIframe(iframe, childSn);\r\n                shadowDomManager.observeAttachShadow(iframe);\r\n            },\r\n            onStylesheetLoad: (linkEl, childSn) => {\r\n                stylesheetManager.attachLinkElement(linkEl, childSn);\r\n            },\r\n            keepIframeSrcFn,\r\n        });\r\n        if (!node) {\r\n            return console.warn('Failed to snapshot the document');\r\n        }\r\n        wrappedEmit(wrapEvent({\r\n            type: EventType.FullSnapshot,\r\n            data: {\r\n                node,\r\n                initialOffset: getWindowScroll(window),\r\n            },\r\n        }));\r\n        mutationBuffers.forEach((buf) => buf.unlock());\r\n        if (document.adoptedStyleSheets && document.adoptedStyleSheets.length > 0)\r\n            stylesheetManager.adoptStyleSheets(document.adoptedStyleSheets, mirror.getId(document));\r\n    };\r\n    _takeFullSnapshot = takeFullSnapshot;\r\n    try {\r\n        const handlers = [];\r\n        const observe = (doc) => {\r\n            return callbackWrapper(initObservers)({\r\n                onMutation,\r\n                mutationCb: wrappedMutationEmit,\r\n                mousemoveCb: (positions, source) => wrappedEmit(wrapEvent({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source,\r\n                        positions,\r\n                    },\r\n                })),\r\n                mouseInteractionCb: (d) => wrappedEmit(wrapEvent({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.MouseInteraction,\r\n                        ...d,\r\n                    },\r\n                })),\r\n                scrollCb: wrappedScrollEmit,\r\n                viewportResizeCb: (d) => wrappedEmit(wrapEvent({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.ViewportResize,\r\n                        ...d,\r\n                    },\r\n                })),\r\n                inputCb: (v) => wrappedEmit(wrapEvent({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Input,\r\n                        ...v,\r\n                    },\r\n                })),\r\n                mediaInteractionCb: (p) => wrappedEmit(wrapEvent({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.MediaInteraction,\r\n                        ...p,\r\n                    },\r\n                })),\r\n                styleSheetRuleCb: (r) => wrappedEmit(wrapEvent({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.StyleSheetRule,\r\n                        ...r,\r\n                    },\r\n                })),\r\n                styleDeclarationCb: (r) => wrappedEmit(wrapEvent({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.StyleDeclaration,\r\n                        ...r,\r\n                    },\r\n                })),\r\n                canvasMutationCb: wrappedCanvasMutationEmit,\r\n                fontCb: (p) => wrappedEmit(wrapEvent({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Font,\r\n                        ...p,\r\n                    },\r\n                })),\r\n                selectionCb: (p) => {\r\n                    wrappedEmit(wrapEvent({\r\n                        type: EventType.IncrementalSnapshot,\r\n                        data: {\r\n                            source: IncrementalSource.Selection,\r\n                            ...p,\r\n                        },\r\n                    }));\r\n                },\r\n                customElementCb: (c) => {\r\n                    wrappedEmit(wrapEvent({\r\n                        type: EventType.IncrementalSnapshot,\r\n                        data: {\r\n                            source: IncrementalSource.CustomElement,\r\n                            ...c,\r\n                        },\r\n                    }));\r\n                },\r\n                blockClass,\r\n                ignoreClass,\r\n                ignoreSelector,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskInputOptions,\r\n                inlineStylesheet,\r\n                sampling,\r\n                recordCanvas,\r\n                inlineImages,\r\n                userTriggeredOnInput,\r\n                collectFonts,\r\n                doc,\r\n                maskAttributeFn,\r\n                maskInputFn,\r\n                maskTextFn,\r\n                keepIframeSrcFn,\r\n                blockSelector,\r\n                unblockSelector,\r\n                slimDOMOptions,\r\n                dataURLOptions,\r\n                mirror,\r\n                iframeManager,\r\n                stylesheetManager,\r\n                shadowDomManager,\r\n                processedNodeManager,\r\n                canvasManager,\r\n                ignoreCSSAttributes,\r\n                plugins: plugins\r\n                    ?.filter((p) => p.observer)\r\n                    ?.map((p) => ({\r\n                    observer: p.observer,\r\n                    options: p.options,\r\n                    callback: (payload) => wrappedEmit(wrapEvent({\r\n                        type: EventType.Plugin,\r\n                        data: {\r\n                            plugin: p.name,\r\n                            payload,\r\n                        },\r\n                    })),\r\n                })) || [],\r\n            }, {});\r\n        };\r\n        iframeManager.addLoadListener((iframeEl) => {\r\n            try {\r\n                handlers.push(observe(iframeEl.contentDocument));\r\n            }\r\n            catch (error) {\r\n                console.warn(error);\r\n            }\r\n        });\r\n        const init = () => {\r\n            takeFullSnapshot();\r\n            handlers.push(observe(document));\r\n        };\r\n        if (document.readyState === 'interactive' ||\r\n            document.readyState === 'complete') {\r\n            init();\r\n        }\r\n        else {\r\n            handlers.push(on('DOMContentLoaded', () => {\r\n                wrappedEmit(wrapEvent({\r\n                    type: EventType.DomContentLoaded,\r\n                    data: {},\r\n                }));\r\n                if (recordAfter === 'DOMContentLoaded')\r\n                    init();\r\n            }));\r\n            handlers.push(on('load', () => {\r\n                wrappedEmit(wrapEvent({\r\n                    type: EventType.Load,\r\n                    data: {},\r\n                }));\r\n                if (recordAfter === 'load')\r\n                    init();\r\n            }, window));\r\n        }\r\n        return () => {\r\n            handlers.forEach((h) => h());\r\n            processedNodeManager.destroy();\r\n            _takeFullSnapshot = undefined;\r\n            unregisterErrorHandler();\r\n        };\r\n    }\r\n    catch (error) {\r\n        console.warn(error);\r\n    }\r\n}\r\nfunction addCustomEvent(tag, payload) {\r\n    if (!_wrappedEmit) {\r\n        throw new Error('please add custom event after start recording');\r\n    }\r\n    _wrappedEmit(wrapEvent({\r\n        type: EventType.Custom,\r\n        data: {\r\n            tag,\r\n            payload,\r\n        },\r\n    }));\r\n}\r\nfunction freezePage() {\r\n    mutationBuffers.forEach((buf) => buf.freeze());\r\n}\r\nfunction takeFullSnapshot(isCheckout) {\r\n    if (!_takeFullSnapshot) {\r\n        throw new Error('please take full snapshot after start recording');\r\n    }\r\n    _takeFullSnapshot(isCheckout);\r\n}\r\nrecord.mirror = mirror;\r\nrecord.takeFullSnapshot = takeFullSnapshot;\r\nfunction _getCanvasManager(getCanvasManagerFn, options) {\r\n    try {\r\n        return getCanvasManagerFn\r\n            ? getCanvasManagerFn(options)\r\n            : new CanvasManagerNoop();\r\n    }\r\n    catch {\r\n        console.warn('Unable to initialize CanvasManager');\r\n        return new CanvasManagerNoop();\r\n    }\r\n}\n\nexport { addCustomEvent, record as default, freezePage, mirror, takeFullSnapshot };\n","type ClassOption = string | RegExp;\n\n/** Duplicate this from @sentry-internal/rrweb so we can export this as well. */\nexport const ReplayEventTypeDomContentLoaded = 0;\nexport const ReplayEventTypeLoad = 1;\nexport const ReplayEventTypeFullSnapshot = 2;\nexport const ReplayEventTypeIncrementalSnapshot = 3;\nexport const ReplayEventTypeMeta = 4;\nexport const ReplayEventTypeCustom = 5;\nexport const ReplayEventTypePlugin = 6;\n\nexport type ReplayEventType =\n  | typeof ReplayEventTypeDomContentLoaded\n  | typeof ReplayEventTypeLoad\n  | typeof ReplayEventTypeFullSnapshot\n  | typeof ReplayEventTypeIncrementalSnapshot\n  | typeof ReplayEventTypeMeta\n  | typeof ReplayEventTypeCustom\n  | typeof ReplayEventTypePlugin;\n\n/**\n * This is a partial copy of rrweb's eventWithTime type which only contains the properties\n * we specifcally need in the SDK.\n */\nexport type ReplayEventWithTime = {\n  type: ReplayEventType;\n  data: unknown;\n  timestamp: number;\n  delay?: number;\n};\n\n/**\n * This is a partial copy of rrweb's recording options which only contains the properties\n * we specifically us in the SDK. Users can specify additional properties, hence we add the\n * Record<string, unknown> union type.\n */\nexport type RrwebRecordOptions = {\n  maskAllText?: boolean;\n  maskAllInputs?: boolean;\n  blockClass?: ClassOption;\n  ignoreClass?: string;\n  maskTextClass?: ClassOption;\n  maskTextSelector?: string;\n  blockSelector?: string;\n  maskInputOptions?: Record<string, boolean>;\n} & Record<string, unknown>;\n\nexport interface CanvasManagerInterface {\n  reset(): void;\n  freeze(): void;\n  unfreeze(): void;\n  lock(): void;\n  unlock(): void;\n  snapshot(): void;\n}\n\nexport interface CanvasManagerOptions {\n  recordCanvas: boolean;\n  enableManualSnapshot?: boolean;\n  blockClass: string | RegExp;\n  blockSelector: string | null;\n  unblockSelector: string | null;\n  sampling?: 'all' | number;\n  dataURLOptions: Partial<{\n    type: string;\n    quality: number;\n  }>;\n  mutationCb: (p: any) => void;\n  win: typeof globalThis & Window;\n  mirror: any;\n}\n","/**\n * Converts a timestamp to ms, if it was in s, or keeps it as ms.\n */\nexport function timestampToMs(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp : timestamp * 1000;\n}\n\n/**\n * Converts a timestamp to s, if it was in ms, or keeps it as s.\n */\nexport function timestampToS(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport type { Breadcrumb } from '@sentry/types';\nimport { normalize } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../../types';\n\n/**\n * Add a breadcrumb event to replay.\n */\nexport function addBreadcrumbEvent(replay: ReplayContainer, breadcrumb: Breadcrumb): void {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n\n  if (['ui.click', 'ui.input'].includes(breadcrumb.category as string)) {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n\n  replay.addUpdate(() => {\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        // normalize to max. 10 depth and 1_000 properties per object\n        payload: normalize(breadcrumb, 10, 1_000),\n      },\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\n","import type { INode } from '@sentry-internal/rrweb-snapshot';\n\nconst INTERACTIVE_SELECTOR = 'button,a';\n\n/** Get the closest interactive parent element, or else return the given element. */\nexport function getClosestInteractive(element: Element): Element {\n  const closestInteractive = element.closest(INTERACTIVE_SELECTOR);\n  return closestInteractive || element;\n}\n\n/**\n * For clicks, we check if the target is inside of a button or link\n * If so, we use this as the target instead\n * This is useful because if you click on the image in <button><img></button>,\n * The target will be the image, not the button, which we don't want here\n */\nexport function getClickTargetNode(event: Event | MouseEvent | Node): Node | INode | null {\n  const target = getTargetNode(event);\n\n  if (!target || !(target instanceof Element)) {\n    return target;\n  }\n\n  return getClosestInteractive(target);\n}\n\n/** Get the event target node. */\nexport function getTargetNode(event: Node | { target: EventTarget | null }): Node | INode | null {\n  if (isEventWithTarget(event)) {\n    return event.target as Node | null;\n  }\n\n  return event;\n}\n\nfunction isEventWithTarget(event: unknown): event is { target: EventTarget | null } {\n  return typeof event === 'object' && !!event && 'target' in event;\n}\n","import { fill } from '@sentry/utils';\n\nimport { WINDOW } from '../../constants';\n\ntype WindowOpenHandler = () => void;\n\nlet handlers: undefined | WindowOpenHandler[];\n\n/**\n * Register a handler to be called when `window.open()` is called.\n * Returns a cleanup function.\n */\nexport function onWindowOpen(cb: WindowOpenHandler): () => void {\n  // Ensure to only register this once\n  if (!handlers) {\n    handlers = [];\n    monkeyPatchWindowOpen();\n  }\n\n  handlers.push(cb);\n\n  return () => {\n    const pos = handlers ? handlers.indexOf(cb) : -1;\n    if (pos > -1) {\n      (handlers as WindowOpenHandler[]).splice(pos, 1);\n    }\n  };\n}\n\nfunction monkeyPatchWindowOpen(): void {\n  fill(WINDOW, 'open', function (originalWindowOpen: () => void): () => void {\n    return function (...args: unknown[]): void {\n      if (handlers) {\n        try {\n          handlers.forEach(handler => handler());\n        } catch (e) {\n          // ignore errors in here\n        }\n      }\n\n      return originalWindowOpen.apply(WINDOW, args);\n    };\n  });\n}\n","import { IncrementalSource, MouseInteractions, record } from '@sentry-internal/rrweb';\nimport type { Breadcrumb } from '@sentry/types';\n\nimport { WINDOW } from '../constants';\nimport type {\n  RecordingEvent,\n  ReplayClickDetector,\n  ReplayContainer,\n  ReplayMultiClickFrame,\n  ReplaySlowClickFrame,\n  SlowClickConfig,\n} from '../types';\nimport { ReplayEventTypeIncrementalSnapshot } from '../types';\nimport { timestampToS } from '../util/timestamp';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClosestInteractive } from './util/domUtils';\nimport { onWindowOpen } from './util/onWindowOpen';\n\ntype ClickBreadcrumb = Breadcrumb & {\n  timestamp: number;\n};\n\ninterface Click {\n  timestamp: number;\n  mutationAfter?: number;\n  scrollAfter?: number;\n  clickBreadcrumb: ClickBreadcrumb;\n  clickCount: number;\n  node: HTMLElement;\n}\n\ntype IncrementalRecordingEvent = RecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { source: IncrementalSource };\n};\n\ntype IncrementalMouseInteractionRecordingEvent = IncrementalRecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { type: MouseInteractions; id: number };\n};\n\n/** Handle a click. */\nexport function handleClick(clickDetector: ReplayClickDetector, clickBreadcrumb: Breadcrumb, node: HTMLElement): void {\n  clickDetector.handleClick(clickBreadcrumb, node);\n}\n\n/** A click detector class that can be used to detect slow or rage clicks on elements. */\nexport class ClickDetector implements ReplayClickDetector {\n  // protected for testing\n  protected _lastMutation: number;\n  protected _lastScroll: number;\n\n  private _clicks: Click[];\n  private _teardown: undefined | (() => void);\n\n  private _threshold: number;\n  private _scollTimeout: number;\n  private _timeout: number;\n  private _ignoreSelector: string;\n\n  private _replay: ReplayContainer;\n  private _checkClickTimeout?: ReturnType<typeof setTimeout>;\n  private _addBreadcrumbEvent: typeof addBreadcrumbEvent;\n\n  public constructor(\n    replay: ReplayContainer,\n    slowClickConfig: SlowClickConfig,\n    // Just for easier testing\n    _addBreadcrumbEvent = addBreadcrumbEvent,\n  ) {\n    this._lastMutation = 0;\n    this._lastScroll = 0;\n    this._clicks = [];\n\n    // We want everything in s, but options are in ms\n    this._timeout = slowClickConfig.timeout / 1000;\n    this._threshold = slowClickConfig.threshold / 1000;\n    this._scollTimeout = slowClickConfig.scrollTimeout / 1000;\n    this._replay = replay;\n    this._ignoreSelector = slowClickConfig.ignoreSelector;\n    this._addBreadcrumbEvent = _addBreadcrumbEvent;\n  }\n\n  /** Register click detection handlers on mutation or scroll. */\n  public addListeners(): void {\n    const cleanupWindowOpen = onWindowOpen(() => {\n      // Treat window.open as mutation\n      this._lastMutation = nowInSeconds();\n    });\n\n    this._teardown = () => {\n      cleanupWindowOpen();\n\n      this._clicks = [];\n      this._lastMutation = 0;\n      this._lastScroll = 0;\n    };\n  }\n\n  /** Clean up listeners. */\n  public removeListeners(): void {\n    if (this._teardown) {\n      this._teardown();\n    }\n\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n  }\n\n  /** @inheritDoc */\n  public handleClick(breadcrumb: Breadcrumb, node: HTMLElement): void {\n    if (ignoreElement(node, this._ignoreSelector) || !isClickBreadcrumb(breadcrumb)) {\n      return;\n    }\n\n    const newClick: Click = {\n      timestamp: timestampToS(breadcrumb.timestamp),\n      clickBreadcrumb: breadcrumb,\n      // Set this to 0 so we know it originates from the click breadcrumb\n      clickCount: 0,\n      node,\n    };\n\n    // If there was a click in the last 1s on the same element, ignore it - only keep a single reference per second\n    if (\n      this._clicks.some(click => click.node === newClick.node && Math.abs(click.timestamp - newClick.timestamp) < 1)\n    ) {\n      return;\n    }\n\n    this._clicks.push(newClick);\n\n    // If this is the first new click, set a timeout to check for multi clicks\n    if (this._clicks.length === 1) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** @inheritDoc */\n  public registerMutation(timestamp = Date.now()): void {\n    this._lastMutation = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerScroll(timestamp = Date.now()): void {\n    this._lastScroll = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerClick(element: HTMLElement): void {\n    const node = getClosestInteractive(element);\n    this._handleMultiClick(node as HTMLElement);\n  }\n\n  /** Count multiple clicks on elements. */\n  private _handleMultiClick(node: HTMLElement): void {\n    this._getClicks(node).forEach(click => {\n      click.clickCount++;\n    });\n  }\n\n  /** Get all pending clicks for a given node. */\n  private _getClicks(node: HTMLElement): Click[] {\n    return this._clicks.filter(click => click.node === node);\n  }\n\n  /** Check the clicks that happened. */\n  private _checkClicks(): void {\n    const timedOutClicks: Click[] = [];\n\n    const now = nowInSeconds();\n\n    this._clicks.forEach(click => {\n      if (!click.mutationAfter && this._lastMutation) {\n        click.mutationAfter = click.timestamp <= this._lastMutation ? this._lastMutation - click.timestamp : undefined;\n      }\n      if (!click.scrollAfter && this._lastScroll) {\n        click.scrollAfter = click.timestamp <= this._lastScroll ? this._lastScroll - click.timestamp : undefined;\n      }\n\n      // All of these are in seconds!\n      if (click.timestamp + this._timeout <= now) {\n        timedOutClicks.push(click);\n      }\n    });\n\n    // Remove \"old\" clicks\n    for (const click of timedOutClicks) {\n      const pos = this._clicks.indexOf(click);\n\n      if (pos > -1) {\n        this._generateBreadcrumbs(click);\n        this._clicks.splice(pos, 1);\n      }\n    }\n\n    // Trigger new check, unless no clicks left\n    if (this._clicks.length) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Generate matching breadcrumb(s) for the click. */\n  private _generateBreadcrumbs(click: Click): void {\n    const replay = this._replay;\n    const hadScroll = click.scrollAfter && click.scrollAfter <= this._scollTimeout;\n    const hadMutation = click.mutationAfter && click.mutationAfter <= this._threshold;\n\n    const isSlowClick = !hadScroll && !hadMutation;\n    const { clickCount, clickBreadcrumb } = click;\n\n    // Slow click\n    if (isSlowClick) {\n      // If `mutationAfter` is set, it means a mutation happened after the threshold, but before the timeout\n      // If not, it means we just timed out without scroll & mutation\n      const timeAfterClickMs = Math.min(click.mutationAfter || this._timeout, this._timeout) * 1000;\n      const endReason = timeAfterClickMs < this._timeout * 1000 ? 'mutation' : 'timeout';\n\n      const breadcrumb: ReplaySlowClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.slowClickDetected',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          timeAfterClickMs,\n          endReason,\n          // If clickCount === 0, it means multiClick was not correctly captured here\n          // - we still want to send 1 in this case\n          clickCount: clickCount || 1,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n      return;\n    }\n\n    // Multi click\n    if (clickCount > 1) {\n      const breadcrumb: ReplayMultiClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.multiClick',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          clickCount,\n          metric: true,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n    }\n  }\n\n  /** Schedule to check current clicks. */\n  private _scheduleCheckClicks(): void {\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n\n    this._checkClickTimeout = setTimeout(() => this._checkClicks(), 1000);\n  }\n}\n\nconst SLOW_CLICK_TAGS = ['A', 'BUTTON', 'INPUT'];\n\n/** exported for tests only */\nexport function ignoreElement(node: HTMLElement, ignoreSelector: string): boolean {\n  if (!SLOW_CLICK_TAGS.includes(node.tagName)) {\n    return true;\n  }\n\n  // If <input> tag, we only want to consider input[type='submit'] & input[type='button']\n  if (node.tagName === 'INPUT' && !['submit', 'button'].includes(node.getAttribute('type') || '')) {\n    return true;\n  }\n\n  // If <a> tag, detect special variants that may not lead to an action\n  // If target !== _self, we may open the link somewhere else, which would lead to no action\n  // Also, when downloading a file, we may not leave the page, but still not trigger an action\n  if (\n    node.tagName === 'A' &&\n    (node.hasAttribute('download') || (node.hasAttribute('target') && node.getAttribute('target') !== '_self'))\n  ) {\n    return true;\n  }\n\n  if (ignoreSelector && node.matches(ignoreSelector)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isClickBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is ClickBreadcrumb {\n  return !!(breadcrumb.data && typeof breadcrumb.data.nodeId === 'number' && breadcrumb.timestamp);\n}\n\n// This is good enough for us, and is easier to test/mock than `timestampInSeconds`\nfunction nowInSeconds(): number {\n  return Date.now() / 1000;\n}\n\n/** Update the click detector based on a recording event of rrweb. */\nexport function updateClickDetectorForRecordingEvent(clickDetector: ReplayClickDetector, event: RecordingEvent): void {\n  try {\n    // note: We only consider incremental snapshots here\n    // This means that any full snapshot is ignored for mutation detection - the reason is that we simply cannot know if a mutation happened here.\n    // E.g. think that we are buffering, an error happens and we take a full snapshot because we switched to session mode -\n    // in this scenario, we would not know if a dead click happened because of the error, which is a key dead click scenario.\n    // Instead, by ignoring full snapshots, we have the risk that we generate a false positive\n    // (if a mutation _did_ happen but was \"swallowed\" by the full snapshot)\n    // But this should be more unlikely as we'd generally capture the incremental snapshot right away\n\n    if (!isIncrementalEvent(event)) {\n      return;\n    }\n\n    const { source } = event.data;\n    if (source === IncrementalSource.Mutation) {\n      clickDetector.registerMutation(event.timestamp);\n    }\n\n    if (source === IncrementalSource.Scroll) {\n      clickDetector.registerScroll(event.timestamp);\n    }\n\n    if (isIncrementalMouseInteraction(event)) {\n      const { type, id } = event.data;\n      const node = record.mirror.getNode(id);\n\n      if (node instanceof HTMLElement && type === MouseInteractions.Click) {\n        clickDetector.registerClick(node);\n      }\n    }\n  } catch {\n    // ignore errors here, e.g. if accessing something that does not exist\n  }\n}\n\nfunction isIncrementalEvent(event: RecordingEvent): event is IncrementalRecordingEvent {\n  return event.type === ReplayEventTypeIncrementalSnapshot;\n}\n\nfunction isIncrementalMouseInteraction(\n  event: IncrementalRecordingEvent,\n): event is IncrementalMouseInteractionRecordingEvent {\n  return event.data.source === IncrementalSource.MouseInteraction;\n}\n","import type { ReplayBreadcrumbFrame } from '../types/replayFrame';\n\n/**\n * Create a breadcrumb for a replay.\n */\nexport function createBreadcrumb(\n  breadcrumb: Omit<ReplayBreadcrumbFrame, 'timestamp' | 'type'> & Partial<Pick<ReplayBreadcrumbFrame, 'timestamp'>>,\n): ReplayBreadcrumbFrame {\n  return {\n    timestamp: Date.now() / 1000,\n    type: 'default',\n    ...breadcrumb,\n  };\n}\n","var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\r\n        return fixSafariColons(rule.cssText);\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    const a = doc.createElement('a');\r\n    a.href = attributeValue;\r\n    return a.href;\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref() {\r\n    const a = document.createElement('a');\r\n    a.href = '';\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref());\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction classMatchesRegex(node, regex, checkAncestors) {\r\n    if (!node)\r\n        return false;\r\n    if (checkAncestors) {\r\n        return (distanceToMatch(node, (node) => elementClassMatchesRegex(node, regex)) >= 0);\r\n    }\r\n    else if (node.nodeType === node.ELEMENT_NODE) {\r\n        return elementClassMatchesRegex(node, regex);\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref());\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            delete attributes.rel;\r\n            delete attributes.href;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = document.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const oldValue = image.crossOrigin;\r\n        image.crossOrigin = 'anonymous';\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\r\n            }\r\n            oldValue\r\n                ? (attributes.crossOrigin = oldValue)\r\n                : image.removeAttribute('crossorigin');\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!n.contentDocument) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload') &&\r\n                    sn.attributes.as === 'script') ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    sn.attributes.href.endsWith('.js')))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = n.contentDocument;\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        serializedNode.attributes.rel === 'stylesheet') {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\nfunction visitSnapshot(node, onVisit) {\r\n    function walk(current) {\r\n        onVisit(current);\r\n        if (current.type === NodeType.Document ||\r\n            current.type === NodeType.Element) {\r\n            current.childNodes.forEach(walk);\r\n        }\r\n    }\r\n    walk(node);\r\n}\r\nfunction cleanupSnapshot() {\r\n    _id = 1;\r\n}\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        const m = match(/^([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const splitSelectors = trim(m[0])\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        })\r\n            .split(/\\s*(?![^(]*\\)),\\s*/);\r\n        if (splitSelectors.length <= 1) {\r\n            return splitSelectors.map((s) => {\r\n                return s.replace(/\\u200C/g, ',');\r\n            });\r\n        }\r\n        let i = 0;\r\n        let j = 0;\r\n        const len = splitSelectors.length;\r\n        const finalSelectors = [];\r\n        while (i < len) {\r\n            const openingParensCount = (splitSelectors[i].match(/\\(/g) || []).length;\r\n            const closingParensCount = (splitSelectors[i].match(/\\)/g) || []).length;\r\n            let unbalancedParens = openingParensCount - closingParensCount;\r\n            if (unbalancedParens >= 1) {\r\n                let foundClosingSelector = false;\r\n                j = i + 1;\r\n                while (j < len) {\r\n                    const nextOpeningParensCount = (splitSelectors[j].match(/\\(/g) || [])\r\n                        .length;\r\n                    const nextClosingParensCount = (splitSelectors[j].match(/\\)/g) || [])\r\n                        .length;\r\n                    const nextUnbalancedParens = nextClosingParensCount - nextOpeningParensCount;\r\n                    if (nextUnbalancedParens === unbalancedParens) {\r\n                        finalSelectors.push(splitSelectors.slice(i, j + 1).join(','));\r\n                        i = j + 1;\r\n                        foundClosingSelector = true;\r\n                        break;\r\n                    }\r\n                    j++;\r\n                    unbalancedParens -= nextUnbalancedParens;\r\n                }\r\n                if (foundClosingSelector) {\r\n                    continue;\r\n                }\r\n                splitSelectors\r\n                    .slice(i, len)\r\n                    .forEach((selector) => selector && finalSelectors.push(selector));\r\n                break;\r\n            }\r\n            splitSelectors[i] && finalSelectors.push(splitSelectors[i]);\r\n            i++;\r\n        }\r\n        return finalSelectors.map((s) => {\r\n            return s.replace(/\\u200C/g, ',');\r\n        });\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload') &&\r\n                        n.attributes.as === 'script') {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        n.attributes.href.endsWith('.js')) {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = document.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, classMatchesRegex, cleanupSnapshot, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, fixSafariColons, genId, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, rebuild, serializeNodeWithId, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute, visitSnapshot };\n","// Note that these are the serialized attributes and not attributes directly on\n// the DOM Node. Attributes we are interested in:\nconst ATTRIBUTES_TO_RECORD = new Set([\n  'id',\n  'class',\n  'aria-label',\n  'role',\n  'name',\n  'alt',\n  'title',\n  'data-test-id',\n  'data-testid',\n  'disabled',\n  'aria-disabled',\n  'data-sentry-component',\n]);\n\n/**\n * Inclusion list of attributes that we want to record from the DOM element\n */\nexport function getAttributesToRecord(attributes: Record<string, unknown>): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  for (const key in attributes) {\n    if (ATTRIBUTES_TO_RECORD.has(key)) {\n      let normalizedKey = key;\n\n      if (key === 'data-testid' || key === 'data-test-id') {\n        normalizedKey = 'testId';\n      }\n\n      obj[normalizedKey] = attributes[key];\n    }\n  }\n\n  return obj;\n}\n","import { record } from '@sentry-internal/rrweb';\nimport type { serializedElementNodeWithId, serializedNodeWithId } from '@sentry-internal/rrweb-snapshot';\nimport { NodeType } from '@sentry-internal/rrweb-snapshot';\nimport type { Breadcrumb, HandlerDataDom } from '@sentry/types';\nimport { htmlTreeAsString } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { handleClick } from './handleClick';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClickTargetNode, getTargetNode } from './util/domUtils';\nimport { getAttributesToRecord } from './util/getAttributesToRecord';\n\nexport const handleDomListener: (replay: ReplayContainer) => (handlerData: HandlerDataDom) => void = (\n  replay: ReplayContainer,\n) => {\n  return (handlerData: HandlerDataDom): void => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleDom(handlerData);\n\n    if (!result) {\n      return;\n    }\n\n    const isClick = handlerData.name === 'click';\n    const event = isClick ? (handlerData.event as PointerEvent) : undefined;\n    // Ignore clicks if ctrl/alt/meta/shift keys are held down as they alter behavior of clicks (e.g. open in new tab)\n    if (\n      isClick &&\n      replay.clickDetector &&\n      event &&\n      event.target &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.ctrlKey &&\n      !event.shiftKey\n    ) {\n      handleClick(\n        replay.clickDetector,\n        result as Breadcrumb & { timestamp: number; data: { nodeId: number } },\n        getClickTargetNode(handlerData.event as Event) as HTMLElement,\n      );\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n};\n\n/** Get the base DOM breadcrumb. */\nexport function getBaseDomBreadcrumb(target: Node | null, message: string): Breadcrumb {\n  const nodeId = record.mirror.getId(target);\n  const node = nodeId && record.mirror.getNode(nodeId);\n  const meta = node && record.mirror.getMeta(node);\n  const element = meta && isElement(meta) ? meta : null;\n\n  return {\n    message,\n    data: element\n      ? {\n          nodeId,\n          node: {\n            id: nodeId,\n            tagName: element.tagName,\n            textContent: Array.from(element.childNodes)\n              .map((node: serializedNodeWithId) => node.type === NodeType.Text && node.textContent)\n              .filter(Boolean) // filter out empty values\n              .map(text => (text as string).trim())\n              .join(''),\n            attributes: getAttributesToRecord(element.attributes),\n          },\n        }\n      : {},\n  };\n}\n\n/**\n * An event handler to react to DOM events.\n * Exported for tests.\n */\nexport function handleDom(handlerData: HandlerDataDom): Breadcrumb | null {\n  const { target, message } = getDomTarget(handlerData);\n\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    ...getBaseDomBreadcrumb(target, message),\n  });\n}\n\nfunction getDomTarget(handlerData: HandlerDataDom): { target: Node | null; message: string } {\n  const isClick = handlerData.name === 'click';\n\n  let message: string | undefined;\n  let target: Node | null = null;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    target = isClick ? getClickTargetNode(handlerData.event as Event) : getTargetNode(handlerData.event as Event);\n    message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  } catch (e) {\n    message = '<unknown>';\n  }\n\n  return { target, message };\n}\n\nfunction isElement(node: serializedNodeWithId): node is serializedElementNodeWithId {\n  return node.type === NodeType.Element;\n}\n","import type { Breadcrumb } from '@sentry/types';\nimport { htmlTreeAsString } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { getBaseDomBreadcrumb } from './handleDom';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\n/** Handle keyboard events & create breadcrumbs. */\nexport function handleKeyboardEvent(replay: ReplayContainer, event: KeyboardEvent): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  // Update user activity, but do not restart recording as it can create\n  // noisy/low-value replays (e.g. user comes back from idle, hits alt-tab, new\n  // session with a single \"keydown\" breadcrumb is created)\n  replay.updateUserActivity();\n\n  const breadcrumb = getKeyboardBreadcrumb(event);\n\n  if (!breadcrumb) {\n    return;\n  }\n\n  addBreadcrumbEvent(replay, breadcrumb);\n}\n\n/** exported only for tests */\nexport function getKeyboardBreadcrumb(event: KeyboardEvent): Breadcrumb | null {\n  const { metaKey, shiftKey, ctrlKey, altKey, key, target } = event;\n\n  // never capture for input fields\n  if (!target || isInputElement(target as HTMLElement) || !key) {\n    return null;\n  }\n\n  // Note: We do not consider shift here, as that means \"uppercase\"\n  const hasModifierKey = metaKey || ctrlKey || altKey;\n  const isCharacterKey = key.length === 1; // other keys like Escape, Tab, etc have a longer length\n\n  // Do not capture breadcrumb if only a word key is pressed\n  // This could leak e.g. user input\n  if (!hasModifierKey && isCharacterKey) {\n    return null;\n  }\n\n  const message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  const baseBreadcrumb = getBaseDomBreadcrumb(target as Node, message);\n\n  return createBreadcrumb({\n    category: 'ui.keyDown',\n    message,\n    data: {\n      ...baseBreadcrumb.data,\n      metaKey,\n      shiftKey,\n      ctrlKey,\n      altKey,\n      key,\n    },\n  });\n}\n\nfunction isInputElement(target: HTMLElement): boolean {\n  return target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable;\n}\n","import { record } from '@sentry-internal/rrweb';\nimport { browserPerformanceTimeOrigin } from '@sentry/utils';\n\nimport { WINDOW } from '../constants';\nimport type {\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  ExperimentalPerformanceResourceTiming,\n  LargestContentfulPaintData,\n  NavigationData,\n  PaintData,\n  ReplayPerformanceEntry,\n  ResourceData,\n} from '../types';\n\n// Map entryType -> function to normalize data for event\nconst ENTRY_TYPES: Record<\n  string,\n  (entry: AllPerformanceEntry) => null | ReplayPerformanceEntry<AllPerformanceEntryData>\n> = {\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n};\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nexport function createPerformanceEntries(\n  entries: AllPerformanceEntry[],\n): ReplayPerformanceEntry<AllPerformanceEntryData>[] {\n  return entries.map(createPerformanceEntry).filter(Boolean) as ReplayPerformanceEntry<AllPerformanceEntryData>[];\n}\n\nfunction createPerformanceEntry(entry: AllPerformanceEntry): ReplayPerformanceEntry<AllPerformanceEntryData> | null {\n  if (!ENTRY_TYPES[entry.entryType]) {\n    return null;\n  }\n\n  return ENTRY_TYPES[entry.entryType](entry);\n}\n\nfunction getAbsoluteTime(time: number): number {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((browserPerformanceTimeOrigin || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\nfunction createPaintEntry(entry: PerformancePaintTiming): ReplayPerformanceEntry<PaintData> {\n  const { duration, entryType, name, startTime } = entry;\n\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration,\n    data: undefined,\n  };\n}\n\nfunction createNavigationEntry(entry: PerformanceNavigationTiming): ReplayPerformanceEntry<NavigationData> | null {\n  const {\n    entryType,\n    name,\n    decodedBodySize,\n    duration,\n    domComplete,\n    encodedBodySize,\n    domContentLoadedEventStart,\n    domContentLoadedEventEnd,\n    domInteractive,\n    loadEventStart,\n    loadEventEnd,\n    redirectCount,\n    startTime,\n    transferSize,\n    type,\n  } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      decodedBodySize,\n      encodedBodySize,\n      duration,\n      domInteractive,\n      domContentLoadedEventStart,\n      domContentLoadedEventEnd,\n      loadEventStart,\n      loadEventEnd,\n      domComplete,\n      redirectCount,\n    },\n  };\n}\n\nfunction createResourceEntry(\n  entry: ExperimentalPerformanceResourceTiming,\n): ReplayPerformanceEntry<ResourceData> | null {\n  const {\n    entryType,\n    initiatorType,\n    name,\n    responseEnd,\n    startTime,\n    decodedBodySize,\n    encodedBodySize,\n    responseStatus,\n    transferSize,\n  } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      statusCode: responseStatus,\n      decodedBodySize,\n      encodedBodySize,\n    },\n  };\n}\n\n/**\n * Add a LCP event to the replay based on an LCP metric.\n */\nexport function getLargestContentfulPaint(metric: {\n  value: number;\n  entries: PerformanceEntry[];\n}): ReplayPerformanceEntry<LargestContentfulPaintData> {\n  const entries = metric.entries;\n  const lastEntry = entries[entries.length - 1] as (PerformanceEntry & { element?: Element }) | undefined;\n  const element = lastEntry ? lastEntry.element : undefined;\n\n  const value = metric.value;\n\n  const end = getAbsoluteTime(value);\n\n  const data: ReplayPerformanceEntry<LargestContentfulPaintData> = {\n    type: 'largest-contentful-paint',\n    name: 'largest-contentful-paint',\n    start: end,\n    end,\n    data: {\n      value,\n      size: value,\n      nodeId: element ? record.mirror.getId(element) : undefined,\n    },\n  };\n\n  return data;\n}\n","import { addLcpInstrumentationHandler, addPerformanceInstrumentationHandler } from '@sentry-internal/tracing';\n\nimport type { ReplayContainer } from '../types';\nimport { getLargestContentfulPaint } from '../util/createPerformanceEntries';\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n * Returns a callback to stop observing.\n */\nexport function setupPerformanceObserver(replay: ReplayContainer): () => void {\n  function addPerformanceEntry(entry: PerformanceEntry): void {\n    // It is possible for entries to come up multiple times\n    if (!replay.performanceEntries.includes(entry)) {\n      replay.performanceEntries.push(entry);\n    }\n  }\n\n  function onEntries({ entries }: { entries: PerformanceEntry[] }): void {\n    entries.forEach(addPerformanceEntry);\n  }\n\n  const clearCallbacks: (() => void)[] = [];\n\n  (['navigation', 'paint', 'resource'] as const).forEach(type => {\n    clearCallbacks.push(addPerformanceInstrumentationHandler(type, onEntries));\n  });\n\n  clearCallbacks.push(\n    addLcpInstrumentationHandler(({ metric }) => {\n      replay.replayPerformanceEntries.push(getLargestContentfulPaint(metric));\n    }),\n  );\n\n  // A callback to cleanup all handlers\n  return () => {\n    clearCallbacks.forEach(clearCallback => clearCallback());\n  };\n}\n","export default `var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==r||r<0)&&(r=0),(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},A=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},_=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=x(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},x=function(t,n,r){return-1==t.s?Math.max(x(t.l,n,r+1),x(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},C=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=_(f,15),M=b.t,E=b.l,x=_(h,15),C=x.t,U=x.l,F=D(M),I=F.c,S=F.n,L=D(C),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=_(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,C)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(C,U,0),R=C;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){A(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;A(r,m,Q[et]),m+=R[et],et>3&&(A(r,m,rt>>5&8191),m+=i[et])}else A(r,m,N[rt]),m+=P[rt]}return A(r,m,N[256]),m+P[256]},U=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},L=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=U[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,A=c.p||new n(32768),_=c.h||new n(z+1),x=Math.ceil(o/3),D=2*x,T=function(t){return(a[t]^a[t+1]<<x^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=_[H];if(A[J]=K,_[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=C(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-A[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=A[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=C(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=_,c.p=A,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},O=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},j=function(){function n(n,r){if(\"function\"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(L(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();function q(t,n){n||(n={});var r=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}}(),e=t.length;r.p(t);var i,a=L(t,n,10+((i=n).filename?i.filename.length+1:0),8),s=a.length;return function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&O(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}}(a,n),O(a,s-8,r.d()),O(a,s-4,e),a}var B=function(){function t(t,n){this.c=S(),this.v=1,j.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),j.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=L(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=S();i.p(n.dictionary),O(t,2,i.d())}}(r,this.o),this.v=0),n&&O(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),G=\"undefined\"!=typeof TextEncoder&&new TextEncoder,H=\"undefined\"!=typeof TextDecoder&&new TextDecoder;try{H.decode(F,{stream:!0})}catch(t){}var J=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(K(t),this.d=n||!1)},t}();function K(n,r){if(r){for(var e=new t(n.length),i=0;i<n.length;++i)e[i]=n.charCodeAt(i);return e}if(G)return G.encode(n);var a=n.length,s=new t(n.length+(n.length>>1)),o=0,f=function(t){s[o++]=t};for(i=0;i<a;++i){if(o+5>s.length){var h=new t(o+8+(a-i<<1));h.set(s),s=h}var l=n.charCodeAt(i);l<128||r?f(l):l<2048?(f(192|l>>6),f(128|63&l)):l>55295&&l<57344?(f(240|(l=65536+(1047552&l)|1023&n.charCodeAt(++i))>>18),f(128|l>>12&63),f(128|l>>6&63),f(128|63&l)):(f(224|l>>12),f(128|l>>6&63),f(128|63&l))}return b(s,0,o)}const N=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const n=this._hasEvents?\",\":\"\";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push(\"]\",!0);const t=function(t){let n=0;for(let r=0,e=t.length;r<e;r++)n+=t[r].length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new B,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new J(((t,n)=>{this.deflate.push(t,n)})),this.stream.push(\"[\")}},P={clear:()=>{N.clear()},addEvent:t=>N.addEvent(t),finish:()=>N.finish(),compress:t=>function(t){return q(K(t))}(t)};addEventListener(\"message\",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in P&&\"function\"==typeof P[n])try{const t=P[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n","import { addBreadcrumb } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\n/**\n * Log a message in debug mode, and add a breadcrumb when _experiment.traceInternals is enabled.\n */\nexport function logInfo(message: string, shouldAddBreadcrumb?: boolean): void {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    addLogBreadcrumb(message);\n  }\n}\n\n/**\n * Log a message, and add a breadcrumb in the next tick.\n * This is necessary when the breadcrumb may be added before the replay is initialized.\n */\nexport function logInfoNextTick(message: string, shouldAddBreadcrumb?: boolean): void {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    // Wait a tick here to avoid race conditions for some initial logs\n    // which may be added before replay is initialized\n    setTimeout(() => {\n      addLogBreadcrumb(message);\n    }, 0);\n  }\n}\n\nfunction addLogBreadcrumb(message: string): void {\n  addBreadcrumb(\n    {\n      category: 'console',\n      data: {\n        logger: 'replay',\n      },\n      level: 'info',\n      message,\n    },\n    { level: 'info' },\n  );\n}\n","import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\n\n/** This error indicates that the event buffer size exceeded the limit.. */\nexport class EventBufferSizeExceededError extends Error {\n  public constructor() {\n    super(`Event buffer exceeded maximum size of ${REPLAY_MAX_EVENT_BUFFER_SIZE}.`);\n  }\n}\n","import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { timestampToMs } from '../util/timestamp';\nimport { EventBufferSizeExceededError } from './error';\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nexport class EventBufferArray implements EventBuffer {\n  /** All the events that are buffered to be sent. */\n  public events: RecordingEvent[];\n\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  private _totalSize: number;\n\n  public constructor() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'sync';\n  }\n\n  /** @inheritdoc */\n  public destroy(): void {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n  public async addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const eventSize = JSON.stringify(event).length;\n    this._totalSize += eventSize;\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      throw new EventBufferSizeExceededError();\n    }\n\n    this.events.push(event);\n  }\n\n  /** @inheritdoc */\n  public finish(): Promise<string> {\n    return new Promise<string>(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.clear();\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    const timestamp = this.events.map(event => event.timestamp).sort()[0];\n\n    if (!timestamp) {\n      return null;\n    }\n\n    return timestampToMs(timestamp);\n  }\n}\n","import { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { WorkerRequest, WorkerResponse } from '../types';\nimport { logInfo } from '../util/log';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class WorkerHandler {\n  private _worker: Worker;\n  private _id: number;\n  private _ensureReadyPromise?: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  public ensureReady(): Promise<void> {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener(\n        'message',\n        ({ data }: MessageEvent) => {\n          if ((data as WorkerResponse).success) {\n            resolve();\n          } else {\n            reject();\n          }\n        },\n        { once: true },\n      );\n\n      this._worker.addEventListener(\n        'error',\n        error => {\n          reject(error);\n        },\n        { once: true },\n      );\n    });\n\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n  public destroy(): void {\n    logInfo('[Replay] Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n  public postMessage<T>(method: WorkerRequest['method'], arg?: WorkerRequest['arg']): Promise<T> {\n    const id = this._getAndIncrementId();\n\n    return new Promise((resolve, reject) => {\n      const listener = ({ data }: MessageEvent): void => {\n        const response = data as WorkerResponse;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          DEBUG_BUILD && logger.error('[Replay]', response.response);\n\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n\n        resolve(response.response as T);\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({ id, method, arg });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n  private _getAndIncrementId(): number {\n    return this._id++;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/types';\n\nimport { logger } from '@sentry/utils';\nimport { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { timestampToMs } from '../util/timestamp';\nimport { WorkerHandler } from './WorkerHandler';\nimport { EventBufferSizeExceededError } from './error';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class EventBufferCompressionWorker implements EventBuffer {\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  private _worker: WorkerHandler;\n  private _earliestTimestamp: number | null;\n  private _totalSize;\n\n  public constructor(worker: Worker) {\n    this._worker = new WorkerHandler(worker);\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return !!this._earliestTimestamp;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'worker';\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  public ensureReady(): Promise<void> {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n  public destroy(): void {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfuly received and processed by worker.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const timestamp = timestampToMs(event.timestamp);\n    if (!this._earliestTimestamp || timestamp < this._earliestTimestamp) {\n      this._earliestTimestamp = timestamp;\n    }\n\n    const data = JSON.stringify(event);\n    this._totalSize += data.length;\n\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      return Promise.reject(new EventBufferSizeExceededError());\n    }\n\n    return this._sendEventToWorker(data);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n  public finish(): Promise<ReplayRecordingData> {\n    return this._finishRequest();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n\n    // We do not wait on this, as we assume the order of messages is consistent for the worker\n    this._worker.postMessage('clear').then(null, e => {\n      DEBUG_BUILD && logger.warn('[Replay] Sending \"clear\" message to worker failed', e);\n    });\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._earliestTimestamp;\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n  private _sendEventToWorker(data: string): Promise<AddEventResult> {\n    return this._worker.postMessage<void>('addEvent', data);\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n  private async _finishRequest(): Promise<Uint8Array> {\n    const response = await this._worker.postMessage<Uint8Array>('finish');\n\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n\n    return response;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { logInfo } from '../util/log';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferCompressionWorker } from './EventBufferCompressionWorker';\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nexport class EventBufferProxy implements EventBuffer {\n  private _fallback: EventBufferArray;\n  private _compression: EventBufferCompressionWorker;\n  private _used: EventBuffer;\n  private _ensureWorkerIsLoadedPromise: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return this._used.type;\n  }\n\n  /** @inheritDoc */\n  public get hasEvents(): boolean {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritdoc */\n  public get hasCheckout(): boolean {\n    return this._used.hasCheckout;\n  }\n  /** @inheritdoc */\n  public set hasCheckout(value: boolean) {\n    this._used.hasCheckout = value;\n  }\n\n  /** @inheritDoc */\n  public destroy(): void {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    return this._used.clear();\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._used.getEarliestTimestamp();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    return this._used.addEvent(event);\n  }\n\n  /** @inheritDoc */\n  public async finish(): Promise<ReplayRecordingData> {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n  public ensureWorkerIsLoaded(): Promise<void> {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n  private async _ensureWorkerIsLoaded(): Promise<void> {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      logInfo('[Replay] Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n  private async _switchToCompressionWorker(): Promise<void> {\n    const { events, hasCheckout } = this._fallback;\n\n    const addEventPromises: Promise<void>[] = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    this._compression.hasCheckout = hasCheckout;\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n    } catch (error) {\n      DEBUG_BUILD && logger.warn('[Replay] Failed to add events when switching buffers.', error);\n    }\n  }\n}\n","import { getWorkerURL } from '@sentry-internal/replay-worker';\n\nimport type { EventBuffer } from '../types';\nimport { logInfo } from '../util/log';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferProxy } from './EventBufferProxy';\n\ninterface CreateEventBufferParams {\n  useCompression: boolean;\n  workerUrl?: string;\n}\n\n// Treeshakable guard to remove the code of the included compression worker\ndeclare const __SENTRY_EXCLUDE_REPLAY_WORKER__: boolean;\n\n/**\n * Create an event buffer for replays.\n */\nexport function createEventBuffer({\n  useCompression,\n  workerUrl: customWorkerUrl,\n}: CreateEventBufferParams): EventBuffer {\n  if (\n    useCompression &&\n    // eslint-disable-next-line no-restricted-globals\n    window.Worker\n  ) {\n    const worker = _loadWorker(customWorkerUrl);\n\n    if (worker) {\n      return worker;\n    }\n  }\n\n  logInfo('[Replay] Using simple buffer');\n  return new EventBufferArray();\n}\n\nfunction _loadWorker(customWorkerUrl?: string): EventBufferProxy | void {\n  try {\n    const workerUrl = customWorkerUrl || _getWorkerUrl();\n\n    if (!workerUrl) {\n      return;\n    }\n\n    logInfo(`[Replay] Using compression worker${customWorkerUrl ? ` from ${customWorkerUrl}` : ''}`);\n    const worker = new Worker(workerUrl);\n    return new EventBufferProxy(worker);\n  } catch (error) {\n    logInfo('[Replay] Failed to create compression worker');\n    // Fall back to use simple event buffer array\n  }\n}\n\nfunction _getWorkerUrl(): string {\n  if (typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ === 'undefined' || !__SENTRY_EXCLUDE_REPLAY_WORKER__) {\n    return getWorkerURL();\n  }\n\n  return '';\n}\n","import r from\"./worker\";function e(){const e=new Blob([r]);return URL.createObjectURL(e)}export{e as getWorkerURL};\n","import { WINDOW } from '../constants';\n\n/** If sessionStorage is available. */\nexport function hasSessionStorage(): boolean {\n  try {\n    // This can throw, e.g. when being accessed in a sandboxed iframe\n    return 'sessionStorage' in WINDOW && !!WINDOW.sessionStorage;\n  } catch {\n    return false;\n  }\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../../src/constants';\nimport type { ReplayContainer } from '../../src/types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Removes the session from Session Storage and unsets session in replay instance\n */\nexport function clearSession(replay: ReplayContainer): void {\n  deleteSession();\n  replay.session = undefined;\n}\n\n/**\n * Deletes a session from storage\n */\nfunction deleteSession(): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.removeItem(REPLAY_SESSION_KEY);\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n","/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nexport function isSampled(sampleRate?: number): boolean {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n","import { uuid4 } from '@sentry/utils';\n\nimport type { Sampled, Session } from '../types';\n\n/**\n * Get a session with defaults & applied sampling.\n */\nexport function makeSession(session: Partial<Session> & { sampled: Sampled }): Session {\n  const now = Date.now();\n  const id = session.id || uuid4();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n  const previousSessionId = session.previousSessionId;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n    previousSessionId,\n  };\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Save a session to session storage.\n */\nexport function saveSession(session: Session): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n","import type { Sampled, Session, SessionOptions } from '../types';\nimport { isSampled } from '../util/isSampled';\nimport { makeSession } from './Session';\nimport { saveSession } from './saveSession';\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nexport function getSessionSampleType(sessionSampleRate: number, allowBuffering: boolean): Sampled {\n  return isSampled(sessionSampleRate) ? 'session' : allowBuffering ? 'buffer' : false;\n}\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nexport function createSession(\n  { sessionSampleRate, allowBuffering, stickySession = false }: SessionOptions,\n  { previousSessionId }: { previousSessionId?: string } = {},\n): Session {\n  const sampled = getSessionSampleType(sessionSampleRate, allowBuffering);\n  const session = makeSession({\n    sampled,\n    previousSessionId,\n  });\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n","/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nexport function isExpired(\n  initialTime: null | number,\n  expiry: undefined | number,\n  targetTime: number = +new Date(),\n): boolean {\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n\n  return initialTime + expiry <= targetTime;\n}\n","import type { Session } from '../types';\nimport { isExpired } from './isExpired';\n\n/**\n * Checks to see if session is expired\n */\nexport function isSessionExpired(\n  session: Session,\n  {\n    maxReplayDuration,\n    sessionIdleExpire,\n    targetTime = Date.now(),\n  }: { maxReplayDuration: number; sessionIdleExpire: number; targetTime?: number },\n): boolean {\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, maxReplayDuration, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `sessionIdleExpire` ms)\n    isExpired(session.lastActivity, sessionIdleExpire, targetTime)\n  );\n}\n","import type { Session } from '../types';\nimport { isSessionExpired } from '../util/isSessionExpired';\n\n/** If the session should be refreshed or not. */\nexport function shouldRefreshSession(\n  session: Session,\n  { sessionIdleExpire, maxReplayDuration }: { sessionIdleExpire: number; maxReplayDuration: number },\n): boolean {\n  // If not expired, all good, just keep the session\n  if (!isSessionExpired(session, { sessionIdleExpire, maxReplayDuration })) {\n    return false;\n  }\n\n  // If we are buffering & haven't ever flushed yet, always continue\n  if (session.sampled === 'buffer' && session.segmentId === 0) {\n    return false;\n  }\n\n  return true;\n}\n","import type { Session, SessionOptions } from '../types';\nimport { logInfoNextTick } from '../util/log';\nimport { createSession } from './createSession';\nimport { fetchSession } from './fetchSession';\nimport { shouldRefreshSession } from './shouldRefreshSession';\n\n/**\n * Get or create a session, when initializing the replay.\n * Returns a session that may be unsampled.\n */\nexport function loadOrCreateSession(\n  {\n    traceInternals,\n    sessionIdleExpire,\n    maxReplayDuration,\n    previousSessionId,\n  }: {\n    sessionIdleExpire: number;\n    maxReplayDuration: number;\n    traceInternals?: boolean;\n    previousSessionId?: string;\n  },\n  sessionOptions: SessionOptions,\n): Session {\n  const existingSession = sessionOptions.stickySession && fetchSession(traceInternals);\n\n  // No session exists yet, just create a new one\n  if (!existingSession) {\n    logInfoNextTick('[Replay] Creating new session', traceInternals);\n    return createSession(sessionOptions, { previousSessionId });\n  }\n\n  if (!shouldRefreshSession(existingSession, { sessionIdleExpire, maxReplayDuration })) {\n    return existingSession;\n  }\n\n  logInfoNextTick('[Replay] Session in sessionStorage is expired, creating new one...');\n  return createSession(sessionOptions, { previousSessionId: existingSession.id });\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\nimport { logInfoNextTick } from '../util/log';\nimport { makeSession } from './Session';\n\n/**\n * Fetches a session from storage\n */\nexport function fetchSession(traceInternals?: boolean): Session | null {\n  if (!hasSessionStorage()) {\n    return null;\n  }\n\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n\n    const sessionObj = JSON.parse(sessionStringFromStorage) as Session;\n\n    logInfoNextTick('[Replay] Loading existing session', traceInternals);\n\n    return makeSession(sessionObj);\n  } catch {\n    return null;\n  }\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport { getClient } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { EventBufferSizeExceededError } from '../eventBuffer/error';\nimport type { AddEventResult, RecordingEvent, ReplayContainer, ReplayFrameEvent, ReplayPluginOptions } from '../types';\nimport { logInfo } from './log';\nimport { timestampToMs } from './timestamp';\n\nfunction isCustomEvent(event: RecordingEvent): event is ReplayFrameEvent {\n  return event.type === EventType.Custom;\n}\n\n/**\n * Add an event to the event buffer.\n * In contrast to `addEvent`, this does not return a promise & does not wait for the adding of the event to succeed/fail.\n * Instead this returns `true` if we tried to add the event, else false.\n * It returns `false` e.g. if we are paused, disabled, or out of the max replay duration.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEventSync(replay: ReplayContainer, event: RecordingEvent, isCheckout?: boolean): boolean {\n  if (!shouldAddEvent(replay, event)) {\n    return false;\n  }\n\n  // This should never reject\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  _addEvent(replay, event, isCheckout);\n\n  return true;\n}\n\n/**\n * Add an event to the event buffer.\n * Resolves to `null` if no event was added, else to `void`.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  if (!shouldAddEvent(replay, event)) {\n    return Promise.resolve(null);\n  }\n\n  return _addEvent(replay, event, isCheckout);\n}\n\nasync function _addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  if (!replay.eventBuffer) {\n    return null;\n  }\n\n  try {\n    if (isCheckout && replay.recordingMode === 'buffer') {\n      replay.eventBuffer.clear();\n    }\n\n    if (isCheckout) {\n      replay.eventBuffer.hasCheckout = true;\n    }\n\n    const replayOptions = replay.getOptions();\n\n    const eventAfterPossibleCallback = maybeApplyCallback(event, replayOptions.beforeAddRecordingEvent);\n\n    if (!eventAfterPossibleCallback) {\n      return;\n    }\n\n    return await replay.eventBuffer.addEvent(eventAfterPossibleCallback);\n  } catch (error) {\n    const reason = error && error instanceof EventBufferSizeExceededError ? 'addEventSizeExceeded' : 'addEvent';\n\n    DEBUG_BUILD && logger.error(error);\n    await replay.stop({ reason });\n\n    const client = getClient();\n\n    if (client) {\n      client.recordDroppedEvent('internal_sdk_error', 'replay');\n    }\n  }\n}\n\n/** Exported only for tests. */\nexport function shouldAddEvent(replay: ReplayContainer, event: RecordingEvent): boolean {\n  if (!replay.eventBuffer || replay.isPaused() || !replay.isEnabled()) {\n    return false;\n  }\n\n  const timestampInMs = timestampToMs(event.timestamp);\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + replay.timeouts.sessionIdlePause < Date.now()) {\n    return false;\n  }\n\n  // Throw out events that are +60min from the initial timestamp\n  if (timestampInMs > replay.getContext().initialTimestamp + replay.getOptions().maxReplayDuration) {\n    logInfo(\n      `[Replay] Skipping event with timestamp ${timestampInMs} because it is after maxReplayDuration`,\n      replay.getOptions()._experiments.traceInternals,\n    );\n    return false;\n  }\n\n  return true;\n}\n\nfunction maybeApplyCallback(\n  event: RecordingEvent,\n  callback: ReplayPluginOptions['beforeAddRecordingEvent'],\n): RecordingEvent | null | undefined {\n  try {\n    if (typeof callback === 'function' && isCustomEvent(event)) {\n      return callback(event);\n    }\n  } catch (error) {\n    DEBUG_BUILD &&\n      logger.error('[Replay] An error occured in the `beforeAddRecordingEvent` callback, skipping the event...', error);\n    return null;\n  }\n\n  return event;\n}\n","import type { ErrorEvent, Event, FeedbackEvent, ReplayEvent, TransactionEvent } from '@sentry/types';\n\n/** If the event is an error event */\nexport function isErrorEvent(event: Event): event is ErrorEvent {\n  return !event.type;\n}\n\n/** If the event is a transaction event */\nexport function isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/** If the event is an replay event */\nexport function isReplayEvent(event: Event): event is ReplayEvent {\n  return event.type === 'replay_event';\n}\n\n/** If the event is a feedback event */\nexport function isFeedbackEvent(event: Event): event is FeedbackEvent {\n  return event.type === 'feedback';\n}\n","import { getClient } from '@sentry/core';\nimport type { ErrorEvent, Event, TransactionEvent, Transport, TransportMakeRequestResponse } from '@sentry/types';\n\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isTransactionEvent } from '../util/eventUtils';\n\ntype AfterSendEventCallback = (event: Event, sendResponse: TransportMakeRequestResponse | void) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleAfterSendEvent(replay: ReplayContainer): AfterSendEventCallback {\n  // Custom transports may still be returning `Promise<void>`, which means we cannot expect the status code to be available there\n  // TODO (v8): remove this check as it will no longer be necessary\n  const enforceStatusCode = isBaseTransportSend();\n\n  return (event: Event, sendResponse: TransportMakeRequestResponse | void) => {\n    if (!replay.isEnabled() || (!isErrorEvent(event) && !isTransactionEvent(event))) {\n      return;\n    }\n\n    const statusCode = sendResponse && sendResponse.statusCode;\n\n    // We only want to do stuff on successful error sending, otherwise you get error replays without errors attached\n    // If not using the base transport, we allow `undefined` response (as a custom transport may not implement this correctly yet)\n    // If we do use the base transport, we skip if we encountered an non-OK status code\n    if (enforceStatusCode && (!statusCode || statusCode < 200 || statusCode >= 300)) {\n      return;\n    }\n\n    if (isTransactionEvent(event)) {\n      handleTransactionEvent(replay, event);\n      return;\n    }\n\n    handleErrorEvent(replay, event);\n  };\n}\n\nfunction handleTransactionEvent(replay: ReplayContainer, event: TransactionEvent): void {\n  const replayContext = replay.getContext();\n\n  // Collect traceIds in _context regardless of `recordingMode`\n  // In error mode, _context gets cleared on every checkout\n  // We limit to max. 100 transactions linked\n  if (event.contexts && event.contexts.trace && event.contexts.trace.trace_id && replayContext.traceIds.size < 100) {\n    replayContext.traceIds.add(event.contexts.trace.trace_id as string);\n  }\n}\n\nfunction handleErrorEvent(replay: ReplayContainer, event: ErrorEvent): void {\n  const replayContext = replay.getContext();\n\n  // Add error to list of errorIds of replay. This is ok to do even if not\n  // sampled because context will get reset at next checkout.\n  // XXX: There is also a race condition where it's possible to capture an\n  // error to Sentry before Replay SDK has loaded, but response returns after\n  // it was loaded, and this gets called.\n  // We limit to max. 100 errors linked\n  if (event.event_id && replayContext.errorIds.size < 100) {\n    replayContext.errorIds.add(event.event_id);\n  }\n\n  // If error event is tagged with replay id it means it was sampled (when in buffer mode)\n  // Need to be very careful that this does not cause an infinite loop\n  if (replay.recordingMode !== 'buffer' || !event.tags || !event.tags.replayId) {\n    return;\n  }\n\n  const { beforeErrorSampling } = replay.getOptions();\n  if (typeof beforeErrorSampling === 'function' && !beforeErrorSampling(event)) {\n    return;\n  }\n\n  setTimeout(() => {\n    // Capture current event buffer as new replay\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.sendBufferedReplayOrFlush();\n  });\n}\n\nfunction isBaseTransportSend(): boolean {\n  const client = getClient();\n  if (!client) {\n    return false;\n  }\n\n  const transport = client.getTransport();\n  if (!transport) {\n    return false;\n  }\n\n  return (\n    (transport.send as Transport['send'] & { __sentry__baseTransport__?: true }).__sentry__baseTransport__ || false\n  );\n}\n","import type { ErrorEvent, Event } from '@sentry/types';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { isErrorEvent } from '../util/eventUtils';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\ntype BeforeSendEventCallback = (event: Event) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleBeforeSendEvent(replay: ReplayContainer): BeforeSendEventCallback {\n  return (event: Event) => {\n    if (!replay.isEnabled() || !isErrorEvent(event)) {\n      return;\n    }\n\n    handleHydrationError(replay, event);\n  };\n}\n\nfunction handleHydrationError(replay: ReplayContainer, event: ErrorEvent): void {\n  const exceptionValue = event.exception && event.exception.values && event.exception.values[0].value;\n  if (typeof exceptionValue !== 'string') {\n    return;\n  }\n\n  if (\n    // Only matches errors in production builds of react-dom\n    // Example https://reactjs.org/docs/error-decoder.html?invariant=423\n    exceptionValue.match(/reactjs\\.org\\/docs\\/error-decoder\\.html\\?invariant=(418|419|422|423|425)/) ||\n    // Development builds of react-dom\n    // Error 1: Hydration failed because the initial UI does not match what was rendered on the server.\n    // Error 2: Text content does not match server-rendered HTML. Warning: Text content did not match.\n    exceptionValue.match(/(does not match server-rendered HTML|Hydration failed because)/i)\n  ) {\n    const breadcrumb = createBreadcrumb({\n      category: 'replay.hydrate-error',\n    });\n    addBreadcrumbEvent(replay, breadcrumb);\n  }\n}\n","import type { Event, EventHint } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isFeedbackEvent, isReplayEvent, isTransactionEvent } from '../util/eventUtils';\nimport { isRrwebError } from '../util/isRrwebError';\nimport { handleAfterSendEvent } from './handleAfterSendEvent';\nimport { addFeedbackBreadcrumb } from './util/addFeedbackBreadcrumb';\nimport { shouldSampleForBufferEvent } from './util/shouldSampleForBufferEvent';\n\n/**\n * Returns a listener to be added to `addEventProcessor(listener)`.\n */\nexport function handleGlobalEventListener(\n  replay: ReplayContainer,\n  includeAfterSendEventHandling = false,\n): (event: Event, hint: EventHint) => Event | null {\n  const afterSendHandler = includeAfterSendEventHandling ? handleAfterSendEvent(replay) : undefined;\n\n  return Object.assign(\n    (event: Event, hint: EventHint) => {\n      // Do nothing if replay has been disabled\n      if (!replay.isEnabled()) {\n        return event;\n      }\n\n      if (isReplayEvent(event)) {\n        // Replays have separate set of breadcrumbs, do not include breadcrumbs\n        // from core SDK\n        delete event.breadcrumbs;\n        return event;\n      }\n\n      // We only want to handle errors, transactions, and feedbacks, nothing else\n      if (!isErrorEvent(event) && !isTransactionEvent(event) && !isFeedbackEvent(event)) {\n        return event;\n      }\n\n      // Ensure we do not add replay_id if the session is expired\n      const isSessionActive = replay.checkAndHandleExpiredSession();\n      if (!isSessionActive) {\n        return event;\n      }\n\n      if (isFeedbackEvent(event)) {\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        replay.flush();\n        event.contexts.feedback.replay_id = replay.getSessionId();\n        // Add a replay breadcrumb for this piece of feedback\n        addFeedbackBreadcrumb(replay, event);\n        return event;\n      }\n\n      // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n      // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n      if (isRrwebError(event, hint) && !replay.getOptions()._experiments.captureExceptions) {\n        DEBUG_BUILD && logger.log('[Replay] Ignoring error from rrweb internals', event);\n        return null;\n      }\n\n      // When in buffer mode, we decide to sample here.\n      // Later, in `handleAfterSendEvent`, if the replayId is set, we know that we sampled\n      // And convert the buffer session to a full session\n      const isErrorEventSampled = shouldSampleForBufferEvent(replay, event);\n\n      // Tag errors if it has been sampled in buffer mode, or if it is session mode\n      // Only tag transactions if in session mode\n      const shouldTagReplayId = isErrorEventSampled || replay.recordingMode === 'session';\n\n      if (shouldTagReplayId) {\n        event.tags = { ...event.tags, replayId: replay.getSessionId() };\n      }\n\n      // In cases where a custom client is used that does not support the new hooks (yet),\n      // we manually call this hook method here\n      if (afterSendHandler) {\n        // Pretend the error had a 200 response so we always capture it\n        afterSendHandler(event, { statusCode: 200 });\n      }\n\n      return event;\n    },\n    { id: 'Replay' },\n  );\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport type { FeedbackEvent } from '@sentry/types';\n\nimport type { ReplayBreadcrumbFrameEvent, ReplayContainer } from '../../types';\n\n/**\n * Add a feedback breadcrumb event to replay.\n */\nexport function addFeedbackBreadcrumb(replay: ReplayContainer, event: FeedbackEvent): void {\n  replay.triggerUserActivity();\n  replay.addUpdate(() => {\n    if (!event.timestamp) {\n      // Ignore events that don't have timestamps (this shouldn't happen, more of a typing issue)\n      // Return true here so that we don't flush\n      return true;\n    }\n\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: event.timestamp * 1000,\n      data: {\n        tag: 'breadcrumb',\n        payload: {\n          timestamp: event.timestamp,\n          type: 'default',\n          category: 'sentry.feedback',\n          data: {\n            feedbackId: event.event_id,\n          },\n        },\n      },\n    } as ReplayBreadcrumbFrameEvent);\n\n    return false;\n  });\n}\n","import type { Event, EventHint } from '@sentry/types';\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nexport function isRrwebError(event: Event, hint: EventHint): boolean {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // @ts-expect-error this may be set by rrweb when it finds errors\n  if (hint.originalException && hint.originalException.__rrweb__) {\n    return true;\n  }\n\n  return false;\n}\n","import type { Event } from '@sentry/types';\n\nimport { UNABLE_TO_SEND_REPLAY } from '../../constants';\nimport type { ReplayContainer } from '../../types';\nimport { isSampled } from '../../util/isSampled';\n\n/**\n * Determine if event should be sampled (only applies in buffer mode).\n * When an event is captured by `hanldleGlobalEvent`, when in buffer mode\n * we determine if we want to sample the error or not.\n */\nexport function shouldSampleForBufferEvent(replay: ReplayContainer, event: Event): boolean {\n  if (replay.recordingMode !== 'buffer') {\n    return false;\n  }\n\n  // ignore this error because otherwise we could loop indefinitely with\n  // trying to capture replay and failing\n  if (event.message === UNABLE_TO_SEND_REPLAY) {\n    return false;\n  }\n\n  // Require the event to be an error event & to have an exception\n  if (!event.exception || event.type) {\n    return false;\n  }\n\n  return isSampled(replay.getOptions().errorSampleRate);\n}\n","import { EventType } from '@sentry-internal/rrweb';\n\nimport type { AddEventResult, AllEntryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\n\n/**\n * Create a \"span\" for each performance entry.\n */\nexport function createPerformanceSpans(\n  replay: ReplayContainer,\n  entries: ReplayPerformanceEntry<AllEntryData>[],\n): Promise<AddEventResult | null>[] {\n  return entries.map(({ type, start, end, name, data }) => {\n    const response = replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data,\n        },\n      },\n    });\n\n    // If response is a string, it means its either THROTTLED or SKIPPED\n    return typeof response === 'string' ? Promise.resolve(null) : response;\n  });\n}\n","import type { HandlerDataHistory } from '@sentry/types';\n\nimport type { HistoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from '../util/createPerformanceSpans';\n\nfunction handleHistory(handlerData: HandlerDataHistory): ReplayPerformanceEntry<HistoryData> {\n  const { from, to } = handlerData;\n\n  const now = Date.now() / 1000;\n\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addHistoryInstrumentationHandler(listener)`.\n */\nexport function handleHistorySpanListener(replay: ReplayContainer): (handlerData: HandlerDataHistory) => void {\n  return (handlerData: HandlerDataHistory) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleHistory(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\n","import type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../../types';\nimport { createPerformanceSpans } from '../../util/createPerformanceSpans';\nimport { shouldFilterRequest } from '../../util/shouldFilterRequest';\n\n/** Add a performance entry breadcrumb */\nexport function addNetworkBreadcrumb(\n  replay: ReplayContainer,\n  result: ReplayPerformanceEntry<NetworkRequestData> | null,\n): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  if (result === null) {\n    return;\n  }\n\n  if (shouldFilterRequest(replay, result.name)) {\n    return;\n  }\n\n  replay.addUpdate(() => {\n    createPerformanceSpans(replay, [result]);\n    // Returning true will cause `addUpdate` to not flush\n    // We do not want network requests to cause a flush. This will prevent\n    // recurring/polling requests from keeping the replay session alive.\n    return true;\n  });\n}\n","import { getClient, isSentryRequestUrl } from '@sentry/core';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Check whether a given request URL should be filtered out. This is so we\n * don't log Sentry ingest requests.\n */\nexport function shouldFilterRequest(replay: ReplayContainer, url: string): boolean {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if (DEBUG_BUILD && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n\n  return isSentryRequestUrl(url, getClient());\n}\n","import type { HandlerDataXhr } from '@sentry/types';\nimport { SENTRY_XHR_DATA_KEY } from '@sentry/utils';\n\nimport type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { addNetworkBreadcrumb } from './util/addNetworkBreadcrumb';\n\n/** only exported for tests */\nexport function handleXhr(handlerData: HandlerDataXhr): ReplayPerformanceEntry<NetworkRequestData> | null {\n  const { startTimestamp, endTimestamp, xhr } = handlerData;\n\n  const sentryXhrData = xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url, status_code: statusCode } = sentryXhrData;\n\n  if (url === undefined) {\n    return null;\n  }\n\n  return {\n    type: 'resource.xhr',\n    name: url,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    data: {\n      method,\n      statusCode,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addXhrInstrumentationHandler(listener)`.\n */\nexport function handleXhrSpanListener(replay: ReplayContainer): (handlerData: HandlerDataXhr) => void {\n  return (handlerData: HandlerDataXhr) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleXhr(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n","import type { TextEncoderInternal } from '@sentry/types';\nimport { dropUndefinedKeys, logger, stringMatchesSomePattern } from '@sentry/utils';\n\nimport { NETWORK_BODY_MAX_SIZE, WINDOW } from '../../constants';\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  NetworkBody,\n  NetworkMetaWarning,\n  NetworkRequestData,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n  ReplayPerformanceEntry,\n} from '../../types';\n\n/** Get the size of a body. */\nexport function getBodySize(\n  body: RequestInit['body'],\n  textEncoder: TextEncoder | TextEncoderInternal,\n): number | undefined {\n  if (!body) {\n    return undefined;\n  }\n\n  try {\n    if (typeof body === 'string') {\n      return textEncoder.encode(body).length;\n    }\n\n    if (body instanceof URLSearchParams) {\n      return textEncoder.encode(body.toString()).length;\n    }\n\n    if (body instanceof FormData) {\n      const formDataStr = _serializeFormData(body);\n      return textEncoder.encode(formDataStr).length;\n    }\n\n    if (body instanceof Blob) {\n      return body.size;\n    }\n\n    if (body instanceof ArrayBuffer) {\n      return body.byteLength;\n    }\n\n    // Currently unhandled types: ArrayBufferView, ReadableStream\n  } catch {\n    // just return undefined\n  }\n\n  return undefined;\n}\n\n/** Convert a Content-Length header to number/undefined.  */\nexport function parseContentLengthHeader(header: string | null | undefined): number | undefined {\n  if (!header) {\n    return undefined;\n  }\n\n  const size = parseInt(header, 10);\n  return isNaN(size) ? undefined : size;\n}\n\n/** Get the string representation of a body. */\nexport function getBodyString(body: unknown): [string | undefined, NetworkMetaWarning?] {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof URLSearchParams) {\n      return [body.toString()];\n    }\n\n    if (body instanceof FormData) {\n      return [_serializeFormData(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\n/** Merge a warning into an existing network request/response. */\nexport function mergeWarning(\n  info: ReplayNetworkRequestOrResponse | undefined,\n  warning: NetworkMetaWarning,\n): ReplayNetworkRequestOrResponse {\n  if (!info) {\n    return {\n      headers: {},\n      size: undefined,\n      _meta: {\n        warnings: [warning],\n      },\n    };\n  }\n\n  const newMeta = { ...info._meta };\n  const existingWarnings = newMeta.warnings || [];\n  newMeta.warnings = [...existingWarnings, warning];\n\n  info._meta = newMeta;\n  return info;\n}\n\n/** Convert ReplayNetworkRequestData to a PerformanceEntry. */\nexport function makeNetworkReplayBreadcrumb(\n  type: string,\n  data: ReplayNetworkRequestData | null,\n): ReplayPerformanceEntry<NetworkRequestData> | null {\n  if (!data) {\n    return null;\n  }\n\n  const { startTimestamp, endTimestamp, url, method, statusCode, request, response } = data;\n\n  const result: ReplayPerformanceEntry<NetworkRequestData> = {\n    type,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: dropUndefinedKeys({\n      method,\n      statusCode,\n      request,\n      response,\n    }),\n  };\n\n  return result;\n}\n\n/** Build the request or response part of a replay network breadcrumb that was skipped. */\nexport function buildSkippedNetworkRequestOrResponse(bodySize: number | undefined): ReplayNetworkRequestOrResponse {\n  return {\n    headers: {},\n    size: bodySize,\n    _meta: {\n      warnings: ['URL_SKIPPED'],\n    },\n  };\n}\n\n/** Build the request or response part of a replay network breadcrumb. */\nexport function buildNetworkRequestOrResponse(\n  headers: Record<string, string>,\n  bodySize: number | undefined,\n  body: string | undefined,\n): ReplayNetworkRequestOrResponse | undefined {\n  if (!bodySize && Object.keys(headers).length === 0) {\n    return undefined;\n  }\n\n  if (!bodySize) {\n    return {\n      headers,\n    };\n  }\n\n  if (!body) {\n    return {\n      headers,\n      size: bodySize,\n    };\n  }\n\n  const info: ReplayNetworkRequestOrResponse = {\n    headers,\n    size: bodySize,\n  };\n\n  const { body: normalizedBody, warnings } = normalizeNetworkBody(body);\n  info.body = normalizedBody;\n  if (warnings && warnings.length > 0) {\n    info._meta = {\n      warnings,\n    };\n  }\n\n  return info;\n}\n\n/** Filter a set of headers */\nexport function getAllowedHeaders(headers: Record<string, string>, allowedHeaders: string[]): Record<string, string> {\n  return Object.keys(headers).reduce((filteredHeaders: Record<string, string>, key: string) => {\n    const normalizedKey = key.toLowerCase();\n    // Avoid putting empty strings into the headers\n    if (allowedHeaders.includes(normalizedKey) && headers[key]) {\n      filteredHeaders[normalizedKey] = headers[key];\n    }\n    return filteredHeaders;\n  }, {});\n}\n\nfunction _serializeFormData(formData: FormData): string {\n  // This is a bit simplified, but gives us a decent estimate\n  // This converts e.g. { name: 'Anne Smith', age: 13 } to 'name=Anne+Smith&age=13'\n  // @ts-expect-error passing FormData to URLSearchParams actually works\n  return new URLSearchParams(formData).toString();\n}\n\nfunction normalizeNetworkBody(body: string | undefined): {\n  body: NetworkBody | undefined;\n  warnings?: NetworkMetaWarning[];\n} {\n  if (!body || typeof body !== 'string') {\n    return {\n      body,\n    };\n  }\n\n  const exceedsSizeLimit = body.length > NETWORK_BODY_MAX_SIZE;\n  const isProbablyJson = _strIsProbablyJson(body);\n\n  if (exceedsSizeLimit) {\n    const truncatedBody = body.slice(0, NETWORK_BODY_MAX_SIZE);\n\n    if (isProbablyJson) {\n      return {\n        body: truncatedBody,\n        warnings: ['MAYBE_JSON_TRUNCATED'],\n      };\n    }\n\n    return {\n      body: `${truncatedBody}…`,\n      warnings: ['TEXT_TRUNCATED'],\n    };\n  }\n\n  if (isProbablyJson) {\n    try {\n      const jsonBody = JSON.parse(body);\n      return {\n        body: jsonBody,\n      };\n    } catch {\n      // fall back to just send the body as string\n    }\n  }\n\n  return {\n    body,\n  };\n}\n\nfunction _strIsProbablyJson(str: string): boolean {\n  const first = str[0];\n  const last = str[str.length - 1];\n\n  // Simple check: If this does not start & end with {} or [], it's not JSON\n  return (first === '[' && last === ']') || (first === '{' && last === '}');\n}\n\n/** Match an URL against a list of strings/Regex. */\nexport function urlMatches(url: string, urls: (string | RegExp)[]): boolean {\n  const fullUrl = getFullUrl(url);\n\n  return stringMatchesSomePattern(fullUrl, urls);\n}\n\n/** exported for tests */\nexport function getFullUrl(url: string, baseURI = WINDOW.document.baseURI): string {\n  // Short circuit for common cases:\n  if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith(WINDOW.location.origin)) {\n    return url;\n  }\n  const fixedUrl = new URL(url, baseURI);\n\n  // If these do not match, we are not dealing with a relative URL, so just return it\n  if (fixedUrl.origin !== new URL(baseURI).origin) {\n    return url;\n  }\n\n  const fullUrl = fixedUrl.href;\n\n  // Remove trailing slashes, if they don't match the original URL\n  if (!url.endsWith('/') && fullUrl.endsWith('/')) {\n    return fullUrl.slice(0, -1);\n  }\n\n  return fullUrl;\n}\n","import type { Breadcrumb, FetchBreadcrumbData, TextEncoderInternal } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  FetchHint,\n  NetworkMetaWarning,\n  ReplayContainer,\n  ReplayNetworkOptions,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n} from '../../types';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  getBodyString,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture a fetch breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nexport async function captureFetchBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions & {\n    textEncoder: TextEncoderInternal;\n    replay: ReplayContainer;\n  },\n): Promise<void> {\n  try {\n    const data = await _prepareFetchData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.fetch', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture fetch breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichFetchBreadcrumb(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: { textEncoder: TextEncoderInternal },\n): void {\n  const { input, response } = hint;\n\n  const body = input ? _getFetchRequestArgBody(input) : undefined;\n  const reqSize = getBodySize(body, options.textEncoder);\n\n  const resSize = response ? parseContentLengthHeader(response.headers.get('content-length')) : undefined;\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nasync function _prepareFetchData(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions & {\n    textEncoder: TextEncoderInternal;\n  },\n): Promise<ReplayNetworkRequestData> {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  const captureDetails =\n    urlMatches(url, options.networkDetailAllowUrls) && !urlMatches(url, options.networkDetailDenyUrls);\n\n  const request = captureDetails\n    ? _getRequestInfo(options, hint.input, requestBodySize)\n    : buildSkippedNetworkRequestOrResponse(requestBodySize);\n  const response = await _getResponseInfo(captureDetails, options, hint.response, responseBodySize);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction _getRequestInfo(\n  { networkCaptureBodies, networkRequestHeaders }: ReplayNetworkOptions,\n  input: FetchHint['input'] | undefined,\n  requestBodySize?: number,\n): ReplayNetworkRequestOrResponse | undefined {\n  const headers = input ? getRequestHeaders(input, networkRequestHeaders) : {};\n\n  if (!networkCaptureBodies) {\n    return buildNetworkRequestOrResponse(headers, requestBodySize, undefined);\n  }\n\n  // We only want to transmit string or string-like bodies\n  const requestBody = _getFetchRequestArgBody(input);\n  const [bodyStr, warning] = getBodyString(requestBody);\n  const data = buildNetworkRequestOrResponse(headers, requestBodySize, bodyStr);\n\n  if (warning) {\n    return mergeWarning(data, warning);\n  }\n\n  return data;\n}\n\n/** Exported only for tests. */\nexport async function _getResponseInfo(\n  captureDetails: boolean,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    networkResponseHeaders,\n  }: Pick<ReplayNetworkOptions, 'networkCaptureBodies' | 'networkResponseHeaders'> & {\n    textEncoder: TextEncoderInternal;\n  },\n  response: Response | undefined,\n  responseBodySize?: number,\n): Promise<ReplayNetworkRequestOrResponse | undefined> {\n  if (!captureDetails && responseBodySize !== undefined) {\n    return buildSkippedNetworkRequestOrResponse(responseBodySize);\n  }\n\n  const headers = response ? getAllHeaders(response.headers, networkResponseHeaders) : {};\n\n  if (!response || (!networkCaptureBodies && responseBodySize !== undefined)) {\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n\n  const [bodyText, warning] = await _parseFetchResponseBody(response);\n  const result = getResponseData(bodyText, {\n    networkCaptureBodies,\n    textEncoder,\n    responseBodySize,\n    captureDetails,\n    headers,\n  });\n\n  if (warning) {\n    return mergeWarning(result, warning);\n  }\n\n  return result;\n}\n\nfunction getResponseData(\n  bodyText: string | undefined,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    responseBodySize,\n    captureDetails,\n    headers,\n  }: {\n    captureDetails: boolean;\n    networkCaptureBodies: boolean;\n    responseBodySize: number | undefined;\n    headers: Record<string, string>;\n    textEncoder: TextEncoderInternal;\n  },\n): ReplayNetworkRequestOrResponse | undefined {\n  try {\n    const size =\n      bodyText && bodyText.length && responseBodySize === undefined\n        ? getBodySize(bodyText, textEncoder)\n        : responseBodySize;\n\n    if (!captureDetails) {\n      return buildSkippedNetworkRequestOrResponse(size);\n    }\n\n    if (networkCaptureBodies) {\n      return buildNetworkRequestOrResponse(headers, size, bodyText);\n    }\n\n    return buildNetworkRequestOrResponse(headers, size, undefined);\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize response body', error);\n    // fallback\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n}\n\nasync function _parseFetchResponseBody(response: Response): Promise<[string | undefined, NetworkMetaWarning?]> {\n  const res = _tryCloneResponse(response);\n\n  if (!res) {\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  try {\n    const text = await _tryGetResponseText(res);\n    return [text];\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to get text body from response', error);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n}\n\nfunction _getFetchRequestArgBody(fetchArgs: unknown[] = []): RequestInit['body'] | undefined {\n  // We only support getting the body from the fetch options\n  if (fetchArgs.length !== 2 || typeof fetchArgs[1] !== 'object') {\n    return undefined;\n  }\n\n  return (fetchArgs[1] as RequestInit).body;\n}\n\nfunction getAllHeaders(headers: Headers, allowedHeaders: string[]): Record<string, string> {\n  const allHeaders: Record<string, string> = {};\n\n  allowedHeaders.forEach(header => {\n    if (headers.get(header)) {\n      allHeaders[header] = headers.get(header) as string;\n    }\n  });\n\n  return allHeaders;\n}\n\nfunction getRequestHeaders(fetchArgs: unknown[], allowedHeaders: string[]): Record<string, string> {\n  if (fetchArgs.length === 1 && typeof fetchArgs[0] !== 'string') {\n    return getHeadersFromOptions(fetchArgs[0] as Request | RequestInit, allowedHeaders);\n  }\n\n  if (fetchArgs.length === 2) {\n    return getHeadersFromOptions(fetchArgs[1] as Request | RequestInit, allowedHeaders);\n  }\n\n  return {};\n}\n\nfunction getHeadersFromOptions(\n  input: Request | RequestInit | undefined,\n  allowedHeaders: string[],\n): Record<string, string> {\n  if (!input) {\n    return {};\n  }\n\n  const headers = input.headers;\n\n  if (!headers) {\n    return {};\n  }\n\n  if (headers instanceof Headers) {\n    return getAllHeaders(headers, allowedHeaders);\n  }\n\n  // We do not support this, as it is not really documented (anymore?)\n  if (Array.isArray(headers)) {\n    return {};\n  }\n\n  return getAllowedHeaders(headers, allowedHeaders);\n}\n\nfunction _tryCloneResponse(response: Response): Response | void {\n  try {\n    // We have to clone this, as the body can only be read once\n    return response.clone();\n  } catch (error) {\n    // this can throw if the response was already consumed before\n    DEBUG_BUILD && logger.warn('[Replay] Failed to clone response body', error);\n  }\n}\n\n/**\n * Get the response body of a fetch request, or timeout after 500ms.\n * Fetch can return a streaming body, that may not resolve (or not for a long time).\n * If that happens, we rather abort after a short time than keep waiting for this.\n */\nfunction _tryGetResponseText(response: Response): Promise<string | undefined> {\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout(() => reject(new Error('Timeout while trying to read response body')), 500);\n\n    _getResponseText(response)\n      .then(\n        txt => resolve(txt),\n        reason => reject(reason),\n      )\n      .finally(() => clearTimeout(timeout));\n  });\n\n  return _getResponseText(response);\n}\n\nasync function _getResponseText(response: Response): Promise<string> {\n  // Force this to be a promise, just to be safe\n  // eslint-disable-next-line no-return-await\n  return await response.text();\n}\n","import type { Breadcrumb, TextEncoderInternal, XhrBreadcrumbData } from '@sentry/types';\nimport { SENTRY_XHR_DATA_KEY, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  NetworkMetaWarning,\n  ReplayContainer,\n  ReplayNetworkOptions,\n  ReplayNetworkRequestData,\n  XhrHint,\n} from '../../types';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  getBodyString,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture an XHR breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nexport async function captureXhrBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions & { replay: ReplayContainer },\n): Promise<void> {\n  try {\n    const data = _prepareXhrData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.xhr', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture xhr breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichXhrBreadcrumb(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: { textEncoder: TextEncoderInternal },\n): void {\n  const { xhr, input } = hint;\n\n  if (!xhr) {\n    return;\n  }\n\n  const reqSize = getBodySize(input, options.textEncoder);\n  const resSize = xhr.getResponseHeader('content-length')\n    ? parseContentLengthHeader(xhr.getResponseHeader('content-length'))\n    : _getBodySize(xhr.response, xhr.responseType, options.textEncoder);\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nfunction _prepareXhrData(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions,\n): ReplayNetworkRequestData | null {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now, input, xhr } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  if (!url) {\n    return null;\n  }\n\n  if (!xhr || !urlMatches(url, options.networkDetailAllowUrls) || urlMatches(url, options.networkDetailDenyUrls)) {\n    const request = buildSkippedNetworkRequestOrResponse(requestBodySize);\n    const response = buildSkippedNetworkRequestOrResponse(responseBodySize);\n    return {\n      startTimestamp,\n      endTimestamp,\n      url,\n      method,\n      statusCode,\n      request,\n      response,\n    };\n  }\n\n  const xhrInfo = xhr[SENTRY_XHR_DATA_KEY];\n  const networkRequestHeaders = xhrInfo\n    ? getAllowedHeaders(xhrInfo.request_headers, options.networkRequestHeaders)\n    : {};\n  const networkResponseHeaders = getAllowedHeaders(getResponseHeaders(xhr), options.networkResponseHeaders);\n\n  const [requestBody, requestWarning] = options.networkCaptureBodies ? getBodyString(input) : [undefined];\n  const [responseBody, responseWarning] = options.networkCaptureBodies ? _getXhrResponseBody(xhr) : [undefined];\n\n  const request = buildNetworkRequestOrResponse(networkRequestHeaders, requestBodySize, requestBody);\n  const response = buildNetworkRequestOrResponse(networkResponseHeaders, responseBodySize, responseBody);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request: requestWarning ? mergeWarning(request, requestWarning) : request,\n    response: responseWarning ? mergeWarning(response, responseWarning) : response,\n  };\n}\n\nfunction getResponseHeaders(xhr: XMLHttpRequest): Record<string, string> {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc: Record<string, string>, line: string) => {\n    const [key, value] = line.split(': ');\n    acc[key.toLowerCase()] = value;\n    return acc;\n  }, {});\n}\n\nfunction _getXhrResponseBody(xhr: XMLHttpRequest): [string | undefined, NetworkMetaWarning?] {\n  // We collect errors that happen, but only log them if we can't get any response body\n  const errors: unknown[] = [];\n\n  try {\n    return [xhr.responseText];\n  } catch (e) {\n    errors.push(e);\n  }\n\n  // Try to manually parse the response body, if responseText fails\n  try {\n    return _parseXhrResponse(xhr.response, xhr.responseType);\n  } catch (e) {\n    errors.push(e);\n  }\n\n  DEBUG_BUILD && logger.warn('[Replay] Failed to get xhr response body', ...errors);\n\n  return [undefined];\n}\n\n/**\n * Get the string representation of the XHR response.\n * Based on MDN, these are the possible types of the response:\n * string\n * ArrayBuffer\n * Blob\n * Document\n * POJO\n *\n * Exported only for tests.\n */\nexport function _parseXhrResponse(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n): [string | undefined, NetworkMetaWarning?] {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof Document) {\n      return [body.body.outerHTML];\n    }\n\n    if (responseType === 'json' && body && typeof body === 'object') {\n      return [JSON.stringify(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\nfunction _getBodySize(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n  textEncoder: TextEncoder | TextEncoderInternal,\n): number | undefined {\n  try {\n    const bodyStr = responseType === 'json' && body && typeof body === 'object' ? JSON.stringify(body) : body;\n    return getBodySize(bodyStr, textEncoder);\n  } catch {\n    return undefined;\n  }\n}\n","import { getClient } from '@sentry/core';\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  FetchBreadcrumbData,\n  TextEncoderInternal,\n  XhrBreadcrumbData,\n} from '@sentry/types';\nimport { addFetchInstrumentationHandler, addXhrInstrumentationHandler, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { FetchHint, ReplayContainer, ReplayNetworkOptions, XhrHint } from '../types';\nimport { handleFetchSpanListener } from './handleFetch';\nimport { handleXhrSpanListener } from './handleXhr';\nimport { captureFetchBreadcrumbToReplay, enrichFetchBreadcrumb } from './util/fetchUtils';\nimport { captureXhrBreadcrumbToReplay, enrichXhrBreadcrumb } from './util/xhrUtils';\n\ninterface ExtendedNetworkBreadcrumbsOptions extends ReplayNetworkOptions {\n  replay: ReplayContainer;\n  textEncoder: TextEncoderInternal;\n}\n\n/**\n * This method does two things:\n * - It enriches the regular XHR/fetch breadcrumbs with request/response size data\n * - It captures the XHR/fetch breadcrumbs to the replay\n *   (enriching it with further data that is _not_ added to the regular breadcrumbs)\n */\nexport function handleNetworkBreadcrumbs(replay: ReplayContainer): void {\n  const client = getClient();\n\n  try {\n    const textEncoder = new TextEncoder();\n\n    const {\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    } = replay.getOptions();\n\n    const options: ExtendedNetworkBreadcrumbsOptions = {\n      replay,\n      textEncoder,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    };\n\n    if (client && client.on) {\n      client.on('beforeAddBreadcrumb', (breadcrumb, hint) => beforeAddNetworkBreadcrumb(options, breadcrumb, hint));\n    } else {\n      // Fallback behavior\n      addFetchInstrumentationHandler(handleFetchSpanListener(replay));\n      addXhrInstrumentationHandler(handleXhrSpanListener(replay));\n    }\n  } catch {\n    // Do nothing\n  }\n}\n\n/** just exported for tests */\nexport function beforeAddNetworkBreadcrumb(\n  options: ExtendedNetworkBreadcrumbsOptions,\n  breadcrumb: Breadcrumb,\n  hint?: BreadcrumbHint,\n): void {\n  if (!breadcrumb.data) {\n    return;\n  }\n\n  try {\n    if (_isXhrBreadcrumb(breadcrumb) && _isXhrHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichXhrBreadcrumb(breadcrumb, hint, options);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureXhrBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n\n    if (_isFetchBreadcrumb(breadcrumb) && _isFetchHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichFetchBreadcrumb(breadcrumb, hint, options);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureFetchBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n  } catch (e) {\n    DEBUG_BUILD && logger.warn('Error when enriching network breadcrumb');\n  }\n}\n\nfunction _isXhrBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: XhrBreadcrumbData } {\n  return breadcrumb.category === 'xhr';\n}\n\nfunction _isFetchBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: FetchBreadcrumbData } {\n  return breadcrumb.category === 'fetch';\n}\n\nfunction _isXhrHint(hint?: BreadcrumbHint): hint is XhrHint {\n  return hint && hint.xhr;\n}\n\nfunction _isFetchHint(hint?: BreadcrumbHint): hint is FetchHint {\n  return hint && hint.response;\n}\n","import type { HandlerDataFetch } from '@sentry/types';\n\nimport type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { addNetworkBreadcrumb } from './util/addNetworkBreadcrumb';\n\n/** only exported for tests */\nexport function handleFetch(handlerData: HandlerDataFetch): null | ReplayPerformanceEntry<NetworkRequestData> {\n  const { startTimestamp, endTimestamp, fetchData, response } = handlerData;\n\n  if (!endTimestamp) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url } = fetchData;\n\n  return {\n    type: 'resource.fetch',\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: {\n      method,\n      statusCode: response ? (response as Response).status : undefined,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addFetchInstrumentationHandler(listener)`.\n */\nexport function handleFetchSpanListener(replay: ReplayContainer): (handlerData: HandlerDataFetch) => void {\n  return (handlerData: HandlerDataFetch) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleFetch(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n","import type { Breadcrumb, Scope } from '@sentry/types';\nimport { normalize } from '@sentry/utils';\n\nimport { CONSOLE_ARG_MAX_SIZE } from '../constants';\nimport type { ReplayContainer } from '../types';\nimport type { ReplayFrame } from '../types/replayFrame';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\nlet _LAST_BREADCRUMB: null | Breadcrumb = null;\n\ntype BreadcrumbWithCategory = Required<Pick<Breadcrumb, 'category'>>;\n\nfunction isBreadcrumbWithCategory(breadcrumb: Breadcrumb): breadcrumb is BreadcrumbWithCategory {\n  return !!breadcrumb.category;\n}\n\nexport const handleScopeListener: (replay: ReplayContainer) => (scope: Scope) => void =\n  (replay: ReplayContainer) =>\n  (scope: Scope): void => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleScope(scope);\n\n    if (!result) {\n      return;\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n\n/**\n * An event handler to handle scope changes.\n */\nexport function handleScope(scope: Scope): Breadcrumb | null {\n  // TODO (v8): Remove this guard. This was put in place because we introduced\n  // Scope.getLastBreadcrumb mid-v7 which caused incompatibilities with older SDKs.\n  // For now, we'll just return null if the method doesn't exist but we should eventually\n  // get rid of this guard.\n  const newBreadcrumb = scope.getLastBreadcrumb && scope.getLastBreadcrumb();\n\n  // Listener can be called when breadcrumbs have not changed, so we store the\n  // reference to the last crumb and only return a crumb if it has changed\n  if (_LAST_BREADCRUMB === newBreadcrumb || !newBreadcrumb) {\n    return null;\n  }\n\n  _LAST_BREADCRUMB = newBreadcrumb;\n\n  if (\n    !isBreadcrumbWithCategory(newBreadcrumb) ||\n    ['fetch', 'xhr', 'sentry.event', 'sentry.transaction'].includes(newBreadcrumb.category) ||\n    newBreadcrumb.category.startsWith('ui.')\n  ) {\n    return null;\n  }\n\n  if (newBreadcrumb.category === 'console') {\n    return normalizeConsoleBreadcrumb(newBreadcrumb);\n  }\n\n  return createBreadcrumb(newBreadcrumb);\n}\n\n/** exported for tests only */\nexport function normalizeConsoleBreadcrumb(\n  breadcrumb: Omit<Breadcrumb, 'category'> & BreadcrumbWithCategory,\n): ReplayFrame {\n  const args = breadcrumb.data && breadcrumb.data.arguments;\n\n  if (!Array.isArray(args) || args.length === 0) {\n    return createBreadcrumb(breadcrumb);\n  }\n\n  let isTruncated = false;\n\n  // Avoid giant args captures\n  const normalizedArgs = args.map(arg => {\n    if (!arg) {\n      return arg;\n    }\n    if (typeof arg === 'string') {\n      if (arg.length > CONSOLE_ARG_MAX_SIZE) {\n        isTruncated = true;\n        return `${arg.slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n      }\n\n      return arg;\n    }\n    if (typeof arg === 'object') {\n      try {\n        const normalizedArg = normalize(arg, 7);\n        const stringified = JSON.stringify(normalizedArg);\n        if (stringified.length > CONSOLE_ARG_MAX_SIZE) {\n          isTruncated = true;\n          // We use the pretty printed JSON string here as a base\n          return `${JSON.stringify(normalizedArg, null, 2).slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n        }\n        return normalizedArg;\n      } catch {\n        // fall back to default\n      }\n    }\n\n    return arg;\n  });\n\n  return createBreadcrumb({\n    ...breadcrumb,\n    data: {\n      ...breadcrumb.data,\n      arguments: normalizedArgs,\n      ...(isTruncated ? { _meta: { warnings: ['CONSOLE_ARG_TRUNCATED'] } } : {}),\n    },\n  });\n}\n","import type { BaseClient } from '@sentry/core';\nimport { getCurrentScope } from '@sentry/core';\nimport { addEventProcessor, getClient } from '@sentry/core';\nimport type { Client, DynamicSamplingContext } from '@sentry/types';\nimport { addClickKeypressInstrumentationHandler, addHistoryInstrumentationHandler } from '@sentry/utils';\n\nimport { handleAfterSendEvent } from '../coreHandlers/handleAfterSendEvent';\nimport { handleBeforeSendEvent } from '../coreHandlers/handleBeforeSendEvent';\nimport { handleDomListener } from '../coreHandlers/handleDom';\nimport { handleGlobalEventListener } from '../coreHandlers/handleGlobalEvent';\nimport { handleHistorySpanListener } from '../coreHandlers/handleHistory';\nimport { handleNetworkBreadcrumbs } from '../coreHandlers/handleNetworkBreadcrumbs';\nimport { handleScopeListener } from '../coreHandlers/handleScope';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Add global listeners that cannot be removed.\n */\nexport function addGlobalListeners(replay: ReplayContainer): void {\n  // Listeners from core SDK //\n  const scope = getCurrentScope();\n  const client = getClient();\n\n  scope.addScopeListener(handleScopeListener(replay));\n  addClickKeypressInstrumentationHandler(handleDomListener(replay));\n  addHistoryInstrumentationHandler(handleHistorySpanListener(replay));\n  handleNetworkBreadcrumbs(replay);\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  const eventProcessor = handleGlobalEventListener(replay, !hasHooks(client));\n  if (client && client.addEventProcessor) {\n    client.addEventProcessor(eventProcessor);\n  } else {\n    addEventProcessor(eventProcessor);\n  }\n\n  // If a custom client has no hooks yet, we continue to use the \"old\" implementation\n  if (hasHooks(client)) {\n    client.on('beforeSendEvent', handleBeforeSendEvent(replay));\n    client.on('afterSendEvent', handleAfterSendEvent(replay));\n    client.on('createDsc', (dsc: DynamicSamplingContext) => {\n      const replayId = replay.getSessionId();\n      // We do not want to set the DSC when in buffer mode, as that means the replay has not been sent (yet)\n      if (replayId && replay.isEnabled() && replay.recordingMode === 'session') {\n        // Ensure to check that the session is still active - it could have expired in the meanwhile\n        const isSessionActive = replay.checkAndHandleExpiredSession();\n        if (isSessionActive) {\n          dsc.replay_id = replayId;\n        }\n      }\n    });\n\n    client.on('startTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We may be missing the initial startTransaction due to timing issues,\n    // so we capture it on finish again.\n    client.on('finishTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We want to flush replay\n    client.on('beforeSendFeedback', (feedbackEvent, options) => {\n      const replayId = replay.getSessionId();\n      if (options && options.includeReplay && replay.isEnabled() && replayId) {\n        // This should never reject\n        if (feedbackEvent.contexts && feedbackEvent.contexts.feedback) {\n          feedbackEvent.contexts.feedback.replay_id = replayId;\n        }\n      }\n    });\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction hasHooks(client: Client | undefined): client is BaseClient<any> {\n  return !!(client && client.on);\n}\n","import { WINDOW } from '../constants';\nimport type { AddEventResult, MemoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from './createPerformanceSpans';\n\ntype ReplayMemoryEntry = ReplayPerformanceEntry<MemoryData> & { data: { memory: MemoryInfo } };\n\ninterface MemoryInfo {\n  jsHeapSizeLimit: number;\n  totalJSHeapSize: number;\n  usedJSHeapSize: number;\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nexport async function addMemoryEntry(replay: ReplayContainer): Promise<Array<AddEventResult | null>> {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(\n      createPerformanceSpans(replay, [\n        // @ts-expect-error memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n        createMemoryEntry(WINDOW.performance.memory),\n      ]),\n    );\n  } catch (error) {\n    // Do nothing\n    return [];\n  }\n}\n\nfunction createMemoryEntry(memoryEntry: MemoryInfo): ReplayMemoryEntry {\n  const { jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = Date.now() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize,\n      },\n    },\n  };\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport { logger } from '@sentry/utils';\n\nimport { updateClickDetectorForRecordingEvent } from '../coreHandlers/handleClick';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { saveSession } from '../session/saveSession';\nimport type { RecordingEvent, ReplayContainer, ReplayOptionFrameEvent } from '../types';\nimport { addEventSync } from './addEvent';\nimport { logInfo } from './log';\n\ntype RecordingEmitCallback = (event: RecordingEvent, isCheckout?: boolean) => void;\n\n/**\n * Handler for recording events.\n *\n * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n */\nexport function getHandleRecordingEmit(replay: ReplayContainer): RecordingEmitCallback {\n  let hadFirstEvent = false;\n\n  return (event: RecordingEvent, _isCheckout?: boolean) => {\n    // If this is false, it means session is expired, create and a new session and wait for checkout\n    if (!replay.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.warn('[Replay] Received replay event after session expired.');\n\n      return;\n    }\n\n    // `_isCheckout` is only set when the checkout is due to `checkoutEveryNms`\n    // We also want to treat the first event as a checkout, so we handle this specifically here\n    const isCheckout = _isCheckout || !hadFirstEvent;\n    hadFirstEvent = true;\n\n    if (replay.clickDetector) {\n      updateClickDetectorForRecordingEvent(replay.clickDetector, event);\n    }\n\n    // The handler returns `true` if we do not want to trigger debounced flush, `false` if we want to debounce flush.\n    replay.addUpdate(() => {\n      // The session is always started immediately on pageload/init, but for\n      // error-only replays, it should reflect the most recent checkout\n      // when an error occurs. Clear any state that happens before this current\n      // checkout. This needs to happen before `addEvent()` which updates state\n      // dependent on this reset.\n      if (replay.recordingMode === 'buffer' && isCheckout) {\n        replay.setInitialState();\n      }\n\n      // If the event is not added (e.g. due to being paused, disabled, or out of the max replay duration),\n      // Skip all further steps\n      if (!addEventSync(replay, event, isCheckout)) {\n        // Return true to skip scheduling a debounced flush\n        return true;\n      }\n\n      // Different behavior for full snapshots (type=2), ignore other event types\n      // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n      if (!isCheckout) {\n        return false;\n      }\n\n      // Additionally, create a meta event that will capture certain SDK settings.\n      // In order to handle buffer mode, this needs to either be done when we\n      // receive checkout events or at flush time.\n      //\n      // `isCheckout` is always true, but want to be explicit that it should\n      // only be added for checkouts\n      addSettingsEvent(replay, isCheckout);\n\n      // If there is a previousSessionId after a full snapshot occurs, then\n      // the replay session was started due to session expiration. The new session\n      // is started before triggering a new checkout and contains the id\n      // of the previous session. Do not immediately flush in this case\n      // to avoid capturing only the checkout and instead the replay will\n      // be captured if they perform any follow-up actions.\n      if (replay.session && replay.session.previousSessionId) {\n        return true;\n      }\n\n      // When in buffer mode, make sure we adjust the session started date to the current earliest event of the buffer\n      // this should usually be the timestamp of the checkout event, but to be safe...\n      if (replay.recordingMode === 'buffer' && replay.session && replay.eventBuffer) {\n        const earliestEvent = replay.eventBuffer.getEarliestTimestamp();\n        if (earliestEvent) {\n          logInfo(\n            `[Replay] Updating session start time to earliest event in buffer to ${new Date(earliestEvent)}`,\n            replay.getOptions()._experiments.traceInternals,\n          );\n\n          replay.session.started = earliestEvent;\n\n          if (replay.getOptions().stickySession) {\n            saveSession(replay.session);\n          }\n        }\n      }\n\n      if (replay.recordingMode === 'session') {\n        // If the full snapshot is due to an initial load, we will not have\n        // a previous session ID. In this case, we want to buffer events\n        // for a set amount of time before flushing. This can help avoid\n        // capturing replays of users that immediately close the window.\n\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        void replay.flush();\n      }\n\n      return true;\n    });\n  };\n}\n\n/**\n * Exported for tests\n */\nexport function createOptionsEvent(replay: ReplayContainer): ReplayOptionFrameEvent {\n  const options = replay.getOptions();\n  return {\n    type: EventType.Custom,\n    timestamp: Date.now(),\n    data: {\n      tag: 'options',\n      payload: {\n        shouldRecordCanvas: replay.isRecordingCanvas(),\n        sessionSampleRate: options.sessionSampleRate,\n        errorSampleRate: options.errorSampleRate,\n        useCompressionOption: options.useCompression,\n        blockAllMedia: options.blockAllMedia,\n        maskAllText: options.maskAllText,\n        maskAllInputs: options.maskAllInputs,\n        useCompression: replay.eventBuffer ? replay.eventBuffer.type === 'worker' : false,\n        networkDetailHasUrls: options.networkDetailAllowUrls.length > 0,\n        networkCaptureBodies: options.networkCaptureBodies,\n        networkRequestHasHeaders: options.networkRequestHeaders.length > 0,\n        networkResponseHasHeaders: options.networkResponseHeaders.length > 0,\n      },\n    },\n  };\n}\n\n/**\n * Add a \"meta\" event that contains a simplified view on current configuration\n * options. This should only be included on the first segment of a recording.\n */\nfunction addSettingsEvent(replay: ReplayContainer, isCheckout?: boolean): void {\n  // Only need to add this event when sending the first segment\n  if (!isCheckout || !replay.session || replay.session.segmentId !== 0) {\n    return;\n  }\n\n  addEventSync(replay, createOptionsEvent(replay), false);\n}\n","import { getClient, getCurrentScope } from '@sentry/core';\nimport type { ReplayEvent, TransportMakeRequestResponse } from '@sentry/types';\nimport type { RateLimits } from '@sentry/utils';\nimport { isRateLimited, updateRateLimits } from '@sentry/utils';\n\nimport { REPLAY_EVENT_NAME, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport type { SendReplayData } from '../types';\nimport { createReplayEnvelope } from './createReplayEnvelope';\nimport { logInfo } from './log';\nimport { prepareRecordingData } from './prepareRecordingData';\nimport { prepareReplayEvent } from './prepareReplayEvent';\n\n/**\n * Send replay attachment using `fetch()`\n */\nexport async function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  eventContext,\n  timestamp,\n  session,\n}: SendReplayData): Promise<void | TransportMakeRequestResponse> {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const client = getClient();\n  const scope = getCurrentScope();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !transport || !dsn || !session.sampled) {\n    return;\n  }\n\n  const baseEvent: ReplayEvent = {\n    type: REPLAY_EVENT_NAME,\n    replay_start_timestamp: initialTimestamp / 1000,\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay', baseEvent);\n    logInfo('An event processor returned `null`, will not send event.');\n    return;\n  }\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n      },\n  }\n  */\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete replayEvent.sdkProcessingMetadata;\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response: void | TransportMakeRequestResponse;\n\n  try {\n    response = await transport.send(envelope);\n  } catch (err) {\n    const error = new Error(UNABLE_TO_SEND_REPLAY);\n\n    try {\n      // In case browsers don't allow this property to be writable\n      // @ts-expect-error This needs lib es2022 and newer\n      error.cause = err;\n    } catch {\n      // nothing to do\n    }\n    throw error;\n  }\n\n  // TODO (v8): we can remove this guard once transport.send's type signature doesn't include void anymore\n  if (!response) {\n    return response;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  const rateLimits = updateRateLimits({}, response);\n  if (isRateLimited(rateLimits, 'replay')) {\n    throw new RateLimitError(rateLimits);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nexport class TransportStatusCodeError extends Error {\n  public constructor(statusCode: number) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * This error indicates that we hit a rate limit API error.\n */\nexport class RateLimitError extends Error {\n  public rateLimits: RateLimits;\n\n  public constructor(rateLimits: RateLimits) {\n    super('Rate limit hit');\n    this.rateLimits = rateLimits;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/types';\n\n/**\n * Prepare the recording data ready to be sent.\n */\nexport function prepareRecordingData({\n  recordingData,\n  headers,\n}: {\n  recordingData: ReplayRecordingData;\n  headers: Record<string, unknown>;\n}): ReplayRecordingData {\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n\n  return payloadWithSequence;\n}\n","import type { IntegrationIndex, Scope } from '@sentry/core';\nimport { getIsolationScope } from '@sentry/core';\nimport { prepareEvent } from '@sentry/core';\nimport type { Client, EventHint, ReplayEvent } from '@sentry/types';\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nexport async function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}: {\n  client: Client & { _integrations?: IntegrationIndex };\n  scope: Scope;\n  replayId: string;\n  event: ReplayEvent;\n}): Promise<ReplayEvent | null> {\n  const integrations =\n    typeof client._integrations === 'object' && client._integrations !== null && !Array.isArray(client._integrations)\n      ? Object.keys(client._integrations)\n      : undefined;\n\n  const eventHint: EventHint = { event_id, integrations };\n\n  if (client.emit) {\n    client.emit('preprocessEvent', event, eventHint);\n  }\n\n  const preparedEvent = (await prepareEvent(\n    client.getOptions(),\n    event,\n    eventHint,\n    scope,\n    client,\n    getIsolationScope(),\n  )) as ReplayEvent | null;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata && client.getSdkMetadata();\n  const { name, version } = (metadata && metadata.sdk) || {};\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0',\n  };\n\n  return preparedEvent;\n}\n","import type { DsnComponents, ReplayEnvelope, ReplayEvent, ReplayRecordingData } from '@sentry/types';\nimport { createEnvelope, createEventEnvelopeHeaders, getSdkMetadataForEnvelopeHeader } from '@sentry/utils';\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nexport function createReplayEnvelope(\n  replayEvent: ReplayEvent,\n  recordingData: ReplayRecordingData,\n  dsn: DsnComponents,\n  tunnel?: string,\n): ReplayEnvelope {\n  return createEnvelope<ReplayEnvelope>(\n    createEventEnvelopeHeaders(replayEvent, getSdkMetadataForEnvelopeHeader(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n","import { captureException, setContext } from '@sentry/core';\n\nimport { RETRY_BASE_INTERVAL, RETRY_MAX_COUNT, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { SendReplayData } from '../types';\nimport { RateLimitError, TransportStatusCodeError, sendReplayRequest } from './sendReplayRequest';\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nexport async function sendReplay(\n  replayData: SendReplayData,\n  retryConfig = {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL,\n  },\n): Promise<unknown> {\n  const { recordingData, options } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError || err instanceof RateLimitError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    setContext('Replays', {\n      _retryCount: retryConfig.count,\n    });\n\n    if (DEBUG_BUILD && options._experiments && options._experiments.captureExceptions) {\n      captureException(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      const error = new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-expect-error This needs lib es2022 and newer\n        error.cause = err;\n      } catch {\n        // nothing to do\n      }\n\n      throw error;\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n","export const THROTTLED = '__THROTTLED';\nexport const SKIPPED = '__SKIPPED';\n\n/**\n * Create a throttled function off a given function.\n * When calling the throttled function, it will call the original function only\n * if it hasn't been called more than `maxCount` times in the last `durationSeconds`.\n *\n * Returns `THROTTLED` if throttled for the first time, after that `SKIPPED`,\n * or else the return value of the original function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function throttle<T extends (...rest: any[]) => any>(\n  fn: T,\n  maxCount: number,\n  durationSeconds: number,\n): (...rest: Parameters<T>) => ReturnType<T> | typeof THROTTLED | typeof SKIPPED {\n  const counter = new Map<number, number>();\n\n  const _cleanup = (now: number): void => {\n    const threshold = now - durationSeconds;\n    counter.forEach((_value, key) => {\n      if (key < threshold) {\n        counter.delete(key);\n      }\n    });\n  };\n\n  const _getTotalCount = (): number => {\n    return [...counter.values()].reduce((a, b) => a + b, 0);\n  };\n\n  let isThrottled = false;\n\n  return (...rest: Parameters<T>): ReturnType<T> | typeof THROTTLED | typeof SKIPPED => {\n    // Date in second-precision, which we use as basis for the throttling\n    const now = Math.floor(Date.now() / 1000);\n\n    // First, make sure to delete any old entries\n    _cleanup(now);\n\n    // If already over limit, do nothing\n    if (_getTotalCount() >= maxCount) {\n      const wasThrottled = isThrottled;\n      isThrottled = true;\n      return wasThrottled ? SKIPPED : THROTTLED;\n    }\n\n    isThrottled = false;\n    const count = counter.get(now) || 0;\n    counter.set(now, count + 1);\n\n    return fn(...rest);\n  };\n}\n","/* eslint-disable max-lines */ // TODO: We might want to split this file up\nimport { EventType, record } from '@sentry-internal/rrweb';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  captureException,\n  getClient,\n  getCurrentScope,\n  spanToJSON,\n} from '@sentry/core';\nimport type { ReplayRecordingMode, Transaction } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport {\n  BUFFER_CHECKOUT_TIME,\n  SESSION_IDLE_EXPIRE_DURATION,\n  SESSION_IDLE_PAUSE_DURATION,\n  SLOW_CLICK_SCROLL_TIMEOUT,\n  SLOW_CLICK_THRESHOLD,\n  WINDOW,\n} from './constants';\nimport { ClickDetector } from './coreHandlers/handleClick';\nimport { handleKeyboardEvent } from './coreHandlers/handleKeyboardEvent';\nimport { setupPerformanceObserver } from './coreHandlers/performanceObserver';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventBuffer } from './eventBuffer';\nimport { clearSession } from './session/clearSession';\nimport { loadOrCreateSession } from './session/loadOrCreateSession';\nimport { saveSession } from './session/saveSession';\nimport { shouldRefreshSession } from './session/shouldRefreshSession';\nimport type {\n  AddEventResult,\n  AddUpdateCallback,\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  EventBuffer,\n  InternalEventContext,\n  PopEventContext,\n  RecordingEvent,\n  RecordingOptions,\n  ReplayBreadcrumbFrame,\n  ReplayCanvasIntegrationOptions,\n  ReplayContainer as ReplayContainerInterface,\n  ReplayPerformanceEntry,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n  Session,\n  SlowClickConfig,\n  Timeouts,\n} from './types';\nimport { ReplayEventTypeCustom } from './types';\nimport { addEvent, addEventSync } from './util/addEvent';\nimport { addGlobalListeners } from './util/addGlobalListeners';\nimport { addMemoryEntry } from './util/addMemoryEntry';\nimport { createBreadcrumb } from './util/createBreadcrumb';\nimport { createPerformanceEntries } from './util/createPerformanceEntries';\nimport { createPerformanceSpans } from './util/createPerformanceSpans';\nimport { debounce } from './util/debounce';\nimport { getHandleRecordingEmit } from './util/handleRecordingEmit';\nimport { isExpired } from './util/isExpired';\nimport { isSessionExpired } from './util/isSessionExpired';\nimport { logInfo, logInfoNextTick } from './util/log';\nimport { sendReplay } from './util/sendReplay';\nimport type { SKIPPED } from './util/throttle';\nimport { THROTTLED, throttle } from './util/throttle';\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nexport class ReplayContainer implements ReplayContainerInterface {\n  public eventBuffer: EventBuffer | null;\n\n  public performanceEntries: AllPerformanceEntry[];\n\n  public replayPerformanceEntries: ReplayPerformanceEntry<AllPerformanceEntryData>[];\n\n  public session: Session | undefined;\n\n  public clickDetector: ClickDetector | undefined;\n\n  /**\n   * Recording can happen in one of three modes:\n   *   - session: Record the whole session, sending it continuously\n   *   - buffer: Always keep the last 60s of recording, requires:\n   *     - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs\n   *     - or calling `flush()` to send the replay\n   */\n  public recordingMode: ReplayRecordingMode;\n\n  /**\n   * The current or last active transcation.\n   * This is only available when performance is enabled.\n   */\n  public lastTransaction?: Transaction;\n\n  /**\n   * These are here so we can overwrite them in tests etc.\n   * @hidden\n   */\n  public readonly timeouts: Timeouts;\n\n  private _throttledAddEvent: (\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ) => typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null>;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  private readonly _options: ReplayPluginOptions;\n\n  private _performanceCleanupCallback?: () => void;\n\n  private _debouncedFlush: ReturnType<typeof debounce>;\n  private _flushLock: Promise<unknown> | undefined;\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n  private _lastActivity: number;\n\n  /**\n   * Is the integration currently active?\n   */\n  private _isEnabled: boolean;\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n  private _isPaused: boolean;\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n  private _hasInitializedCoreListeners: boolean;\n\n  /**\n   * Function to stop recording\n   */\n  private _stopRecording: ReturnType<typeof record> | undefined;\n\n  private _context: InternalEventContext;\n\n  /**\n   * Internal use for canvas recording options\n   */\n  private _canvas: ReplayCanvasIntegrationOptions | undefined;\n\n  public constructor({\n    options,\n    recordingOptions,\n  }: {\n    options: ReplayPluginOptions;\n    recordingOptions: RecordingOptions;\n  }) {\n    this.eventBuffer = null;\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n    this.recordingMode = 'session';\n    this.timeouts = {\n      sessionIdlePause: SESSION_IDLE_PAUSE_DURATION,\n      sessionIdleExpire: SESSION_IDLE_EXPIRE_DURATION,\n    } as const;\n    this._lastActivity = Date.now();\n    this._isEnabled = false;\n    this._isPaused = false;\n    this._hasInitializedCoreListeners = false;\n    this._context = {\n      errorIds: new Set(),\n      traceIds: new Set(),\n      urls: [],\n      initialTimestamp: Date.now(),\n      initialUrl: '',\n    };\n\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay,\n    });\n\n    this._throttledAddEvent = throttle(\n      (event: RecordingEvent, isCheckout?: boolean) => addEvent(this, event, isCheckout),\n      // Max 300 events...\n      300,\n      // ... per 5s\n      5,\n    );\n\n    const { slowClickTimeout, slowClickIgnoreSelectors } = this.getOptions();\n\n    const slowClickConfig: SlowClickConfig | undefined = slowClickTimeout\n      ? {\n          threshold: Math.min(SLOW_CLICK_THRESHOLD, slowClickTimeout),\n          timeout: slowClickTimeout,\n          scrollTimeout: SLOW_CLICK_SCROLL_TIMEOUT,\n          ignoreSelector: slowClickIgnoreSelectors ? slowClickIgnoreSelectors.join(',') : '',\n        }\n      : undefined;\n\n    if (slowClickConfig) {\n      this.clickDetector = new ClickDetector(this, slowClickConfig);\n    }\n  }\n\n  /** Get the event context. */\n  public getContext(): InternalEventContext {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n  public isEnabled(): boolean {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n  public isPaused(): boolean {\n    return this._isPaused;\n  }\n\n  /**\n   * Determine if canvas recording is enabled\n   */\n  public isRecordingCanvas(): boolean {\n    return Boolean(this._canvas);\n  }\n\n  /** Get the replay integration options. */\n  public getOptions(): ReplayPluginOptions {\n    return this._options;\n  }\n\n  /**\n   * Initializes the plugin based on sampling configuration. Should not be\n   * called outside of constructor.\n   */\n  public initializeSampling(previousSessionId?: string): void {\n    const { errorSampleRate, sessionSampleRate } = this._options;\n\n    // If neither sample rate is > 0, then do nothing - user will need to call one of\n    // `start()` or `startBuffering` themselves.\n    if (errorSampleRate <= 0 && sessionSampleRate <= 0) {\n      return;\n    }\n\n    // Otherwise if there is _any_ sample rate set, try to load an existing\n    // session, or create a new one.\n    this._initializeSessionForSampling(previousSessionId);\n\n    if (!this.session) {\n      // This should not happen, something wrong has occurred\n      this._handleException(new Error('Unable to initialize and create session'));\n      return;\n    }\n\n    if (this.session.sampled === false) {\n      // This should only occur if `errorSampleRate` is 0 and was unsampled for\n      // session-based replay. In this case there is nothing to do.\n      return;\n    }\n\n    // If segmentId > 0, it means we've previously already captured this session\n    // In this case, we still want to continue in `session` recording mode\n    this.recordingMode = this.session.sampled === 'buffer' && this.session.segmentId === 0 ? 'buffer' : 'session';\n\n    logInfoNextTick(\n      `[Replay] Starting replay in ${this.recordingMode} mode`,\n      this._options._experiments.traceInternals,\n    );\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (this._isEnabled && this.recordingMode === 'session') {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    if (this._isEnabled && this.recordingMode === 'buffer') {\n      throw new Error('Replay buffering is in progress, call `flush()` to save the replay');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in session mode', this._options._experiments.traceInternals);\n\n    const session = loadOrCreateSession(\n      {\n        maxReplayDuration: this._options.maxReplayDuration,\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        // This is intentional: create a new session-based replay when calling `start()`\n        sessionSampleRate: 1,\n        allowBuffering: false,\n      },\n    );\n\n    this.session = session;\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, an error occurs.\n   */\n  public startBuffering(): void {\n    if (this._isEnabled) {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in buffer mode', this._options._experiments.traceInternals);\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: 0,\n        allowBuffering: true,\n      },\n    );\n\n    this.session = session;\n\n    this.recordingMode = 'buffer';\n    this._initializeRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n  public startRecording(): void {\n    try {\n      const canvasOptions = this._canvas;\n\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'buffer' && { checkoutEveryNms: BUFFER_CHECKOUT_TIME }),\n        emit: getHandleRecordingEmit(this),\n        onMutation: this._onMutationHandler,\n        ...(canvasOptions\n          ? {\n              recordCanvas: canvasOptions.recordCanvas,\n              getCanvasManager: canvasOptions.getCanvasManager,\n              sampling: canvasOptions.sampling,\n              dataURLOptions: canvasOptions.dataURLOptions,\n            }\n          : {}),\n      });\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   *\n   * Returns true if it was previously stopped, or is now stopped,\n   * otherwise false.\n   */\n  public stopRecording(): boolean {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n      }\n\n      return true;\n    } catch (err) {\n      this._handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public async stop({ forceFlush = false, reason }: { forceFlush?: boolean; reason?: string } = {}): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    // We can't move `_isEnabled` after awaiting a flush, otherwise we can\n    // enter into an infinite loop when `stop()` is called while flushing.\n    this._isEnabled = false;\n\n    try {\n      logInfo(\n        `[Replay] Stopping Replay${reason ? ` triggered by ${reason}` : ''}`,\n        this._options._experiments.traceInternals,\n      );\n\n      this._removeListeners();\n      this.stopRecording();\n\n      this._debouncedFlush.cancel();\n      // See comment above re: `_isEnabled`, we \"force\" a flush, ignoring the\n      // `_isEnabled` state of the plugin since it was disabled above.\n      if (forceFlush) {\n        await this._flush({ force: true });\n      }\n\n      // After flush, destroy event buffer\n      this.eventBuffer && this.eventBuffer.destroy();\n      this.eventBuffer = null;\n\n      // Clear session from session storage, note this means if a new session\n      // is started after, it will not have `previousSessionId`\n      clearSession(this);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n  public pause(): void {\n    if (this._isPaused) {\n      return;\n    }\n\n    this._isPaused = true;\n    this.stopRecording();\n\n    logInfo('[Replay] Pausing replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n  public resume(): void {\n    if (!this._isPaused || !this._checkSession()) {\n      return;\n    }\n\n    this._isPaused = false;\n    this.startRecording();\n\n    logInfo('[Replay] Resuming replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public async sendBufferedReplayOrFlush({ continueRecording = true }: SendBufferedReplayOptions = {}): Promise<void> {\n    if (this.recordingMode === 'session') {\n      return this.flushImmediate();\n    }\n\n    const activityTime = Date.now();\n\n    logInfo('[Replay] Converting buffer to session', this._options._experiments.traceInternals);\n\n    // Allow flush to complete before resuming as a session recording, otherwise\n    // the checkout from `startRecording` may be included in the payload.\n    // Prefer to keep the error replay as a separate (and smaller) segment\n    // than the session replay.\n    await this.flushImmediate();\n\n    const hasStoppedRecording = this.stopRecording();\n\n    if (!continueRecording || !hasStoppedRecording) {\n      return;\n    }\n\n    // To avoid race conditions where this is called multiple times, we check here again that we are still buffering\n    if ((this.recordingMode as ReplayRecordingMode) === 'session') {\n      return;\n    }\n\n    // Re-start recording in session-mode\n    this.recordingMode = 'session';\n\n    // Once this session ends, we do not want to refresh it\n    if (this.session) {\n      this._updateUserActivity(activityTime);\n      this._updateSessionActivity(activityTime);\n      this._maybeSaveSession();\n    }\n\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n  public addUpdate(cb: AddUpdateCallback): void {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'buffer'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'buffer') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n  public triggerUserActivity(): void {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._checkSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Updates the user activity timestamp *without* resuming\n   * recording. Some user events (e.g. keydown) can be create\n   * low-value replays that only contain the keypress as a\n   * breadcrumb. Instead this would require other events to\n   * create a new replay after a session has expired.\n   */\n  public updateUserActivity(): void {\n    this._updateUserActivity();\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n  public conditionalFlush(): Promise<void> {\n    if (this.recordingMode === 'buffer') {\n      return Promise.resolve();\n    }\n\n    return this.flushImmediate();\n  }\n\n  /**\n   * Flush using debounce flush\n   */\n  public flush(): Promise<void> {\n    return this._debouncedFlush() as Promise<void>;\n  }\n\n  /**\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of mulitple flushes happening closely together.\n   */\n  public flushImmediate(): Promise<void> {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush() as Promise<void>;\n  }\n\n  /**\n   * Cancels queued up flushes.\n   */\n  public cancelFlush(): void {\n    this._debouncedFlush.cancel();\n  }\n\n  /** Get the current sesion (=replay) ID */\n  public getSessionId(): string | undefined {\n    return this.session && this.session.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n  public checkAndHandleExpiredSession(): boolean | void {\n    // Prevent starting a new session if the last user activity is older than\n    // SESSION_IDLE_PAUSE_DURATION. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (\n      this._lastActivity &&\n      isExpired(this._lastActivity, this.timeouts.sessionIdlePause) &&\n      this.session &&\n      this.session.sampled === 'session'\n    ) {\n      // Pause recording only for session-based replays. Otherwise, resuming\n      // will create a new replay and will conflict with users who only choose\n      // to record error-based replays only. (e.g. the resumed replay will not\n      // contain a reference to an error)\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._checkSession()) {\n      // Check session handles the refreshing itself\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n  public setInitialState(): void {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    // Reset _context as well\n    this._clearContext();\n\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = Date.now();\n    this._context.urls.push(url);\n  }\n\n  /**\n   * Add a breadcrumb event, that may be throttled.\n   * If it was throttled, we add a custom breadcrumb to indicate that.\n   */\n  public throttledAddEvent(\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ): typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null> {\n    const res = this._throttledAddEvent(event, isCheckout);\n\n    // If this is THROTTLED, it means we have throttled the event for the first time\n    // In this case, we want to add a breadcrumb indicating that something was skipped\n    if (res === THROTTLED) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.throttled',\n      });\n\n      this.addUpdate(() => {\n        // Return `false` if the event _was_ added, as that means we schedule a flush\n        return !addEventSync(this, {\n          type: ReplayEventTypeCustom,\n          timestamp: breadcrumb.timestamp || 0,\n          data: {\n            tag: 'breadcrumb',\n            payload: breadcrumb,\n            metric: true,\n          },\n        });\n      });\n    }\n\n    return res;\n  }\n\n  /**\n   * This will get the parametrized route name of the current page.\n   * This is only available if performance is enabled, and if an instrumented router is used.\n   */\n  public getCurrentRoute(): string | undefined {\n    // eslint-disable-next-line deprecation/deprecation\n    const lastTransaction = this.lastTransaction || getCurrentScope().getTransaction();\n\n    const attributes = (lastTransaction && spanToJSON(lastTransaction).data) || {};\n    const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n    if (!lastTransaction || !source || !['route', 'custom'].includes(source)) {\n      return undefined;\n    }\n\n    return spanToJSON(lastTransaction).description;\n  }\n\n  /**\n   * Initialize and start all listeners to varying events (DOM,\n   * Performance Observer, Recording, Sentry SDK, etc)\n   */\n  private _initializeRecording(): void {\n    this.setInitialState();\n\n    // this method is generally called on page load or manually - in both cases\n    // we should treat it as an activity\n    this._updateSessionActivity();\n\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression,\n      workerUrl: this._options.workerUrl,\n    });\n\n    this._removeListeners();\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n    this._isPaused = false;\n\n    this.startRecording();\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n  private _handleException(error: unknown): void {\n    DEBUG_BUILD && logger.error('[Replay]', error);\n\n    if (DEBUG_BUILD && this._options._experiments && this._options._experiments.captureExceptions) {\n      captureException(error);\n    }\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   */\n  private _initializeSessionForSampling(previousSessionId?: string): void {\n    // Whenever there is _any_ error sample rate, we always allow buffering\n    // Because we decide on sampling when an error occurs, we need to buffer at all times if sampling for errors\n    const allowBuffering = this._options.errorSampleRate > 0;\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n        previousSessionId,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: this._options.sessionSampleRate,\n        allowBuffering,\n      },\n    );\n\n    this.session = session;\n  }\n\n  /**\n   * Checks and potentially refreshes the current session.\n   * Returns false if session is not recorded.\n   */\n  private _checkSession(): boolean {\n    // If there is no session yet, we do not want to refresh anything\n    // This should generally not happen, but to be safe....\n    if (!this.session) {\n      return false;\n    }\n\n    const currentSession = this.session;\n\n    if (\n      shouldRefreshSession(currentSession, {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n      })\n    ) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._refreshSession(currentSession);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Refresh a session with a new one.\n   * This stops the current session (without forcing a flush, as that would never work since we are expired),\n   * and then does a new sampling based on the refreshed session.\n   */\n  private async _refreshSession(session: Session): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n    await this.stop({ reason: 'refresh session' });\n    this.initializeSampling(session.id);\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n  private _addListeners(): void {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n      WINDOW.addEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.addListeners();\n      }\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this);\n\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n\n    this._performanceCleanupCallback = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n  private _removeListeners(): void {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n      WINDOW.removeEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.removeListeners();\n      }\n\n      if (this._performanceCleanupCallback) {\n        this._performanceCleanupCallback();\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n  private _handleVisibilityChange: () => void = () => {\n    if (WINDOW.document.visibilityState === 'visible') {\n      this._doChangeToForegroundTasks();\n    } else {\n      this._doChangeToBackgroundTasks();\n    }\n  };\n\n  /**\n   * Handle when page is blurred\n   */\n  private _handleWindowBlur: () => void = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.blur',\n    });\n\n    // Do not count blur as a user action -- it's part of the process of them\n    // leaving the page\n    this._doChangeToBackgroundTasks(breadcrumb);\n  };\n\n  /**\n   * Handle when page is focused\n   */\n  private _handleWindowFocus: () => void = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.focus',\n    });\n\n    // Do not count focus as a user action -- instead wait until they focus and\n    // interactive with page\n    this._doChangeToForegroundTasks(breadcrumb);\n  };\n\n  /** Ensure page remains active when a key is pressed. */\n  private _handleKeyboardEvent: (event: KeyboardEvent) => void = (event: KeyboardEvent) => {\n    handleKeyboardEvent(this, event);\n  };\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n  private _doChangeToBackgroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const expired = isSessionExpired(this.session, {\n      maxReplayDuration: this._options.maxReplayDuration,\n      sessionIdleExpire: this.timeouts.sessionIdleExpire,\n    });\n\n    if (expired) {\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    void this.conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n  private _doChangeToForegroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const isSessionActive = this.checkAndHandleExpiredSession();\n\n    if (!isSessionActive) {\n      // If the user has come back to the page within SESSION_IDLE_PAUSE_DURATION\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      logInfo('[Replay] Document has become active, but session has expired');\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n  private _updateUserActivity(_lastActivity: number = Date.now()): void {\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n  private _updateSessionActivity(_lastActivity: number = Date.now()): void {\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n  private _createCustomBreadcrumb(breadcrumb: ReplayBreadcrumbFrame): void {\n    this.addUpdate(() => {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.throttledAddEvent({\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb,\n        },\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEntries`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n  private _addPerformanceEntries(): Promise<Array<AddEventResult | null>> {\n    const performanceEntries = createPerformanceEntries(this.performanceEntries).concat(this.replayPerformanceEntries);\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    return Promise.all(createPerformanceSpans(this, performanceEntries));\n  }\n\n  /**\n   * Clear _context\n   */\n  private _clearContext(): void {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n  }\n\n  /** Update the initial timestamp based on the buffer content. */\n  private _updateInitialTimestampFromEventBuffer(): void {\n    const { session, eventBuffer } = this;\n    if (!session || !eventBuffer) {\n      return;\n    }\n\n    // we only ever update this on the initial segment\n    if (session.segmentId) {\n      return;\n    }\n\n    const earliestEvent = eventBuffer.getEarliestTimestamp();\n    if (earliestEvent && earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = earliestEvent;\n    }\n  }\n\n  /**\n   * Return and clear _context\n   */\n  private _popEventContext(): PopEventContext {\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds),\n      traceIds: Array.from(this._context.traceIds),\n      urls: this._context.urls,\n    };\n\n    this._clearContext();\n\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n  private async _runFlush(): Promise<void> {\n    const replayId = this.getSessionId();\n\n    if (!this.session || !this.eventBuffer || !replayId) {\n      DEBUG_BUILD && logger.error('[Replay] No session or eventBuffer found to flush.');\n      return;\n    }\n\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer || !this.eventBuffer.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n\n    // if this changed in the meanwhile, e.g. because the session was refreshed or similar, we abort here\n    if (replayId !== this.getSessionId()) {\n      return;\n    }\n\n    try {\n      // This uses the data from the eventBuffer, so we need to call this before `finish()\n      this._updateInitialTimestampFromEventBuffer();\n\n      const timestamp = Date.now();\n\n      // Check total duration again, to avoid sending outdated stuff\n      // We leave 30s wiggle room to accomodate late flushing etc.\n      // This _could_ happen when the browser is suspended during flushing, in which case we just want to stop\n      if (timestamp - this._context.initialTimestamp > this._options.maxReplayDuration + 30_000) {\n        throw new Error('Session is too long, not sending replay');\n      }\n\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        eventContext,\n        session: this.session,\n        options: this.getOptions(),\n        timestamp,\n      });\n    } catch (err) {\n      this._handleException(err);\n\n      // This means we retried 3 times and all of them failed,\n      // or we ran into a problem we don't want to retry, like rate limiting.\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'sendReplay' });\n\n      const client = getClient();\n\n      if (client) {\n        client.recordDroppedEvent('send_error', 'replay');\n      }\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n  private _flush = async ({\n    force = false,\n  }: {\n    /**\n     * If true, flush while ignoring the `_isEnabled` state of\n     * Replay integration. (By default, flush is noop if integration\n     * is stopped).\n     */\n    force?: boolean;\n  } = {}): Promise<void> => {\n    if (!this._isEnabled && !force) {\n      // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n      return;\n    }\n\n    if (!this.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.error('[Replay] Attempting to finish replay event after session expired.');\n      return;\n    }\n\n    if (!this.session) {\n      // should never happen, as we would have bailed out before\n      return;\n    }\n\n    const start = this.session.started;\n    const now = Date.now();\n    const duration = now - start;\n\n    // A flush is about to happen, cancel any queued flushes\n    this._debouncedFlush.cancel();\n\n    // If session is too short, or too long (allow some wiggle room over maxReplayDuration), do not send it\n    // This _should_ not happen, but it may happen if flush is triggered due to a page activity change or similar\n    const tooShort = duration < this._options.minReplayDuration;\n    const tooLong = duration > this._options.maxReplayDuration + 5_000;\n    if (tooShort || tooLong) {\n      logInfo(\n        `[Replay] Session duration (${Math.floor(duration / 1000)}s) is too ${\n          tooShort ? 'short' : 'long'\n        }, not sending replay.`,\n        this._options._experiments.traceInternals,\n      );\n\n      if (tooShort) {\n        this._debouncedFlush();\n      }\n      return;\n    }\n\n    const eventBuffer = this.eventBuffer;\n    if (eventBuffer && this.session.segmentId === 0 && !eventBuffer.hasCheckout) {\n      logInfo('[Replay] Flushing initial segment without checkout.', this._options._experiments.traceInternals);\n      // TODO FN: Evaluate if we want to stop here, or remove this again?\n    }\n\n    // this._flushLock acts as a lock so that future calls to `_flush()`\n    // will be blocked until this promise resolves\n    if (!this._flushLock) {\n      this._flushLock = this._runFlush();\n      await this._flushLock;\n      this._flushLock = undefined;\n      return;\n    }\n\n    // Wait for previous flush to finish, then call the debounced `_flush()`.\n    // It's possible there are other flush requests queued and waiting for it\n    // to resolve. We want to reduce all outstanding requests (as well as any\n    // new flush requests that occur within a second of the locked flush\n    // completing) into a single flush.\n\n    try {\n      await this._flushLock;\n    } catch (err) {\n      DEBUG_BUILD && logger.error(err);\n    } finally {\n      this._debouncedFlush();\n    }\n  };\n\n  /** Save the session, if it is sticky */\n  private _maybeSaveSession(): void {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n\n  /** Handler for rrweb.record.onMutation */\n  private _onMutationHandler = (mutations: unknown[]): boolean => {\n    const count = mutations.length;\n\n    const mutationLimit = this._options.mutationLimit;\n    const mutationBreadcrumbLimit = this._options.mutationBreadcrumbLimit;\n    const overMutationLimit = mutationLimit && count > mutationLimit;\n\n    // Create a breadcrumb if a lot of mutations happen at the same time\n    // We can show this in the UI as an information with potential performance improvements\n    if (count > mutationBreadcrumbLimit || overMutationLimit) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.mutations',\n        data: {\n          count,\n          limit: overMutationLimit,\n        },\n      });\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Stop replay if over the mutation limit\n    if (overMutationLimit) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'mutationLimit', forceFlush: this.recordingMode === 'session' });\n      return false;\n    }\n\n    // `true` means we use the regular mutation handling by rrweb\n    return true;\n  };\n}\n","type DebouncedCallback = {\n  (): void | unknown;\n  flush: () => void | unknown;\n  cancel: () => void;\n};\ntype CallbackFunction = () => unknown;\ntype DebounceOptions = { maxWait?: number };\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nexport function debounce(func: CallbackFunction, wait: number, options?: DebounceOptions): DebouncedCallback {\n  let callbackReturnValue: unknown;\n\n  let timerId: ReturnType<typeof setTimeout> | undefined;\n  let maxTimerId: ReturnType<typeof setTimeout> | undefined;\n\n  const maxWait = options && options.maxWait ? Math.max(options.maxWait, wait) : 0;\n\n  function invokeFunc(): unknown {\n    cancelTimers();\n    callbackReturnValue = func();\n    return callbackReturnValue;\n  }\n\n  function cancelTimers(): void {\n    timerId !== undefined && clearTimeout(timerId);\n    maxTimerId !== undefined && clearTimeout(maxTimerId);\n    timerId = maxTimerId = undefined;\n  }\n\n  function flush(): unknown {\n    if (timerId !== undefined || maxTimerId !== undefined) {\n      return invokeFunc();\n    }\n    return callbackReturnValue;\n  }\n\n  function debounced(): unknown {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(invokeFunc, wait);\n\n    if (maxWait && maxTimerId === undefined) {\n      maxTimerId = setTimeout(invokeFunc, maxWait);\n    }\n\n    return callbackReturnValue;\n  }\n\n  debounced.cancel = cancelTimers;\n  debounced.flush = flush;\n  return debounced;\n}\n","import { consoleSandbox } from '@sentry/utils';\n\nimport type { DeprecatedPrivacyOptions, ReplayIntegrationPrivacyOptions } from '../types';\n\ntype GetPrivacyOptions = Required<Omit<ReplayIntegrationPrivacyOptions, 'maskFn'>> &\n  Omit<DeprecatedPrivacyOptions, 'maskInputOptions'>;\ninterface GetPrivacyReturn {\n  maskTextSelector: string;\n  unmaskTextSelector: string;\n  blockSelector: string;\n  unblockSelector: string;\n  ignoreSelector: string;\n\n  blockClass?: RegExp;\n  maskTextClass?: RegExp;\n}\n\nfunction getOption(\n  selectors: string[],\n  defaultSelectors: string[],\n  deprecatedClassOption?: string | RegExp,\n  deprecatedSelectorOption?: string,\n): string {\n  const deprecatedSelectors = typeof deprecatedSelectorOption === 'string' ? deprecatedSelectorOption.split(',') : [];\n\n  const allSelectors = [\n    ...selectors,\n    // @deprecated\n    ...deprecatedSelectors,\n\n    // sentry defaults\n    ...defaultSelectors,\n  ];\n\n  // @deprecated\n  if (typeof deprecatedClassOption !== 'undefined') {\n    // NOTE: No support for RegExp\n    if (typeof deprecatedClassOption === 'string') {\n      allSelectors.push(`.${deprecatedClassOption}`);\n    }\n\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[Replay] You are using a deprecated configuration item for privacy. Read the documentation on how to use the new privacy configuration.',\n      );\n    });\n  }\n\n  return allSelectors.join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nexport function getPrivacyOptions({\n  mask,\n  unmask,\n  block,\n  unblock,\n  ignore,\n\n  // eslint-disable-next-line deprecation/deprecation\n  blockClass,\n  // eslint-disable-next-line deprecation/deprecation\n  blockSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextClass,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  ignoreClass,\n}: GetPrivacyOptions): GetPrivacyReturn {\n  const defaultBlockedElements = ['base[href=\"/\"]'];\n\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]'], maskTextClass, maskTextSelector);\n  const unmaskSelector = getOption(unmask, ['.sentry-unmask', '[data-sentry-unmask]']);\n\n  const options: GetPrivacyReturn = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n\n    blockSelector: getOption(\n      block,\n      ['.sentry-block', '[data-sentry-block]', ...defaultBlockedElements],\n      blockClass,\n      blockSelector,\n    ),\n    unblockSelector: getOption(unblock, ['.sentry-unblock', '[data-sentry-unblock]']),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]', 'input[type=\"file\"]'], ignoreClass),\n  };\n\n  if (blockClass instanceof RegExp) {\n    options.blockClass = blockClass;\n  }\n\n  if (maskTextClass instanceof RegExp) {\n    options.maskTextClass = maskTextClass;\n  }\n\n  return options;\n}\n","import { getClient } from '@sentry/core';\nimport type { BrowserClientReplayOptions, Integration, IntegrationFn } from '@sentry/types';\nimport { consoleSandbox, dropUndefinedKeys, isBrowser } from '@sentry/utils';\n\nimport {\n  DEFAULT_FLUSH_MAX_DELAY,\n  DEFAULT_FLUSH_MIN_DELAY,\n  MAX_REPLAY_DURATION,\n  MIN_REPLAY_DURATION,\n  MIN_REPLAY_DURATION_LIMIT,\n} from './constants';\nimport { ReplayContainer } from './replay';\nimport type {\n  RecordingOptions,\n  ReplayCanvasIntegrationOptions,\n  ReplayConfiguration,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n} from './types';\nimport { getPrivacyOptions } from './util/getPrivacyOptions';\nimport { maskAttribute } from './util/maskAttribute';\n\nconst MEDIA_SELECTORS =\n  'img,image,svg,video,object,picture,embed,map,audio,link[rel=\"icon\"],link[rel=\"apple-touch-icon\"]';\n\nconst DEFAULT_NETWORK_HEADERS = ['content-length', 'content-type', 'accept'];\n\nlet _initialized = false;\n\ntype InitialReplayPluginOptions = Omit<ReplayPluginOptions, 'sessionSampleRate' | 'errorSampleRate'> &\n  Partial<Pick<ReplayPluginOptions, 'sessionSampleRate' | 'errorSampleRate'>>;\n\nexport const replayIntegration = ((options?: ReplayConfiguration) => {\n  // eslint-disable-next-line deprecation/deprecation\n  return new Replay(options);\n}) satisfies IntegrationFn;\n\n/**\n * The main replay integration class, to be passed to `init({  integrations: [] })`.\n * @deprecated Use `replayIntegration()` instead.\n */\nexport class Replay implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Replay';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n  private readonly _initialOptions: InitialReplayPluginOptions;\n\n  private _replay?: ReplayContainer;\n\n  public constructor({\n    flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n    flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n    minReplayDuration = MIN_REPLAY_DURATION,\n    maxReplayDuration = MAX_REPLAY_DURATION,\n    stickySession = true,\n    useCompression = true,\n    workerUrl,\n    _experiments = {},\n    sessionSampleRate,\n    errorSampleRate,\n    maskAllText = true,\n    maskAllInputs = true,\n    blockAllMedia = true,\n\n    mutationBreadcrumbLimit = 750,\n    mutationLimit = 10_000,\n\n    slowClickTimeout = 7_000,\n    slowClickIgnoreSelectors = [],\n\n    networkDetailAllowUrls = [],\n    networkDetailDenyUrls = [],\n    networkCaptureBodies = true,\n    networkRequestHeaders = [],\n    networkResponseHeaders = [],\n\n    mask = [],\n    maskAttributes = ['title', 'placeholder'],\n    unmask = [],\n    block = [],\n    unblock = [],\n    ignore = [],\n    maskFn,\n\n    beforeAddRecordingEvent,\n    beforeErrorSampling,\n\n    // eslint-disable-next-line deprecation/deprecation\n    blockClass,\n    // eslint-disable-next-line deprecation/deprecation\n    blockSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    maskInputOptions,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextClass,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    ignoreClass,\n  }: ReplayConfiguration = {}) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.name = Replay.id;\n\n    const privacyOptions = getPrivacyOptions({\n      mask,\n      unmask,\n      block,\n      unblock,\n      ignore,\n      blockClass,\n      blockSelector,\n      maskTextClass,\n      maskTextSelector,\n      ignoreClass,\n    });\n\n    this._recordingOptions = {\n      maskAllInputs,\n      maskAllText,\n      maskInputOptions: { ...(maskInputOptions || {}), password: true },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n      maskAttributeFn: (key: string, value: string, el: HTMLElement): string =>\n        maskAttribute({\n          maskAttributes,\n          maskAllText,\n          privacyOptions,\n          key,\n          value,\n          el,\n        }),\n\n      ...privacyOptions,\n\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true,\n      errorHandler: (err: Error & { __rrweb__?: boolean }) => {\n        try {\n          err.__rrweb__ = true;\n        } catch (error) {\n          // ignore errors here\n          // this can happen if the error is frozen or does not allow mutation for other reasons\n        }\n      },\n    };\n\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      minReplayDuration: Math.min(minReplayDuration, MIN_REPLAY_DURATION_LIMIT),\n      maxReplayDuration: Math.min(maxReplayDuration, MAX_REPLAY_DURATION),\n      stickySession,\n      sessionSampleRate,\n      errorSampleRate,\n      useCompression,\n      workerUrl,\n      blockAllMedia,\n      maskAllInputs,\n      maskAllText,\n      mutationBreadcrumbLimit,\n      mutationLimit,\n      slowClickTimeout,\n      slowClickIgnoreSelectors,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders: _getMergedNetworkHeaders(networkRequestHeaders),\n      networkResponseHeaders: _getMergedNetworkHeaders(networkResponseHeaders),\n      beforeAddRecordingEvent,\n      beforeErrorSampling,\n\n      _experiments,\n    };\n\n    if (typeof sessionSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`sessionSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysSessionSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysSessionSampleRate: ${sessionSampleRate} })`,\n      );\n\n      this._initialOptions.sessionSampleRate = sessionSampleRate;\n    }\n\n    if (typeof errorSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`errorSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysOnErrorSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysOnErrorSampleRate: ${errorSampleRate} })`,\n      );\n\n      this._initialOptions.errorSampleRate = errorSampleRate;\n    }\n\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector\n        ? MEDIA_SELECTORS\n        : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n\n    if (this._isInitialized && isBrowser()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n  protected get _isInitialized(): boolean {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n  protected set _isInitialized(value: boolean) {\n    _initialized = value;\n  }\n\n  /**\n   * Setup and initialize replay container\n   */\n  public setupOnce(): void {\n    if (!isBrowser()) {\n      return;\n    }\n\n    this._setup();\n\n    // Once upon a time, we tried to create a transaction in `setupOnce` and it would\n    // potentially create a transaction before some native SDK integrations have run\n    // and applied their own global event processor. An example is:\n    // https://github.com/getsentry/sentry-javascript/blob/b47ceafbdac7f8b99093ce6023726ad4687edc48/packages/browser/src/integrations/useragent.ts\n    //\n    // So we call `this._initialize()` in next event loop as a workaround to wait for other\n    // global event processors to finish. This is no longer needed, but keeping it\n    // here to avoid any future issues.\n    setTimeout(() => this._initialize());\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.start();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, until an error occurs.\n   */\n  public startBuffering(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.startBuffering();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public stop(): Promise<void> {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    return this._replay.stop({ forceFlush: this._replay.recordingMode === 'session' });\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public flush(options?: SendBufferedReplayOptions): Promise<void> {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return Promise.resolve();\n    }\n\n    return this._replay.sendBufferedReplayOrFlush(options);\n  }\n\n  /**\n   * Get the current session ID.\n   */\n  public getReplayId(): string | undefined {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return;\n    }\n\n    return this._replay.getSessionId();\n  }\n\n  /**\n   * Initializes replay.\n   */\n  protected _initialize(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    // We have to run this in _initialize, because this runs in setTimeout\n    // So when this runs all integrations have been added\n    // Before this, we cannot access integrations on the client,\n    // so we need to mutate the options here\n    this._maybeLoadFromReplayCanvasIntegration();\n\n    this._replay.initializeSampling();\n  }\n\n  /** Setup the integration. */\n  private _setup(): void {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions);\n\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions,\n    });\n  }\n\n  /** Get canvas options from ReplayCanvas integration, if it is also added. */\n  private _maybeLoadFromReplayCanvasIntegration(): void {\n    // To save bundle size, we skip checking for stuff here\n    // and instead just try-catch everything - as generally this should all be defined\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n    try {\n      const client = getClient()!;\n      const canvasIntegration = client.getIntegrationByName!('ReplayCanvas') as Integration & {\n        getOptions(): ReplayCanvasIntegrationOptions;\n      };\n      if (!canvasIntegration) {\n        return;\n      }\n\n      this._replay!['_canvas'] = canvasIntegration.getOptions();\n    } catch {\n      // ignore errors here\n    }\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n  }\n}\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions: InitialReplayPluginOptions): ReplayPluginOptions {\n  const client = getClient();\n  const opt = client && (client.getOptions() as BrowserClientReplayOptions);\n\n  const finalOptions = { sessionSampleRate: 0, errorSampleRate: 0, ...dropUndefinedKeys(initialOptions) };\n\n  if (!opt) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn('SDK client is not available.');\n    });\n    return finalOptions;\n  }\n\n  if (\n    initialOptions.sessionSampleRate == null && // TODO remove once deprecated rates are removed\n    initialOptions.errorSampleRate == null && // TODO remove once deprecated rates are removed\n    opt.replaysSessionSampleRate == null &&\n    opt.replaysOnErrorSampleRate == null\n  ) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.',\n      );\n    });\n  }\n\n  if (typeof opt.replaysSessionSampleRate === 'number') {\n    finalOptions.sessionSampleRate = opt.replaysSessionSampleRate;\n  }\n\n  if (typeof opt.replaysOnErrorSampleRate === 'number') {\n    finalOptions.errorSampleRate = opt.replaysOnErrorSampleRate;\n  }\n\n  return finalOptions;\n}\n\nfunction _getMergedNetworkHeaders(headers: string[]): string[] {\n  return [...DEFAULT_NETWORK_HEADERS, ...headers.map(header => header.toLowerCase())];\n}\n","import type { getPrivacyOptions } from './getPrivacyOptions';\n\ninterface MaskAttributeParams {\n  maskAttributes: string[];\n  maskAllText: boolean;\n  privacyOptions: ReturnType<typeof getPrivacyOptions>;\n  key: string;\n  value: string;\n  el: HTMLElement;\n}\n\n/**\n * Masks an attribute if necessary, otherwise return attribute value as-is.\n */\nexport function maskAttribute({\n  el,\n  key,\n  maskAttributes,\n  maskAllText,\n  privacyOptions,\n  value,\n}: MaskAttributeParams): string {\n  // We only mask attributes if `maskAllText` is true\n  if (!maskAllText) {\n    return value;\n  }\n\n  // unmaskTextSelector takes precendence\n  if (privacyOptions.unmaskTextSelector && el.matches(privacyOptions.unmaskTextSelector)) {\n    return value;\n  }\n\n  if (\n    maskAttributes.includes(key) ||\n    // Need to mask `value` attribute for `<input>` if it's a button-like\n    // type\n    (key === 'value' && el.tagName === 'INPUT' && ['submit', 'button'].includes(el.getAttribute('type') || ''))\n  ) {\n    return value.replace(/[\\S]/g, '*');\n  }\n\n  return value;\n}\n","import { getClient } from '@sentry/core';\nimport type { replayIntegration } from '../integration';\n\n/**\n * This is a small utility to get a type-safe instance of the Replay integration.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getReplay(): ReturnType<typeof replayIntegration> | undefined {\n  const client = getClient();\n  return (\n    client && client.getIntegrationByName && client.getIntegrationByName<ReturnType<typeof replayIntegration>>('Replay')\n  );\n}\n","/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n","import { encode } from './../../../../../../ext/base64-arraybuffer/dist/base64-arraybuffer.es5.js';\n\nconst canvasVarMap = new Map();\r\nfunction variableListFor(ctx, ctor) {\r\n    let contextMap = canvasVarMap.get(ctx);\r\n    if (!contextMap) {\r\n        contextMap = new Map();\r\n        canvasVarMap.set(ctx, contextMap);\r\n    }\r\n    if (!contextMap.has(ctor)) {\r\n        contextMap.set(ctor, []);\r\n    }\r\n    return contextMap.get(ctor);\r\n}\r\nconst saveWebGLVar = (value, win, ctx) => {\r\n    if (!value ||\r\n        !(isInstanceOfWebGLObject(value, win) || typeof value === 'object'))\r\n        return;\r\n    const name = value.constructor.name;\r\n    const list = variableListFor(ctx, name);\r\n    let index = list.indexOf(value);\r\n    if (index === -1) {\r\n        index = list.length;\r\n        list.push(value);\r\n    }\r\n    return index;\r\n};\r\nfunction serializeArg(value, win, ctx) {\r\n    if (value instanceof Array) {\r\n        return value.map((arg) => serializeArg(arg, win, ctx));\r\n    }\r\n    else if (value === null) {\r\n        return value;\r\n    }\r\n    else if (value instanceof Float32Array ||\r\n        value instanceof Float64Array ||\r\n        value instanceof Int32Array ||\r\n        value instanceof Uint32Array ||\r\n        value instanceof Uint8Array ||\r\n        value instanceof Uint16Array ||\r\n        value instanceof Int16Array ||\r\n        value instanceof Int8Array ||\r\n        value instanceof Uint8ClampedArray) {\r\n        const name = value.constructor.name;\r\n        return {\r\n            rr_type: name,\r\n            args: [Object.values(value)],\r\n        };\r\n    }\r\n    else if (value instanceof ArrayBuffer) {\r\n        const name = value.constructor.name;\r\n        const base64 = encode(value);\r\n        return {\r\n            rr_type: name,\r\n            base64,\r\n        };\r\n    }\r\n    else if (value instanceof DataView) {\r\n        const name = value.constructor.name;\r\n        return {\r\n            rr_type: name,\r\n            args: [\r\n                serializeArg(value.buffer, win, ctx),\r\n                value.byteOffset,\r\n                value.byteLength,\r\n            ],\r\n        };\r\n    }\r\n    else if (value instanceof HTMLImageElement) {\r\n        const name = value.constructor.name;\r\n        const { src } = value;\r\n        return {\r\n            rr_type: name,\r\n            src,\r\n        };\r\n    }\r\n    else if (value instanceof HTMLCanvasElement) {\r\n        const name = 'HTMLImageElement';\r\n        const src = value.toDataURL();\r\n        return {\r\n            rr_type: name,\r\n            src,\r\n        };\r\n    }\r\n    else if (value instanceof ImageData) {\r\n        const name = value.constructor.name;\r\n        return {\r\n            rr_type: name,\r\n            args: [serializeArg(value.data, win, ctx), value.width, value.height],\r\n        };\r\n    }\r\n    else if (isInstanceOfWebGLObject(value, win) || typeof value === 'object') {\r\n        const name = value.constructor.name;\r\n        const index = saveWebGLVar(value, win, ctx);\r\n        return {\r\n            rr_type: name,\r\n            index: index,\r\n        };\r\n    }\r\n    return value;\r\n}\r\nconst serializeArgs = (args, win, ctx) => {\r\n    return args.map((arg) => serializeArg(arg, win, ctx));\r\n};\r\nconst isInstanceOfWebGLObject = (value, win) => {\r\n    const webGLConstructorNames = [\r\n        'WebGLActiveInfo',\r\n        'WebGLBuffer',\r\n        'WebGLFramebuffer',\r\n        'WebGLProgram',\r\n        'WebGLRenderbuffer',\r\n        'WebGLShader',\r\n        'WebGLShaderPrecisionFormat',\r\n        'WebGLTexture',\r\n        'WebGLUniformLocation',\r\n        'WebGLVertexArrayObject',\r\n        'WebGLVertexArrayObjectOES',\r\n    ];\r\n    const supportedWebGLConstructorNames = webGLConstructorNames.filter((name) => typeof win[name] === 'function');\r\n    return Boolean(supportedWebGLConstructorNames.find((name) => value instanceof win[name]));\r\n};\n\nexport { isInstanceOfWebGLObject, saveWebGLVar, serializeArg, serializeArgs, variableListFor };\n","import { patch, isBlocked } from '../../../utils.js';\n\nfunction getNormalizedContextName(contextType) {\r\n    return contextType === 'experimental-webgl' ? 'webgl' : contextType;\r\n}\r\nfunction initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, setPreserveDrawingBufferToTrue) {\r\n    const handlers = [];\r\n    try {\r\n        const restoreHandler = patch(win.HTMLCanvasElement.prototype, 'getContext', function (original) {\r\n            return function (contextType, ...args) {\r\n                if (!isBlocked(this, blockClass, blockSelector, unblockSelector, true)) {\r\n                    const ctxName = getNormalizedContextName(contextType);\r\n                    if (!('__context' in this))\r\n                        this.__context = ctxName;\r\n                    if (setPreserveDrawingBufferToTrue &&\r\n                        ['webgl', 'webgl2'].includes(ctxName)) {\r\n                        if (args[0] && typeof args[0] === 'object') {\r\n                            const contextAttributes = args[0];\r\n                            if (!contextAttributes.preserveDrawingBuffer) {\r\n                                contextAttributes.preserveDrawingBuffer = true;\r\n                            }\r\n                        }\r\n                        else {\r\n                            args.splice(0, 1, {\r\n                                preserveDrawingBuffer: true,\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                return original.apply(this, [contextType, ...args]);\r\n            };\r\n        });\r\n        handlers.push(restoreHandler);\r\n    }\r\n    catch {\r\n        console.error('failed to patch HTMLCanvasElement.prototype.getContext');\r\n    }\r\n    return () => {\r\n        handlers.forEach((h) => h());\r\n    };\r\n}\n\nexport { initCanvasContextObserver as default };\n","import { CanvasContext } from '../../../../../types/dist/rrweb-types.js';\nimport { patch, isBlocked, hookSetter } from '../../../utils.js';\nimport { saveWebGLVar, serializeArgs } from './serialize-args.js';\n\nfunction patchGLPrototype(prototype, type, cb, blockClass, blockSelector, unblockSelector, mirror, win) {\r\n    const handlers = [];\r\n    const props = Object.getOwnPropertyNames(prototype);\r\n    for (const prop of props) {\r\n        if ([\r\n            'isContextLost',\r\n            'canvas',\r\n            'drawingBufferWidth',\r\n            'drawingBufferHeight',\r\n        ].includes(prop)) {\r\n            continue;\r\n        }\r\n        try {\r\n            if (typeof prototype[prop] !== 'function') {\r\n                continue;\r\n            }\r\n            const restoreHandler = patch(prototype, prop, function (original) {\r\n                return function (...args) {\r\n                    const result = original.apply(this, args);\r\n                    saveWebGLVar(result, win, this);\r\n                    if ('tagName' in this.canvas &&\r\n                        !isBlocked(this.canvas, blockClass, blockSelector, unblockSelector, true)) {\r\n                        const recordArgs = serializeArgs(args, win, this);\r\n                        const mutation = {\r\n                            type,\r\n                            property: prop,\r\n                            args: recordArgs,\r\n                        };\r\n                        cb(this.canvas, mutation);\r\n                    }\r\n                    return result;\r\n                };\r\n            });\r\n            handlers.push(restoreHandler);\r\n        }\r\n        catch {\r\n            const hookHandler = hookSetter(prototype, prop, {\r\n                set(v) {\r\n                    cb(this.canvas, {\r\n                        type,\r\n                        property: prop,\r\n                        args: [v],\r\n                        setter: true,\r\n                    });\r\n                },\r\n            });\r\n            handlers.push(hookHandler);\r\n        }\r\n    }\r\n    return handlers;\r\n}\r\nfunction initCanvasWebGLMutationObserver(cb, win, blockClass, blockSelector, unblockSelector, mirror) {\r\n    const handlers = [];\r\n    handlers.push(...patchGLPrototype(win.WebGLRenderingContext.prototype, CanvasContext.WebGL, cb, blockClass, blockSelector, unblockSelector, mirror, win));\r\n    if (typeof win.WebGL2RenderingContext !== 'undefined') {\r\n        handlers.push(...patchGLPrototype(win.WebGL2RenderingContext.prototype, CanvasContext.WebGL2, cb, blockClass, blockSelector, unblockSelector, mirror, win));\r\n    }\r\n    return () => {\r\n        handlers.forEach((h) => h());\r\n    };\r\n}\n\nexport { initCanvasWebGLMutationObserver as default };\n","import { CanvasContext } from '../../../../../types/dist/rrweb-types.js';\nimport { patch, isBlocked, hookSetter } from '../../../utils.js';\nimport { serializeArgs } from './serialize-args.js';\n\nfunction initCanvas2DMutationObserver(cb, win, blockClass, blockSelector, unblockSelector) {\r\n    const handlers = [];\r\n    const props2D = Object.getOwnPropertyNames(win.CanvasRenderingContext2D.prototype);\r\n    for (const prop of props2D) {\r\n        try {\r\n            if (typeof win.CanvasRenderingContext2D.prototype[prop] !== 'function') {\r\n                continue;\r\n            }\r\n            const restoreHandler = patch(win.CanvasRenderingContext2D.prototype, prop, function (original) {\r\n                return function (...args) {\r\n                    if (!isBlocked(this.canvas, blockClass, blockSelector, unblockSelector, true)) {\r\n                        setTimeout(() => {\r\n                            const recordArgs = serializeArgs(args, win, this);\r\n                            cb(this.canvas, {\r\n                                type: CanvasContext['2D'],\r\n                                property: prop,\r\n                                args: recordArgs,\r\n                            });\r\n                        }, 0);\r\n                    }\r\n                    return original.apply(this, args);\r\n                };\r\n            });\r\n            handlers.push(restoreHandler);\r\n        }\r\n        catch {\r\n            const hookHandler = hookSetter(win.CanvasRenderingContext2D.prototype, prop, {\r\n                set(v) {\r\n                    cb(this.canvas, {\r\n                        type: CanvasContext['2D'],\r\n                        property: prop,\r\n                        args: [v],\r\n                        setter: true,\r\n                    });\r\n                },\r\n            });\r\n            handlers.push(hookHandler);\r\n        }\r\n    }\r\n    return () => {\r\n        handlers.forEach((h) => h());\r\n    };\r\n}\n\nexport { initCanvas2DMutationObserver as default };\n","import r from './image-bitmap-data-url-worker.js';\n\nfunction t(){const t=new Blob([r]);return URL.createObjectURL(t)}\n\nexport { t as getImageBitmapDataUrlWorkerURL };\n","var r = `for(var e=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",t=\"undefined\"==typeof Uint8Array?[]:new Uint8Array(256),a=0;a<64;a++)t[e.charCodeAt(a)]=a;var n=function(t){var a,n=new Uint8Array(t),r=n.length,s=\"\";for(a=0;a<r;a+=3)s+=e[n[a]>>2],s+=e[(3&n[a])<<4|n[a+1]>>4],s+=e[(15&n[a+1])<<2|n[a+2]>>6],s+=e[63&n[a+2]];return r%3==2?s=s.substring(0,s.length-1)+\"=\":r%3==1&&(s=s.substring(0,s.length-2)+\"==\"),s};const r=new Map,s=new Map;const i=self;i.onmessage=async function(e){if(!(\"OffscreenCanvas\"in globalThis))return i.postMessage({id:e.data.id});{const{id:t,bitmap:a,width:o,height:f,maxCanvasSize:c,dataURLOptions:g}=e.data,u=async function(e,t,a){const r=e+\"-\"+t;if(\"OffscreenCanvas\"in globalThis){if(s.has(r))return s.get(r);const i=new OffscreenCanvas(e,t);i.getContext(\"2d\");const o=await i.convertToBlob(a),f=await o.arrayBuffer(),c=n(f);return s.set(r,c),c}return\"\"}(o,f,g),[h,d]=function(e,t,a){if(!a)return[e,t];const[n,r]=a;if(e<=n&&t<=r)return[e,t];let s=e,i=t;return s>n&&(i=Math.floor(n*t/e),s=n),i>r&&(s=Math.floor(r*e/t),i=r),[s,i]}(o,f,c),l=new OffscreenCanvas(h,d),w=l.getContext(\"bitmaprenderer\"),p=h===o&&d===f?a:await createImageBitmap(a,{resizeWidth:h,resizeHeight:d,resizeQuality:\"low\"});w.transferFromImageBitmap(p),a.close();const y=await l.convertToBlob(g),v=y.type,b=await y.arrayBuffer(),m=n(b);if(p.close(),!r.has(t)&&await u===m)return r.set(t,m),i.postMessage({id:t});if(r.get(t)===m)return i.postMessage({id:t});i.postMessage({id:t,type:v,base64:m,width:o,height:f}),r.set(t,m)}};`;\n\nexport { r as default };\n","import { CanvasManager } from '@sentry-internal/rrweb';\nimport { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { InternalCanvasManagerInterface, InternalCanvasManagerOptions } from '@sentry/replay';\nimport type { Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\n\ninterface ReplayCanvasOptions {\n  enableManualSnapshot?: boolean;\n  maxCanvasSize?: [width: number, height: number];\n  quality: 'low' | 'medium' | 'high';\n}\n\ntype GetCanvasManager = (options: InternalCanvasManagerOptions) => InternalCanvasManagerInterface;\nexport interface ReplayCanvasIntegrationOptions {\n  enableManualSnapshot?: boolean;\n  maxCanvasSize?: number;\n  recordCanvas: true;\n  getCanvasManager: GetCanvasManager;\n  sampling: {\n    canvas: number;\n  };\n  dataURLOptions: {\n    type: string;\n    quality: number;\n  };\n}\n\nconst CANVAS_QUALITY = {\n  low: {\n    sampling: {\n      canvas: 1,\n    },\n    dataURLOptions: {\n      type: 'image/webp',\n      quality: 0.25,\n    },\n  },\n  medium: {\n    sampling: {\n      canvas: 2,\n    },\n    dataURLOptions: {\n      type: 'image/webp',\n      quality: 0.4,\n    },\n  },\n  high: {\n    sampling: {\n      canvas: 4,\n    },\n    dataURLOptions: {\n      type: 'image/webp',\n      quality: 0.5,\n    },\n  },\n};\n\nconst INTEGRATION_NAME = 'ReplayCanvas';\nconst DEFAULT_MAX_CANVAS_SIZE = 1280;\n\n/** Exported only for type safe tests. */\nexport const _replayCanvasIntegration = ((options: Partial<ReplayCanvasOptions> = {}) => {\n  const [maxCanvasWidth, maxCanvasHeight] = options.maxCanvasSize || [];\n  const _canvasOptions = {\n    quality: options.quality || 'medium',\n    enableManualSnapshot: options.enableManualSnapshot,\n    maxCanvasSize: [\n      maxCanvasWidth ? Math.min(maxCanvasWidth, DEFAULT_MAX_CANVAS_SIZE) : DEFAULT_MAX_CANVAS_SIZE,\n      maxCanvasHeight ? Math.min(maxCanvasHeight, DEFAULT_MAX_CANVAS_SIZE) : DEFAULT_MAX_CANVAS_SIZE,\n    ] as [number, number],\n  };\n\n  let canvasManagerResolve: (value: CanvasManager) => void;\n  const _canvasManager: Promise<CanvasManager> = new Promise(resolve => (canvasManagerResolve = resolve));\n\n  return {\n    name: INTEGRATION_NAME,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    setupOnce() {},\n    getOptions(): ReplayCanvasIntegrationOptions {\n      const { quality, enableManualSnapshot, maxCanvasSize } = _canvasOptions;\n\n      return {\n        enableManualSnapshot,\n        recordCanvas: true,\n        getCanvasManager: (getCanvasManagerOptions: InternalCanvasManagerOptions) => {\n          const manager = new CanvasManager({\n            ...getCanvasManagerOptions,\n            enableManualSnapshot,\n            maxCanvasSize,\n            errorHandler: (err: unknown) => {\n              try {\n                if (typeof err === 'object') {\n                  (err as Error & { __rrweb__?: boolean }).__rrweb__ = true;\n                }\n              } catch (error) {\n                // ignore errors here\n                // this can happen if the error is frozen or does not allow mutation for other reasons\n              }\n            },\n          });\n          canvasManagerResolve(manager);\n          return manager;\n        },\n        ...(CANVAS_QUALITY[quality || 'medium'] || CANVAS_QUALITY.medium),\n      };\n    },\n    async snapshot(canvasElement?: HTMLCanvasElement) {\n      const canvasManager = await _canvasManager;\n      canvasManager.snapshot(canvasElement);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Add this in addition to `replayIntegration()` to enable canvas recording.\n */\nexport const replayCanvasIntegration = defineIntegration(_replayCanvasIntegration);\n\n/**\n * @deprecated Use `replayCanvasIntegration()` instead\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const ReplayCanvas = convertIntegrationFnToClass(INTEGRATION_NAME, replayCanvasIntegration) as IntegrationClass<\n  Integration & {\n    getOptions: () => ReplayCanvasIntegrationOptions;\n  }\n>;\n","import { createEventEnvelope, getClient, withScope } from '@sentry/core';\nimport type { FeedbackEvent, TransportMakeRequestResponse } from '@sentry/types';\n\nimport { FEEDBACK_API_SOURCE, FEEDBACK_WIDGET_SOURCE } from '../constants';\nimport type { SendFeedbackData, SendFeedbackOptions } from '../types';\nimport { prepareFeedbackEvent } from './prepareFeedbackEvent';\n\n/**\n * Send feedback using transport\n */\nexport async function sendFeedbackRequest(\n  { feedback: { message, email, name, source, url } }: SendFeedbackData,\n  { includeReplay = true }: SendFeedbackOptions = {},\n): Promise<void | TransportMakeRequestResponse> {\n  const client = getClient();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !transport || !dsn) {\n    return;\n  }\n\n  const baseEvent: FeedbackEvent = {\n    contexts: {\n      feedback: {\n        contact_email: email,\n        name,\n        message,\n        url,\n        source,\n      },\n    },\n    type: 'feedback',\n  };\n\n  return withScope(async scope => {\n    // No use for breadcrumbs in feedback\n    scope.clearBreadcrumbs();\n\n    if ([FEEDBACK_API_SOURCE, FEEDBACK_WIDGET_SOURCE].includes(String(source))) {\n      scope.setLevel('info');\n    }\n\n    const feedbackEvent = await prepareFeedbackEvent({\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      scope: scope as any,\n      client,\n      event: baseEvent,\n    });\n\n    if (!feedbackEvent) {\n      return;\n    }\n\n    if (client.emit) {\n      client.emit('beforeSendFeedback', feedbackEvent, { includeReplay: Boolean(includeReplay) });\n    }\n\n    const envelope = createEventEnvelope(feedbackEvent, dsn, client.getOptions()._metadata, client.getOptions().tunnel);\n\n    let response: void | TransportMakeRequestResponse;\n\n    try {\n      response = await transport.send(envelope);\n    } catch (err) {\n      const error = new Error('Unable to send Feedback');\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-expect-error This needs lib es2022 and newer\n        error.cause = err;\n      } catch {\n        // nothing to do\n      }\n      throw error;\n    }\n\n    // TODO (v8): we can remove this guard once transport.send's type signature doesn't include void anymore\n    if (!response) {\n      return;\n    }\n\n    // Require valid status codes, otherwise can assume feedback was not sent successfully\n    if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n      throw new Error('Unable to send Feedback');\n    }\n\n    return response;\n  });\n}\n\n/*\n * For reference, the fully built event looks something like this:\n * {\n *     \"type\": \"feedback\",\n *     \"event_id\": \"d2132d31b39445f1938d7e21b6bf0ec4\",\n *     \"timestamp\": 1597977777.6189718,\n *     \"dist\": \"1.12\",\n *     \"platform\": \"javascript\",\n *     \"environment\": \"production\",\n *     \"release\": 42,\n *     \"tags\": {\"transaction\": \"/organizations/:orgId/performance/:eventSlug/\"},\n *     \"sdk\": {\"name\": \"name\", \"version\": \"version\"},\n *     \"user\": {\n *         \"id\": \"123\",\n *         \"username\": \"user\",\n *         \"email\": \"user@site.com\",\n *         \"ip_address\": \"192.168.11.12\",\n *     },\n *     \"request\": {\n *         \"url\": None,\n *         \"headers\": {\n *             \"user-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.5 Safari/605.1.15\"\n *         },\n *     },\n *     \"contexts\": {\n *         \"feedback\": {\n *             \"message\": \"test message\",\n *             \"contact_email\": \"test@example.com\",\n *             \"type\": \"feedback\",\n *         },\n *         \"trace\": {\n *             \"trace_id\": \"4C79F60C11214EB38604F4AE0781BFB2\",\n *             \"span_id\": \"FA90FDEAD5F74052\",\n *             \"type\": \"trace\",\n *         },\n *         \"replay\": {\n *             \"replay_id\": \"e2d42047b1c5431c8cba85ee2a8ab25d\",\n *         },\n *     },\n *   }\n */\n","import type { Scope } from '@sentry/core';\nimport { getIsolationScope } from '@sentry/core';\nimport { prepareEvent } from '@sentry/core';\nimport type { Client, FeedbackEvent } from '@sentry/types';\n\ninterface PrepareFeedbackEventParams {\n  client: Client;\n  event: FeedbackEvent;\n  scope: Scope;\n}\n/**\n * Prepare a feedback event & enrich it with the SDK metadata.\n */\nexport async function prepareFeedbackEvent({\n  client,\n  scope,\n  event,\n}: PrepareFeedbackEventParams): Promise<FeedbackEvent | null> {\n  const eventHint = {};\n  if (client.emit) {\n    client.emit('preprocessEvent', event, eventHint);\n  }\n\n  const preparedEvent = (await prepareEvent(\n    client.getOptions(),\n    event,\n    eventHint,\n    scope,\n    client,\n    getIsolationScope(),\n  )) as FeedbackEvent | null;\n\n  if (preparedEvent === null) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'feedback', event);\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  return preparedEvent;\n}\n","import { getLocationHref } from '@sentry/utils';\n\nimport { FEEDBACK_API_SOURCE } from './constants';\nimport type { SendFeedbackOptions } from './types';\nimport { sendFeedbackRequest } from './util/sendFeedbackRequest';\n\ninterface SendFeedbackParams {\n  message: string;\n  name?: string;\n  email?: string;\n  url?: string;\n  source?: string;\n}\n\n/**\n * Public API to send a Feedback item to Sentry\n */\nexport function sendFeedback(\n  { name, email, message, source = FEEDBACK_API_SOURCE, url = getLocationHref() }: SendFeedbackParams,\n  options: SendFeedbackOptions = {},\n): ReturnType<typeof sendFeedbackRequest> {\n  if (!message) {\n    throw new Error('Unable to submit feedback with empty message');\n  }\n\n  return sendFeedbackRequest(\n    {\n      feedback: {\n        name,\n        email,\n        message,\n        url,\n        source,\n      },\n    },\n    options,\n  );\n}\n","import type { FeedbackInternalOptions, OptionalFeedbackConfiguration } from '../types';\n\n/**\n * Quick and dirty deep merge for the Feedback integration options\n */\nexport function mergeOptions(\n  defaultOptions: FeedbackInternalOptions,\n  optionOverrides: OptionalFeedbackConfiguration,\n): FeedbackInternalOptions {\n  return {\n    ...defaultOptions,\n    ...optionOverrides,\n    themeDark: {\n      ...defaultOptions.themeDark,\n      ...optionOverrides.themeDark,\n    },\n    themeLight: {\n      ...defaultOptions.themeLight,\n      ...optionOverrides.themeLight,\n    },\n  };\n}\n","import type { FeedbackTheme, FeedbackThemes } from '../types';\n\nfunction getThemedCssVariables(theme: FeedbackTheme): string {\n  return `\n  --background: ${theme.background};\n  --background-hover: ${theme.backgroundHover};\n  --foreground: ${theme.foreground};\n  --error: ${theme.error};\n  --success: ${theme.success};\n  --border: ${theme.border};\n  --border-radius: ${theme.borderRadius};\n  --box-shadow: ${theme.boxShadow};\n\n  --submit-background: ${theme.submitBackground};\n  --submit-background-hover: ${theme.submitBackgroundHover};\n  --submit-border: ${theme.submitBorder};\n  --submit-outline-focus: ${theme.submitOutlineFocus};\n  --submit-foreground: ${theme.submitForeground};\n  --submit-foreground-hover: ${theme.submitForegroundHover};\n\n  --cancel-background: ${theme.cancelBackground};\n  --cancel-background-hover: ${theme.cancelBackgroundHover};\n  --cancel-border: ${theme.cancelBorder};\n  --cancel-outline-focus: ${theme.cancelOutlineFocus};\n  --cancel-foreground: ${theme.cancelForeground};\n  --cancel-foreground-hover: ${theme.cancelForegroundHover};\n\n  --input-background: ${theme.inputBackground};\n  --input-foreground: ${theme.inputForeground};\n  --input-border: ${theme.inputBorder};\n  --input-outline-focus: ${theme.inputOutlineFocus};\n\n  --form-border-radius: ${theme.formBorderRadius};\n  --form-content-border-radius: ${theme.formContentBorderRadius};\n  `;\n}\n\n/**\n * Creates <style> element for widget actor (button that opens the dialog)\n */\nexport function createMainStyles(\n  d: Document,\n  colorScheme: 'system' | 'dark' | 'light',\n  themes: FeedbackThemes,\n): HTMLStyleElement {\n  const style = d.createElement('style');\n  style.textContent = `\n:host {\n  --bottom: 1rem;\n  --right: 1rem;\n  --top: auto;\n  --left: auto;\n  --z-index: 100000;\n  --font-family: ${themes.light.fontFamily};\n  --font-size: ${themes.light.fontSize};\n\n  position: fixed;\n  left: var(--left);\n  right: var(--right);\n  bottom: var(--bottom);\n  top: var(--top);\n  z-index: var(--z-index);\n\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n\n  ${getThemedCssVariables(colorScheme === 'dark' ? themes.dark : themes.light)}\n}\n\n${\n  colorScheme === 'system'\n    ? `\n@media (prefers-color-scheme: dark) {\n  :host {\n    ${getThemedCssVariables(themes.dark)}\n  }\n}`\n    : ''\n}\n}`;\n\n  return style;\n}\n","import { logger } from '@sentry/utils';\n\nimport { WINDOW } from '../constants';\nimport type { FeedbackInternalOptions } from '../types';\nimport { createDialogStyles } from './Dialog.css';\nimport { createMainStyles } from './Main.css';\n\ntype CreateShadowHostParams = Pick<FeedbackInternalOptions, 'id' | 'colorScheme' | 'themeDark' | 'themeLight'>;\n\n/**\n * Creates shadow host\n */\nexport function createShadowHost({ id, colorScheme, themeDark, themeLight }: CreateShadowHostParams): {\n  shadow: ShadowRoot;\n  host: HTMLDivElement;\n} {\n  try {\n    const doc = WINDOW.document;\n\n    // Create the host\n    const host = doc.createElement('div');\n    host.id = id;\n\n    // Create the shadow root\n    const shadow = host.attachShadow({ mode: 'open' });\n\n    shadow.appendChild(createMainStyles(doc, colorScheme, { dark: themeDark, light: themeLight }));\n    shadow.appendChild(createDialogStyles(doc));\n\n    return { shadow, host };\n  } catch {\n    // Shadow DOM probably not supported\n    logger.warn('[Feedback] Browser does not support shadow DOM API');\n    throw new Error('Browser does not support shadow DOM API.');\n  }\n}\n","/**\n * Creates <style> element for widget dialog\n */\nexport function createDialogStyles(d: Document): HTMLStyleElement {\n  const style = d.createElement('style');\n\n  style.textContent = `\n.dialog {\n  line-height: 25px;\n  background-color: rgba(0, 0, 0, 0.05);\n  border: none;\n  position: fixed;\n  inset: 0;\n  z-index: 10000;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 1;\n  transition: opacity 0.2s ease-in-out;\n}\n\n.dialog:not([open]) {\n  opacity: 0;\n  pointer-events: none;\n  visibility: hidden;\n}\n.dialog:not([open]) .dialog__content {\n  transform: translate(0, -16px) scale(0.98);\n}\n\n.dialog__content {\n  position: fixed;\n  left: var(--left);\n  right: var(--right);\n  bottom: var(--bottom);\n  top: var(--top);\n\n  border: var(--border);\n  border-radius: var(--form-border-radius);\n  background-color: var(--background);\n  color: var(--foreground);\n\n  width: 320px;\n  max-width: 100%;\n  max-height: calc(100% - 2rem);\n  display: flex;\n  flex-direction: column;\n  box-shadow: var(--box-shadow);\n  transition: transform 0.2s ease-in-out;\n  transform: translate(0, 0) scale(1);\n}\n\n.dialog__header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 20px;\n  font-weight: 600;\n  padding: 24px 24px 0 24px;\n  margin: 0;\n  margin-bottom: 16px;\n}\n\n.brand-link {\n  display: inline-flex;\n}\n\n.error {\n  color: var(--error);\n  margin-bottom: 16px;\n}\n\n.form {\n  display: grid;\n  overflow: auto;\n  flex-direction: column;\n  gap: 16px;\n  padding: 0 24px 24px;\n}\n\n.form__error-container {\n  color: var(--error);\n}\n\n.form__error-container--hidden {\n  display: none;\n}\n\n.form__label {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin: 0px;\n}\n\n.form__label__text {\n  display: grid;\n  gap: 4px;\n  align-items: center;\n  grid-auto-flow: column;\n  grid-auto-columns: max-content;\n}\n\n.form__label__text--required {\n  font-size: 0.85em;\n}\n\n.form__input {\n  line-height: inherit;\n  background-color: var(--input-background);\n  box-sizing: border-box;\n  border: var(--input-border);\n  border-radius: var(--form-content-border-radius);\n  color: var(--input-foreground);\n  font-family: inherit;\n  font-size: var(--font-size);\n  font-weight: 500;\n  padding: 6px 12px;\n}\n\n.form__input::placeholder {\n  color: var(--input-foreground);\n  opacity: 0.65;\n}\n\n.form__input:focus-visible {\n  outline: 1px auto var(--input-outline-focus);\n}\n\n.form__input--textarea {\n  font-family: inherit;\n  resize: vertical;\n}\n\n.btn-group {\n  display: grid;\n  gap: 8px;\n  margin-top: 8px;\n}\n\n.btn {\n  line-height: inherit;\n  border: var(--cancel-border);\n  border-radius: var(--form-content-border-radius);\n  cursor: pointer;\n  font-family: inherit;\n  font-size: var(--font-size);\n  font-weight: 600;\n  padding: 6px 16px;\n}\n.btn[disabled] {\n  opacity: 0.6;\n  pointer-events: none;\n}\n\n.btn--primary {\n  background-color: var(--submit-background);\n  border-color: var(--submit-border);\n  color: var(--submit-foreground);\n}\n.btn--primary:hover {\n  background-color: var(--submit-background-hover);\n  color: var(--submit-foreground-hover);\n}\n.btn--primary:focus-visible {\n  outline: 1px auto var(--submit-outline-focus);\n}\n\n.btn--default {\n  background-color: var(--cancel-background);\n  color: var(--cancel-foreground);\n  font-weight: 500;\n}\n.btn--default:hover {\n  background-color: var(--cancel-background-hover);\n  color: var(--cancel-foreground-hover);\n}\n.btn--default:focus-visible {\n  outline: 1px auto var(--cancel-outline-focus);\n}\n\n.success-message {\n  background-color: var(--background);\n  border: var(--border);\n  border-radius: var(--border-radius);\n  box-shadow: var(--box-shadow);\n  font-weight: 600;\n  color: var(--success);\n  padding: 12px 24px;\n  line-height: 25px;\n  display: grid;\n  align-items: center;\n  grid-auto-flow: column;\n  gap: 6px;\n  cursor: default;\n}\n\n.success-icon path {\n  fill: var(--success);\n}\n`;\n\n  return style;\n}\n","import type { TransportMakeRequestResponse } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { FEEDBACK_WIDGET_SOURCE } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { sendFeedback } from '../sendFeedback';\nimport type { FeedbackFormData, SendFeedbackOptions } from '../types';\nimport type { DialogComponent } from '../widget/Dialog';\n\n/**\n * Handles UI behavior of dialog when feedback is submitted, calls\n * `sendFeedback` to send feedback.\n */\nexport async function handleFeedbackSubmit(\n  dialog: DialogComponent | null,\n  feedback: FeedbackFormData,\n  options?: SendFeedbackOptions,\n): Promise<TransportMakeRequestResponse | void> {\n  if (!dialog) {\n    // Not sure when this would happen\n    return;\n  }\n\n  const showFetchError = (): void => {\n    if (!dialog) {\n      return;\n    }\n    dialog.showError('There was a problem submitting feedback, please wait and try again.');\n  };\n\n  dialog.hideError();\n\n  try {\n    const resp = await sendFeedback({ ...feedback, source: FEEDBACK_WIDGET_SOURCE }, options);\n\n    // Success!\n    return resp;\n  } catch (err) {\n    DEBUG_BUILD && logger.error(err);\n    showFetchError();\n  }\n}\n","/**\n * Helper function to set a dict of attributes on element (w/ specified namespace)\n */\nexport function setAttributesNS<T extends SVGElement>(el: T, attributes: Record<string, string>): T {\n  Object.entries(attributes).forEach(([key, val]) => {\n    el.setAttributeNS(null, key, val);\n  });\n  return el;\n}\n","import { WINDOW } from '../constants';\nimport { setAttributesNS } from '../util/setAttributesNS';\n\nconst SIZE = 20;\nconst XMLNS = 'http://www.w3.org/2000/svg';\n\ninterface IconReturn {\n  el: SVGElement;\n}\n\n/**\n * Feedback Icon\n */\nexport function Icon(): IconReturn {\n  const createElementNS = <K extends keyof SVGElementTagNameMap>(tagName: K): SVGElementTagNameMap[K] =>\n    WINDOW.document.createElementNS(XMLNS, tagName);\n  const svg = setAttributesNS(createElementNS('svg'), {\n    class: 'feedback-icon',\n    width: `${SIZE}`,\n    height: `${SIZE}`,\n    viewBox: `0 0 ${SIZE} ${SIZE}`,\n    fill: 'none',\n  });\n\n  const g = setAttributesNS(createElementNS('g'), {\n    clipPath: 'url(#clip0_57_80)',\n  });\n\n  const path = setAttributesNS(createElementNS('path'), {\n    ['fill-rule']: 'evenodd',\n    ['clip-rule']: 'evenodd',\n    d: 'M15.6622 15H12.3997C12.2129 14.9959 12.031 14.9396 11.8747 14.8375L8.04965 12.2H7.49956V19.1C7.4875 19.3348 7.3888 19.5568 7.22256 19.723C7.05632 19.8892 6.83435 19.9879 6.59956 20H2.04956C1.80193 19.9968 1.56535 19.8969 1.39023 19.7218C1.21511 19.5467 1.1153 19.3101 1.11206 19.0625V12.2H0.949652C0.824431 12.2017 0.700142 12.1783 0.584123 12.1311C0.468104 12.084 0.362708 12.014 0.274155 11.9255C0.185602 11.8369 0.115689 11.7315 0.0685419 11.6155C0.0213952 11.4995 -0.00202913 11.3752 -0.00034808 11.25V3.75C-0.00900498 3.62067 0.0092504 3.49095 0.0532651 3.36904C0.0972798 3.24712 0.166097 3.13566 0.255372 3.04168C0.344646 2.94771 0.452437 2.87327 0.571937 2.82307C0.691437 2.77286 0.82005 2.74798 0.949652 2.75H8.04965L11.8747 0.1625C12.031 0.0603649 12.2129 0.00407221 12.3997 0H15.6622C15.9098 0.00323746 16.1464 0.103049 16.3215 0.278167C16.4966 0.453286 16.5964 0.689866 16.5997 0.9375V3.25269C17.3969 3.42959 18.1345 3.83026 18.7211 4.41679C19.5322 5.22788 19.9878 6.32796 19.9878 7.47502C19.9878 8.62209 19.5322 9.72217 18.7211 10.5333C18.1345 11.1198 17.3969 11.5205 16.5997 11.6974V14.0125C16.6047 14.1393 16.5842 14.2659 16.5395 14.3847C16.4948 14.5035 16.4268 14.6121 16.3394 14.7042C16.252 14.7962 16.147 14.8698 16.0307 14.9206C15.9144 14.9714 15.7891 14.9984 15.6622 15ZM1.89695 10.325H1.88715V4.625H8.33715C8.52423 4.62301 8.70666 4.56654 8.86215 4.4625L12.6872 1.875H14.7247V13.125H12.6872L8.86215 10.4875C8.70666 10.3835 8.52423 10.327 8.33715 10.325H2.20217C2.15205 10.3167 2.10102 10.3125 2.04956 10.3125C1.9981 10.3125 1.94708 10.3167 1.89695 10.325ZM2.98706 12.2V18.1625H5.66206V12.2H2.98706ZM16.5997 9.93612V5.01393C16.6536 5.02355 16.7072 5.03495 16.7605 5.04814C17.1202 5.13709 17.4556 5.30487 17.7425 5.53934C18.0293 5.77381 18.2605 6.06912 18.4192 6.40389C18.578 6.73866 18.6603 7.10452 18.6603 7.47502C18.6603 7.84552 18.578 8.21139 18.4192 8.54616C18.2605 8.88093 18.0293 9.17624 17.7425 9.41071C17.4556 9.64518 17.1202 9.81296 16.7605 9.90191C16.7072 9.91509 16.6536 9.9265 16.5997 9.93612Z',\n  });\n  svg.appendChild(g).appendChild(path);\n\n  const speakerDefs = createElementNS('defs');\n  const speakerClipPathDef = setAttributesNS(createElementNS('clipPath'), {\n    id: 'clip0_57_80',\n  });\n\n  const speakerRect = setAttributesNS(createElementNS('rect'), {\n    width: `${SIZE}`,\n    height: `${SIZE}`,\n    fill: 'white',\n  });\n\n  speakerClipPathDef.appendChild(speakerRect);\n  speakerDefs.appendChild(speakerClipPathDef);\n\n  svg.appendChild(speakerDefs).appendChild(speakerClipPathDef).appendChild(speakerRect);\n\n  return {\n    get el() {\n      return svg;\n    },\n  };\n}\n","import { WINDOW } from '../../constants';\n\n/**\n * Helper function to create an element. Could be used as a JSX factory\n * (i.e. React-like syntax).\n */\nexport function createElement<K extends keyof HTMLElementTagNameMap>(\n  tagName: K,\n  attributes: { [key: string]: string | boolean | EventListenerOrEventListenerObject } | null,\n  ...children: any\n): HTMLElementTagNameMap[K] {\n  const doc = WINDOW.document;\n  const element = doc.createElement(tagName);\n\n  if (attributes) {\n    Object.entries(attributes).forEach(([attribute, attributeValue]) => {\n      if (attribute === 'className' && typeof attributeValue === 'string') {\n        // JSX does not allow class as a valid name\n        element.setAttribute('class', attributeValue);\n      } else if (typeof attributeValue === 'boolean' && attributeValue) {\n        element.setAttribute(attribute, '');\n      } else if (typeof attributeValue === 'string') {\n        element.setAttribute(attribute, attributeValue);\n      } else if (attribute.startsWith('on') && typeof attributeValue === 'function') {\n        element.addEventListener(attribute.substring(2).toLowerCase(), attributeValue);\n      }\n    });\n  }\n  for (const child of children) {\n    appendChild(element, child);\n  }\n\n  return element;\n}\n\nfunction appendChild(parent: Node, child: any): void {\n  const doc = WINDOW.document;\n  if (typeof child === 'undefined' || child === null) {\n    return;\n  }\n\n  if (Array.isArray(child)) {\n    for (const value of child) {\n      appendChild(parent, value);\n    }\n  } else if (child === false) {\n    // do nothing if child evaluated to false\n  } else if (typeof child === 'string') {\n    parent.appendChild(doc.createTextNode(child));\n  } else if (child instanceof Node) {\n    parent.appendChild(child);\n  } else {\n    parent.appendChild(doc.createTextNode(String(child)));\n  }\n}\n","import type { FeedbackComponent, FeedbackInternalOptions } from '../types';\nimport { Icon } from './Icon';\nimport { createElement } from './util/createElement';\n\nexport interface ActorProps extends Pick<FeedbackInternalOptions, 'buttonLabel'> {\n  onClick?: (e: MouseEvent) => void;\n}\n\nexport interface ActorComponent extends FeedbackComponent<HTMLButtonElement> {\n  /**\n   * Shows the actor element\n   */\n  show: () => void;\n  /**\n   * Hides the actor element\n   */\n  hide: () => void;\n}\n\n/**\n *\n */\nexport function Actor({ buttonLabel, onClick }: ActorProps): ActorComponent {\n  function _handleClick(e: MouseEvent): void {\n    onClick && onClick(e);\n  }\n\n  const el = createElement(\n    'button',\n    {\n      type: 'button',\n      className: 'widget__actor',\n      ['aria-label']: buttonLabel,\n      ['aria-hidden']: 'false',\n    },\n    Icon().el,\n    buttonLabel\n      ? createElement(\n          'span',\n          {\n            className: 'widget__actor__text',\n          },\n          buttonLabel,\n        )\n      : null,\n  );\n\n  el.addEventListener('click', _handleClick);\n\n  return {\n    get el() {\n      return el;\n    },\n    show: (): void => {\n      el.classList.remove('widget__actor--hidden');\n      el.setAttribute('aria-hidden', 'false');\n    },\n    hide: (): void => {\n      el.classList.add('widget__actor--hidden');\n      el.setAttribute('aria-hidden', 'true');\n    },\n  };\n}\n","import type { FeedbackComponent, FeedbackFormData, FeedbackInternalOptions, FeedbackTextConfiguration } from '../types';\nimport { SubmitButton } from './SubmitButton';\nimport { createElement } from './util/createElement';\n\nexport interface FormComponentProps\n  extends Pick<\n    FeedbackInternalOptions,\n    | 'showName'\n    | 'showEmail'\n    | 'isNameRequired'\n    | 'isEmailRequired'\n    | Exclude<keyof FeedbackTextConfiguration, 'buttonLabel' | 'formTitle' | 'successMessageText'>\n  > {\n  /**\n   * A default name value to render the input with. Empty strings are ok.\n   */\n  defaultName: string;\n  /**\n   * A default email value to render the input with. Empty strings are ok.\n   */\n  defaultEmail: string;\n  onCancel?: (e: Event) => void;\n  onSubmit?: (feedback: FeedbackFormData) => void;\n}\n\ninterface FormComponent extends FeedbackComponent<HTMLFormElement> {\n  /**\n   * Shows the error message\n   */\n  showError: (message: string) => void;\n\n  /**\n   * Hides the error message\n   */\n  hideError: () => void;\n}\n\nfunction retrieveStringValue(formData: FormData, key: string): string {\n  const value = formData.get(key);\n  if (typeof value === 'string') {\n    return value.trim();\n  }\n  return '';\n}\n\n/**\n * Creates the form element\n */\nexport function Form({\n  nameLabel,\n  namePlaceholder,\n  emailLabel,\n  emailPlaceholder,\n  messageLabel,\n  messagePlaceholder,\n  isRequiredLabel,\n  cancelButtonLabel,\n  submitButtonLabel,\n\n  showName,\n  showEmail,\n  isNameRequired,\n  isEmailRequired,\n\n  defaultName,\n  defaultEmail,\n  onCancel,\n  onSubmit,\n}: FormComponentProps): FormComponent {\n  const { el: submitEl } = SubmitButton({\n    label: submitButtonLabel,\n  });\n\n  function handleSubmit(e: Event): void {\n    e.preventDefault();\n\n    if (!(e.target instanceof HTMLFormElement)) {\n      return;\n    }\n\n    try {\n      if (onSubmit) {\n        const formData = new FormData(e.target as HTMLFormElement);\n        const feedback = {\n          name: retrieveStringValue(formData, 'name'),\n          email: retrieveStringValue(formData, 'email'),\n          message: retrieveStringValue(formData, 'message'),\n        };\n\n        onSubmit(feedback);\n      }\n    } catch {\n      // pass\n    }\n  }\n\n  const errorEl = createElement('div', {\n    className: 'form__error-container form__error-container--hidden',\n    ['aria-hidden']: 'true',\n  });\n\n  function showError(message: string): void {\n    errorEl.textContent = message;\n    errorEl.classList.remove('form__error-container--hidden');\n    errorEl.setAttribute('aria-hidden', 'false');\n  }\n\n  function hideError(): void {\n    errorEl.textContent = '';\n    errorEl.classList.add('form__error-container--hidden');\n    errorEl.setAttribute('aria-hidden', 'true');\n  }\n\n  const nameEl = createElement('input', {\n    id: 'name',\n    type: showName ? 'text' : 'hidden',\n    ['aria-hidden']: showName ? 'false' : 'true',\n    name: 'name',\n    required: isNameRequired,\n    className: 'form__input',\n    placeholder: namePlaceholder,\n    value: defaultName,\n  });\n\n  const emailEl = createElement('input', {\n    id: 'email',\n    type: showEmail ? 'text' : 'hidden',\n    ['aria-hidden']: showEmail ? 'false' : 'true',\n    name: 'email',\n    required: isEmailRequired,\n    className: 'form__input',\n    placeholder: emailPlaceholder,\n    value: defaultEmail,\n  });\n\n  const messageEl = createElement('textarea', {\n    id: 'message',\n    autoFocus: 'true',\n    rows: '5',\n    name: 'message',\n    required: true,\n    className: 'form__input form__input--textarea',\n    placeholder: messagePlaceholder,\n  });\n\n  const cancelEl = createElement(\n    'button',\n    {\n      type: 'button',\n      className: 'btn btn--default',\n      ['aria-label']: cancelButtonLabel,\n      onClick: (e: Event) => {\n        onCancel && onCancel(e);\n      },\n    },\n    cancelButtonLabel,\n  );\n\n  const formEl = createElement(\n    'form',\n    {\n      className: 'form',\n      onSubmit: handleSubmit,\n    },\n    [\n      errorEl,\n\n      showName &&\n        createElement(\n          'label',\n          {\n            htmlFor: 'name',\n            className: 'form__label',\n          },\n          [\n            createElement(\n              'span',\n              { className: 'form__label__text' },\n              nameLabel,\n              isNameRequired &&\n                createElement('span', { className: 'form__label__text--required' }, ` ${isRequiredLabel}`),\n            ),\n            nameEl,\n          ],\n        ),\n      !showName && nameEl,\n\n      showEmail &&\n        createElement(\n          'label',\n          {\n            htmlFor: 'email',\n            className: 'form__label',\n          },\n          [\n            createElement(\n              'span',\n              { className: 'form__label__text' },\n              emailLabel,\n              isEmailRequired &&\n                createElement('span', { className: 'form__label__text--required' }, ` ${isRequiredLabel}`),\n            ),\n            emailEl,\n          ],\n        ),\n      !showEmail && emailEl,\n\n      createElement(\n        'label',\n        {\n          htmlFor: 'message',\n          className: 'form__label',\n        },\n        [\n          createElement(\n            'span',\n            { className: 'form__label__text' },\n            messageLabel,\n            createElement('span', { className: 'form__label__text--required' }, ` ${isRequiredLabel}`),\n          ),\n          messageEl,\n        ],\n      ),\n\n      createElement(\n        'div',\n        {\n          className: 'btn-group',\n        },\n        [submitEl, cancelEl],\n      ),\n    ],\n  );\n\n  return {\n    get el() {\n      return formEl;\n    },\n    showError,\n    hideError,\n  };\n}\n","import type { FeedbackComponent } from '../types';\nimport { createElement } from './util/createElement';\n\nexport interface SubmitButtonProps {\n  label: string;\n}\n\ntype SubmitButtonComponent = FeedbackComponent<HTMLButtonElement>;\n\n/**\n *\n */\nexport function SubmitButton({ label }: SubmitButtonProps): SubmitButtonComponent {\n  const el = createElement(\n    'button',\n    {\n      type: 'submit',\n      className: 'btn btn--primary',\n      ['aria-label']: label,\n    },\n    label,\n  );\n\n  return {\n    el,\n  };\n}\n","import { WINDOW } from '../constants';\nimport type { FeedbackInternalOptions } from '../types';\nimport { setAttributesNS } from '../util/setAttributesNS';\n\nconst XMLNS = 'http://www.w3.org/2000/svg';\n\ninterface IconReturn {\n  el: SVGElement;\n}\n\ntype Props = Pick<FeedbackInternalOptions, 'colorScheme'>;\n\n/**\n * Sentry Logo\n */\nexport function Logo({ colorScheme }: Props): IconReturn {\n  const createElementNS = <K extends keyof SVGElementTagNameMap>(tagName: K): SVGElementTagNameMap[K] =>\n    WINDOW.document.createElementNS(XMLNS, tagName);\n  const svg = setAttributesNS(createElementNS('svg'), {\n    class: 'sentry-logo',\n    width: '32',\n    height: '30',\n    viewBox: '0 0 72 66',\n    fill: 'none',\n  });\n\n  const path = setAttributesNS(createElementNS('path'), {\n    transform: 'translate(11, 11)',\n    d: 'M29,2.26a4.67,4.67,0,0,0-8,0L14.42,13.53A32.21,32.21,0,0,1,32.17,40.19H27.55A27.68,27.68,0,0,0,12.09,17.47L6,28a15.92,15.92,0,0,1,9.23,12.17H4.62A.76.76,0,0,1,4,39.06l2.94-5a10.74,10.74,0,0,0-3.36-1.9l-2.91,5a4.54,4.54,0,0,0,1.69,6.24A4.66,4.66,0,0,0,4.62,44H19.15a19.4,19.4,0,0,0-8-17.31l2.31-4A23.87,23.87,0,0,1,23.76,44H36.07a35.88,35.88,0,0,0-16.41-31.8l4.67-8a.77.77,0,0,1,1.05-.27c.53.29,20.29,34.77,20.66,35.17a.76.76,0,0,1-.68,1.13H40.6q.09,1.91,0,3.81h4.78A4.59,4.59,0,0,0,50,39.43a4.49,4.49,0,0,0-.62-2.28Z',\n  });\n  svg.append(path);\n\n  const defs = createElementNS('defs');\n  const style = createElementNS('style');\n\n  style.textContent = `\n    path {\n      fill: ${colorScheme === 'dark' ? '#fff' : '#362d59'};\n    }`;\n\n  if (colorScheme === 'system') {\n    style.textContent += `\n    @media (prefers-color-scheme: dark) {\n      path: {\n        fill: '#fff';\n      }\n    }\n    `;\n  }\n\n  defs.append(style);\n  svg.append(defs);\n\n  return {\n    get el() {\n      return svg;\n    },\n  };\n}\n","import type { FeedbackComponent, FeedbackInternalOptions } from '../types';\nimport type { FormComponentProps } from './Form';\nimport { Form } from './Form';\nimport { Logo } from './Logo';\nimport { createElement } from './util/createElement';\n\nexport interface DialogProps\n  extends FormComponentProps,\n    Pick<FeedbackInternalOptions, 'formTitle' | 'showBranding' | 'colorScheme'> {\n  onClosed?: () => void;\n}\n\nexport interface DialogComponent extends FeedbackComponent<HTMLDialogElement> {\n  /**\n   * Shows the error message\n   */\n  showError: (message: string) => void;\n\n  /**\n   * Hides the error message\n   */\n  hideError: () => void;\n\n  /**\n   * Opens and shows the dialog and form\n   */\n  open: () => void;\n\n  /**\n   * Closes the dialog and form\n   */\n  close: () => void;\n\n  /**\n   * Check if dialog is currently opened\n   */\n  checkIsOpen: () => boolean;\n}\n\n/**\n * Feedback dialog component that has the form\n */\nexport function Dialog({\n  formTitle,\n  showBranding,\n  showName,\n  showEmail,\n  isNameRequired,\n  isEmailRequired,\n  colorScheme,\n  defaultName,\n  defaultEmail,\n  onClosed,\n  onCancel,\n  onSubmit,\n  ...textLabels\n}: DialogProps): DialogComponent {\n  let el: HTMLDialogElement | null = null;\n\n  /**\n   * Handles when the dialog is clicked. In our case, the dialog is the\n   * semi-transparent bg behind the form. We want clicks outside of the form to\n   * hide the form.\n   */\n  function handleDialogClick(): void {\n    close();\n\n    // Only this should trigger `onClose`, we don't want the `close()` method to\n    // trigger it, otherwise it can cause cycles.\n    onClosed && onClosed();\n  }\n\n  /**\n   * Close the dialog\n   */\n  function close(): void {\n    if (el) {\n      el.open = false;\n    }\n  }\n\n  /**\n   * Opens the dialog\n   */\n  function open(): void {\n    if (el) {\n      el.open = true;\n    }\n  }\n\n  /**\n   * Check if dialog is currently opened\n   */\n  function checkIsOpen(): boolean {\n    return (el && el.open === true) || false;\n  }\n\n  const {\n    el: formEl,\n    showError,\n    hideError,\n  } = Form({\n    showEmail,\n    showName,\n    isEmailRequired,\n    isNameRequired,\n\n    defaultName,\n    defaultEmail,\n    onSubmit,\n    onCancel,\n    ...textLabels,\n  });\n\n  el = createElement(\n    'dialog',\n    {\n      className: 'dialog',\n      open: true,\n      onClick: handleDialogClick,\n    },\n    createElement(\n      'div',\n      {\n        className: 'dialog__content',\n        onClick: e => {\n          // Stop event propagation so clicks on content modal do not propagate to dialog (which will close dialog)\n          e.stopPropagation();\n        },\n      },\n      createElement(\n        'h2',\n        { className: 'dialog__header' },\n        formTitle,\n        showBranding &&\n          createElement(\n            'a',\n            {\n              className: 'brand-link',\n              target: '_blank',\n              href: 'https://sentry.io/welcome/',\n              title: 'Powered by Sentry',\n              rel: 'noopener noreferrer',\n            },\n            Logo({ colorScheme }).el,\n          ),\n      ),\n      formEl,\n    ),\n  );\n\n  return {\n    get el() {\n      return el;\n    },\n    showError,\n    hideError,\n    open,\n    close,\n    checkIsOpen,\n  };\n}\n","import { WINDOW } from '../constants';\nimport { setAttributesNS } from '../util/setAttributesNS';\n\nconst WIDTH = 16;\nconst HEIGHT = 17;\nconst XMLNS = 'http://www.w3.org/2000/svg';\n\ninterface IconReturn {\n  el: SVGElement;\n}\n\n/**\n * Success Icon (checkmark)\n */\nexport function SuccessIcon(): IconReturn {\n  const createElementNS = <K extends keyof SVGElementTagNameMap>(tagName: K): SVGElementTagNameMap[K] =>\n    WINDOW.document.createElementNS(XMLNS, tagName);\n  const svg = setAttributesNS(createElementNS('svg'), {\n    class: 'success-icon',\n    width: `${WIDTH}`,\n    height: `${HEIGHT}`,\n    viewBox: `0 0 ${WIDTH} ${HEIGHT}`,\n    fill: 'none',\n  });\n\n  const g = setAttributesNS(createElementNS('g'), {\n    clipPath: 'url(#clip0_57_156)',\n  });\n\n  const path2 = setAttributesNS(createElementNS('path'), {\n    ['fill-rule']: 'evenodd',\n    ['clip-rule']: 'evenodd',\n    d: 'M3.55544 15.1518C4.87103 16.0308 6.41775 16.5 8 16.5C10.1217 16.5 12.1566 15.6571 13.6569 14.1569C15.1571 12.6566 16 10.6217 16 8.5C16 6.91775 15.5308 5.37103 14.6518 4.05544C13.7727 2.73985 12.5233 1.71447 11.0615 1.10897C9.59966 0.503466 7.99113 0.34504 6.43928 0.653721C4.88743 0.962403 3.46197 1.72433 2.34315 2.84315C1.22433 3.96197 0.462403 5.38743 0.153721 6.93928C-0.15496 8.49113 0.00346625 10.0997 0.608967 11.5615C1.21447 13.0233 2.23985 14.2727 3.55544 15.1518ZM4.40546 3.1204C5.46945 2.40946 6.72036 2.03 8 2.03C9.71595 2.03 11.3616 2.71166 12.575 3.92502C13.7883 5.13838 14.47 6.78405 14.47 8.5C14.47 9.77965 14.0905 11.0306 13.3796 12.0945C12.6687 13.1585 11.6582 13.9878 10.476 14.4775C9.29373 14.9672 7.99283 15.0953 6.73777 14.8457C5.48271 14.596 4.32987 13.9798 3.42502 13.075C2.52018 12.1701 1.90397 11.0173 1.65432 9.76224C1.40468 8.50718 1.5328 7.20628 2.0225 6.02404C2.5122 4.8418 3.34148 3.83133 4.40546 3.1204Z',\n  });\n  const path = setAttributesNS(createElementNS('path'), {\n    d: 'M6.68775 12.4297C6.78586 12.4745 6.89218 12.4984 7 12.5C7.11275 12.4955 7.22315 12.4664 7.32337 12.4145C7.4236 12.3627 7.51121 12.2894 7.58 12.2L12 5.63999C12.0848 5.47724 12.1071 5.28902 12.0625 5.11098C12.0178 4.93294 11.9095 4.77744 11.7579 4.67392C11.6064 4.57041 11.4221 4.52608 11.24 4.54931C11.0579 4.57254 10.8907 4.66173 10.77 4.79999L6.88 10.57L5.13 8.56999C5.06508 8.49566 4.98613 8.43488 4.89768 8.39111C4.80922 8.34735 4.713 8.32148 4.61453 8.31498C4.51605 8.30847 4.41727 8.32147 4.32382 8.35322C4.23038 8.38497 4.14413 8.43484 4.07 8.49999C3.92511 8.63217 3.83692 8.81523 3.82387 9.01092C3.81083 9.2066 3.87393 9.39976 4 9.54999L6.43 12.24C6.50187 12.3204 6.58964 12.385 6.68775 12.4297Z',\n  });\n\n  svg.appendChild(g).append(path, path2);\n\n  const speakerDefs = createElementNS('defs');\n  const speakerClipPathDef = setAttributesNS(createElementNS('clipPath'), {\n    id: 'clip0_57_156',\n  });\n\n  const speakerRect = setAttributesNS(createElementNS('rect'), {\n    width: `${WIDTH}`,\n    height: `${WIDTH}`,\n    fill: 'white',\n    transform: 'translate(0 0.5)',\n  });\n\n  speakerClipPathDef.appendChild(speakerRect);\n  speakerDefs.appendChild(speakerClipPathDef);\n\n  svg.appendChild(speakerDefs).appendChild(speakerClipPathDef).appendChild(speakerRect);\n\n  return {\n    get el() {\n      return svg;\n    },\n  };\n}\n","import type { FeedbackComponent } from '../types';\nimport { SuccessIcon } from './SuccessIcon';\nimport { createElement } from './util/createElement';\n\nexport interface SuccessMessageProps {\n  message: string;\n  onRemove?: () => void;\n}\n\ninterface SuccessMessageComponent extends FeedbackComponent<HTMLDivElement> {\n  /**\n   * Removes the component\n   */\n  remove: () => void;\n}\n\n/**\n * Feedback dialog component that has the form\n */\nexport function SuccessMessage({ message, onRemove }: SuccessMessageProps): SuccessMessageComponent {\n  function remove(): void {\n    if (!el) {\n      return;\n    }\n\n    el.remove();\n    onRemove && onRemove();\n  }\n\n  const el = createElement(\n    'div',\n    {\n      className: 'success-message',\n      onClick: remove,\n    },\n    SuccessIcon().el,\n    message,\n  );\n\n  return {\n    el,\n    remove,\n  };\n}\n","import { getClient, getCurrentScope } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport type { FeedbackFormData, FeedbackInternalOptions, FeedbackWidget } from '../types';\nimport { handleFeedbackSubmit } from '../util/handleFeedbackSubmit';\nimport type { ActorComponent } from './Actor';\nimport { Actor } from './Actor';\nimport type { DialogComponent } from './Dialog';\nimport { Dialog } from './Dialog';\nimport { SuccessMessage } from './SuccessMessage';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\ninterface CreateWidgetParams {\n  /**\n   * Shadow DOM to append to\n   */\n  shadow: ShadowRoot;\n\n  /**\n   * Feedback integration options\n   */\n  options: FeedbackInternalOptions & { shouldCreateActor?: boolean };\n\n  /**\n   * An element to attach to, that when clicked, will open a dialog\n   */\n  attachTo?: Element;\n\n  /**\n   * If false, will not create an actor\n   */\n  shouldCreateActor?: boolean;\n}\n\n/**\n * Creates a new widget. Returns public methods that control widget behavior.\n */\nexport function createWidget({\n  shadow,\n  options: { shouldCreateActor = true, ...options },\n  attachTo,\n}: CreateWidgetParams): FeedbackWidget {\n  let actor: ActorComponent | undefined;\n  let dialog: DialogComponent | undefined;\n  let isDialogOpen: boolean = false;\n\n  /**\n   * Show the success message for 5 seconds\n   */\n  function showSuccessMessage(): void {\n    if (!shadow) {\n      return;\n    }\n\n    try {\n      const success = SuccessMessage({\n        message: options.successMessageText,\n        onRemove: () => {\n          if (timeoutId) {\n            clearTimeout(timeoutId);\n          }\n          showActor();\n        },\n      });\n\n      if (!success.el) {\n        throw new Error('Unable to show success message');\n      }\n\n      shadow.appendChild(success.el);\n\n      const timeoutId = setTimeout(() => {\n        if (success) {\n          success.remove();\n        }\n      }, 5000);\n    } catch (err) {\n      // TODO: error handling\n      logger.error(err);\n    }\n  }\n\n  /**\n   * Handler for when the feedback form is completed by the user. This will\n   * create and send the feedback message as an event.\n   */\n  async function _handleFeedbackSubmit(feedback: FeedbackFormData): Promise<void> {\n    if (!dialog) {\n      return;\n    }\n\n    // Simple validation for now, just check for non-empty required fields\n    const emptyField = [];\n    if (options.isNameRequired && !feedback.name) {\n      emptyField.push(options.nameLabel);\n    }\n    if (options.isEmailRequired && !feedback.email) {\n      emptyField.push(options.emailLabel);\n    }\n    if (!feedback.message) {\n      emptyField.push(options.messageLabel);\n    }\n    if (emptyField.length > 0) {\n      dialog.showError(`Please enter in the following required fields: ${emptyField.join(', ')}`);\n      return;\n    }\n\n    const result = await handleFeedbackSubmit(dialog, feedback);\n\n    // Error submitting feedback\n    if (!result) {\n      if (options.onSubmitError) {\n        options.onSubmitError();\n      }\n\n      return;\n    }\n\n    // Success\n    removeDialog();\n    showSuccessMessage();\n\n    if (options.onSubmitSuccess) {\n      options.onSubmitSuccess();\n    }\n  }\n\n  /**\n   * Internal handler when dialog is opened\n   */\n  function handleOpenDialog(): void {\n    // Flush replay if integration exists\n    const client = getClient();\n    const replay =\n      client &&\n      client.getIntegrationByName &&\n      client.getIntegrationByName<{ name: string; flush: () => Promise<void>; setupOnce: () => void }>('Replay');\n    if (!replay) {\n      return;\n    }\n    replay.flush().catch(err => {\n      DEBUG_BUILD && logger.error(err);\n    });\n  }\n\n  /**\n   * Displays the default actor\n   */\n  function showActor(): void {\n    actor && actor.show();\n  }\n\n  /**\n   * Hides the default actor\n   */\n  function hideActor(): void {\n    actor && actor.hide();\n  }\n\n  /**\n   * Removes the default actor element\n   */\n  function removeActor(): void {\n    actor && actor.el && actor.el.remove();\n  }\n\n  /**\n   *\n   */\n  function openDialog(): void {\n    try {\n      if (dialog) {\n        dialog.open();\n        isDialogOpen = true;\n        if (options.onFormOpen) {\n          options.onFormOpen();\n        }\n        handleOpenDialog();\n        return;\n      }\n\n      const userKey = options.useSentryUser;\n      const scope = getCurrentScope();\n      const user = scope && scope.getUser();\n\n      dialog = Dialog({\n        colorScheme: options.colorScheme,\n        showBranding: options.showBranding,\n        showName: options.showName || options.isNameRequired,\n        showEmail: options.showEmail || options.isEmailRequired,\n        isNameRequired: options.isNameRequired,\n        isEmailRequired: options.isEmailRequired,\n        formTitle: options.formTitle,\n        cancelButtonLabel: options.cancelButtonLabel,\n        submitButtonLabel: options.submitButtonLabel,\n        emailLabel: options.emailLabel,\n        emailPlaceholder: options.emailPlaceholder,\n        messageLabel: options.messageLabel,\n        messagePlaceholder: options.messagePlaceholder,\n        nameLabel: options.nameLabel,\n        namePlaceholder: options.namePlaceholder,\n        isRequiredLabel: options.isRequiredLabel,\n        defaultName: (userKey && user && user[userKey.name]) || '',\n        defaultEmail: (userKey && user && user[userKey.email]) || '',\n        onClosed: () => {\n          showActor();\n          isDialogOpen = false;\n\n          if (options.onFormClose) {\n            options.onFormClose();\n          }\n        },\n        onCancel: () => {\n          closeDialog();\n          showActor();\n        },\n        onSubmit: _handleFeedbackSubmit,\n      });\n\n      if (!dialog.el) {\n        throw new Error('Unable to open Feedback dialog');\n      }\n\n      shadow.appendChild(dialog.el);\n\n      // Hides the default actor whenever dialog is opened\n      hideActor();\n\n      if (options.onFormOpen) {\n        options.onFormOpen();\n      }\n      handleOpenDialog();\n    } catch (err) {\n      // TODO: Error handling?\n      logger.error(err);\n    }\n  }\n\n  /**\n   * Closes the dialog\n   */\n  function closeDialog(): void {\n    if (dialog) {\n      dialog.close();\n      isDialogOpen = false;\n\n      if (options.onFormClose) {\n        options.onFormClose();\n      }\n    }\n  }\n\n  /**\n   * Removes the dialog element from DOM\n   */\n  function removeDialog(): void {\n    if (dialog) {\n      closeDialog();\n      const dialogEl = dialog.el;\n      dialogEl && dialogEl.remove();\n      dialog = undefined;\n    }\n  }\n\n  /**\n   *\n   */\n  function handleActorClick(): void {\n    // Open dialog\n    if (!isDialogOpen) {\n      openDialog();\n    }\n\n    // Hide actor button\n    hideActor();\n  }\n\n  if (attachTo) {\n    attachTo.addEventListener('click', handleActorClick);\n  } else if (shouldCreateActor) {\n    actor = Actor({ buttonLabel: options.buttonLabel, onClick: handleActorClick });\n    actor.el && shadow.appendChild(actor.el);\n  }\n\n  return {\n    get actor() {\n      return actor;\n    },\n    get dialog() {\n      return dialog;\n    },\n\n    showActor,\n    hideActor,\n    removeActor,\n\n    openDialog,\n    closeDialog,\n    removeDialog,\n  };\n}\n","/**\n * Creates <style> element for widget actor (button that opens the dialog)\n */\nexport function createActorStyles(d: Document): HTMLStyleElement {\n  const style = d.createElement('style');\n  style.textContent = `\n.widget__actor {\n  line-height: 25px;\n\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-family: inherit;\n  font-size: var(--font-size);\n  font-weight: 600;\n  padding: 12px 16px;\n  text-decoration: none;\n  z-index: 9000;\n\n  color: var(--foreground);\n  background-color: var(--background);\n  border: var(--border);\n  box-shadow: var(--box-shadow);\n  opacity: 1;\n  transition: opacity 0.1s ease-in-out;\n}\n\n.widget__actor:hover {\n  background-color: var(--background-hover);\n}\n\n.widget__actor svg {\n  width: 16px;\n  height: 16px;\n}\n\n.widget__actor--hidden {\n  opacity: 0;\n  pointer-events: none;\n  visibility: hidden;\n}\n\n.widget__actor__text {\n}\n\n.feedback-icon path {\n  fill: var(--foreground);\n}\n`;\n\n  return style;\n}\n","import type { IdleTransaction, SpanStatusType } from '@sentry/core';\nimport { getActiveTransaction, spanToJSON } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../common/debug-build';\nimport { WINDOW } from './types';\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nexport function registerBackgroundTabDetection(): void {\n  if (WINDOW.document) {\n    WINDOW.document.addEventListener('visibilitychange', () => {\n      // eslint-disable-next-line deprecation/deprecation\n      const activeTransaction = getActiveTransaction() as IdleTransaction;\n      if (WINDOW.document!.hidden && activeTransaction) {\n        const statusType: SpanStatusType = 'cancelled';\n\n        const { op, status } = spanToJSON(activeTransaction);\n\n        DEBUG_BUILD &&\n          logger.log(`[Tracing] Transaction: ${statusType} -> since tab moved to the background, op: ${op}`);\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!status) {\n          activeTransaction.setStatus(statusType);\n        }\n        // TODO: Can we rewrite this to an attribute?\n        // eslint-disable-next-line deprecation/deprecation\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.end();\n      }\n    });\n  } else {\n    DEBUG_BUILD && logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n","import type { DsnComponents, SpanEnvelope, SpanItem } from '@sentry/types';\nimport type { Span } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\n\n/**\n * Create envelope from Span item.\n */\nexport function createSpanEnvelope(spans: Span[], dsn?: DsnComponents): SpanEnvelope {\n  const headers: SpanEnvelope[0] = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  const items = spans.map(createSpanItem);\n  return createEnvelope<SpanEnvelope>(headers, items);\n}\n\nfunction createSpanItem(span: Span): SpanItem {\n  const spanHeaders: SpanItem[0] = {\n    type: 'span',\n  };\n  return [spanHeaders, span];\n}\n","import type { Transaction } from '@sentry/core';\nimport type { Span, SpanContext } from '@sentry/types';\n\n/**\n * Checks if a given value is a valid measurement value.\n */\nexport function isMeasurementValue(value: unknown): value is number {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n *\n * Note: this will not be possible anymore in v8,\n * unless we do some special handling for browser here...\n */\nexport function _startChild(transaction: Transaction, { startTimestamp, ...ctx }: SpanContext): Span {\n  // eslint-disable-next-line deprecation/deprecation\n  if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.startTimestamp = startTimestamp;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return transaction.startChild({\n    startTimestamp,\n    ...ctx,\n  });\n}\n","/* eslint-disable max-lines */\nimport type { IdleTransaction, Transaction } from '@sentry/core';\nimport {\n  Span,\n  getActiveTransaction,\n  getClient,\n  hasTracingEnabled,\n  isValidSampleRate,\n  setMeasurement,\n} from '@sentry/core';\nimport type { ClientOptions, Measurements, SpanContext, TransactionContext } from '@sentry/types';\nimport { browserPerformanceTimeOrigin, getComponentName, htmlTreeAsString, logger, parseUrl } from '@sentry/utils';\n\nimport { spanToJSON } from '@sentry/core';\nimport { DEBUG_BUILD } from '../../common/debug-build';\nimport {\n  addClsInstrumentationHandler,\n  addFidInstrumentationHandler,\n  addInpInstrumentationHandler,\n  addLcpInstrumentationHandler,\n  addPerformanceInstrumentationHandler,\n  addTtfbInstrumentationHandler,\n} from '../instrument';\nimport { WINDOW } from '../types';\nimport { getVisibilityWatcher } from '../web-vitals/lib/getVisibilityWatcher';\nimport type {\n  InteractionRouteNameMapping,\n  NavigatorDeviceMemory,\n  NavigatorNetworkInformation,\n} from '../web-vitals/types';\nimport { _startChild, isMeasurementValue } from './utils';\n\nimport { createSpanEnvelope } from '@sentry/core';\nimport { getNavigationEntry } from '../web-vitals/lib/getNavigationEntry';\n\nconst MAX_INT_AS_BYTES = 2147483647;\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time: number): number {\n  return time / 1000;\n}\n\nfunction getBrowserPerformanceAPI(): Performance | undefined {\n  // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n  return WINDOW && WINDOW.addEventListener && WINDOW.performance;\n}\n\nlet _performanceCursor: number = 0;\n\nlet _measurements: Measurements = {};\nlet _lcpEntry: LargestContentfulPaint | undefined;\nlet _clsEntry: LayoutShift | undefined;\n\n/**\n * Start tracking web vitals.\n * The callback returned by this function can be used to stop tracking & ensure all measurements are final & captured.\n *\n * @returns A function that forces web vitals collection\n */\nexport function startTrackingWebVitals(): () => void {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n    if (performance.mark) {\n      WINDOW.performance.mark('sentry-tracing-init');\n    }\n    const fidCallback = _trackFID();\n    const clsCallback = _trackCLS();\n    const lcpCallback = _trackLCP();\n    const ttfbCallback = _trackTtfb();\n\n    return (): void => {\n      fidCallback();\n      clsCallback();\n      lcpCallback();\n      ttfbCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\n/**\n * Start tracking long tasks.\n */\nexport function startTrackingLongTasks(): void {\n  addPerformanceInstrumentationHandler('longtask', ({ entries }) => {\n    for (const entry of entries) {\n      // eslint-disable-next-line deprecation/deprecation\n      const transaction = getActiveTransaction() as IdleTransaction | undefined;\n      if (!transaction) {\n        return;\n      }\n      const startTime = msToSec((browserPerformanceTimeOrigin as number) + entry.startTime);\n      const duration = msToSec(entry.duration);\n\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.startChild({\n        description: 'Main UI thread blocked',\n        op: 'ui.long-task',\n        origin: 'auto.ui.browser.metrics',\n        startTimestamp: startTime,\n        endTimestamp: startTime + duration,\n      });\n    }\n  });\n}\n\n/**\n * Start tracking interaction events.\n */\nexport function startTrackingInteractions(): void {\n  addPerformanceInstrumentationHandler('event', ({ entries }) => {\n    for (const entry of entries) {\n      // eslint-disable-next-line deprecation/deprecation\n      const transaction = getActiveTransaction() as IdleTransaction | undefined;\n      if (!transaction) {\n        return;\n      }\n\n      if (entry.name === 'click') {\n        const startTime = msToSec((browserPerformanceTimeOrigin as number) + entry.startTime);\n        const duration = msToSec(entry.duration);\n\n        const span: SpanContext = {\n          description: htmlTreeAsString(entry.target),\n          op: `ui.interaction.${entry.name}`,\n          origin: 'auto.ui.browser.metrics',\n          startTimestamp: startTime,\n          endTimestamp: startTime + duration,\n        };\n\n        const componentName = getComponentName(entry.target);\n        if (componentName) {\n          span.attributes = { 'ui.component_name': componentName };\n        }\n\n        // eslint-disable-next-line deprecation/deprecation\n        transaction.startChild(span);\n      }\n    }\n  });\n}\n\n/**\n * Start tracking INP webvital events.\n */\nexport function startTrackingINP(\n  interactionIdtoRouteNameMapping: InteractionRouteNameMapping,\n  interactionsSampleRate: number,\n): () => void {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    const inpCallback = _trackINP(interactionIdtoRouteNameMapping, interactionsSampleRate);\n\n    return (): void => {\n      inpCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\n/** Starts tracking the Cumulative Layout Shift on the current page. */\nfunction _trackCLS(): () => void {\n  return addClsInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('[Measurements] Adding CLS');\n    _measurements['cls'] = { value: metric.value, unit: '' };\n    _clsEntry = entry as LayoutShift;\n  }, true);\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP(): () => void {\n  return addLcpInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('[Measurements] Adding LCP');\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _lcpEntry = entry as LargestContentfulPaint;\n  }, true);\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID(): () => void {\n  return addFidInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    const timeOrigin = msToSec(browserPerformanceTimeOrigin as number);\n    const startTime = msToSec(entry.startTime);\n    DEBUG_BUILD && logger.log('[Measurements] Adding FID');\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\nfunction _trackTtfb(): () => void {\n  return addTtfbInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('[Measurements] Adding TTFB');\n    _measurements['ttfb'] = { value: metric.value, unit: 'millisecond' };\n  });\n}\n\nconst INP_ENTRY_MAP: Record<string, 'click' | 'hover' | 'drag' | 'press'> = {\n  click: 'click',\n  pointerdown: 'click',\n  pointerup: 'click',\n  mousedown: 'click',\n  mouseup: 'click',\n  touchstart: 'click',\n  touchend: 'click',\n  mouseover: 'hover',\n  mouseout: 'hover',\n  mouseenter: 'hover',\n  mouseleave: 'hover',\n  pointerover: 'hover',\n  pointerout: 'hover',\n  pointerenter: 'hover',\n  pointerleave: 'hover',\n  dragstart: 'drag',\n  dragend: 'drag',\n  drag: 'drag',\n  dragenter: 'drag',\n  dragleave: 'drag',\n  dragover: 'drag',\n  drop: 'drag',\n  keydown: 'press',\n  keyup: 'press',\n  keypress: 'press',\n  input: 'press',\n};\n\n/** Starts tracking the Interaction to Next Paint on the current page. */\nfunction _trackINP(\n  interactionIdToRouteNameMapping: InteractionRouteNameMapping,\n  interactionsSampleRate: number,\n): () => void {\n  return addInpInstrumentationHandler(({ metric }) => {\n    if (metric.value === undefined) {\n      return;\n    }\n    const entry = metric.entries.find(\n      entry => entry.duration === metric.value && INP_ENTRY_MAP[entry.name] !== undefined,\n    );\n    const client = getClient();\n    if (!entry || !client) {\n      return;\n    }\n    const interactionType = INP_ENTRY_MAP[entry.name];\n    const options = client.getOptions();\n    /** Build the INP span, create an envelope from the span, and then send the envelope */\n    const startTime = msToSec((browserPerformanceTimeOrigin as number) + entry.startTime);\n    const duration = msToSec(metric.value);\n    const interaction =\n      entry.interactionId !== undefined ? interactionIdToRouteNameMapping[entry.interactionId] : undefined;\n    if (interaction === undefined) {\n      return;\n    }\n    const { routeName, parentContext, activeTransaction, user, replayId } = interaction;\n    const userDisplay = user !== undefined ? user.email || user.id || user.ip_address : undefined;\n    // eslint-disable-next-line deprecation/deprecation\n    const profileId = activeTransaction !== undefined ? activeTransaction.getProfileId() : undefined;\n    const span = new Span({\n      startTimestamp: startTime,\n      endTimestamp: startTime + duration,\n      op: `ui.interaction.${interactionType}`,\n      name: htmlTreeAsString(entry.target),\n      attributes: {\n        release: options.release,\n        environment: options.environment,\n        transaction: routeName,\n        ...(userDisplay !== undefined && userDisplay !== '' ? { user: userDisplay } : {}),\n        ...(profileId !== undefined ? { profile_id: profileId } : {}),\n        ...(replayId !== undefined ? { replay_id: replayId } : {}),\n      },\n      exclusiveTime: metric.value,\n      measurements: {\n        inp: { value: metric.value, unit: 'millisecond' },\n      },\n    });\n\n    /** Check to see if the span should be sampled */\n    const sampleRate = getSampleRate(parentContext, options, interactionsSampleRate);\n\n    if (!sampleRate) {\n      return;\n    }\n\n    if (Math.random() < (sampleRate as number | boolean)) {\n      const envelope = span ? createSpanEnvelope([span], client.getDsn()) : undefined;\n      const transport = client && client.getTransport();\n      if (transport && envelope) {\n        transport.send(envelope).then(null, reason => {\n          DEBUG_BUILD && logger.error('Error while sending interaction:', reason);\n        });\n      }\n      return;\n    }\n  });\n}\n\n/** Add performance related spans to a transaction */\nexport function addPerformanceEntries(transaction: Transaction): void {\n  const performance = getBrowserPerformanceAPI();\n  if (!performance || !WINDOW.performance.getEntries || !browserPerformanceTimeOrigin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  DEBUG_BUILD && logger.log('[Tracing] Adding & adjusting spans using Performance API');\n  const timeOrigin = msToSec(browserPerformanceTimeOrigin);\n\n  const performanceEntries = performance.getEntries();\n\n  const { op, start_timestamp: transactionStartTime } = spanToJSON(transaction);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  performanceEntries.slice(_performanceCursor).forEach((entry: Record<string, any>) => {\n    const startTime = msToSec(entry.startTime);\n    const duration = msToSec(entry.duration);\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (transaction.op === 'navigation' && transactionStartTime && timeOrigin + startTime < transactionStartTime) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(transaction, entry, timeOrigin);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        _addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        const firstHidden = getVisibilityWatcher();\n        // Only report if the page wasn't hidden prior to the web vital.\n        const shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          DEBUG_BUILD && logger.log('[Measurements] Adding FP');\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          DEBUG_BUILD && logger.log('[Measurements] Adding FCP');\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        break;\n      }\n      case 'resource': {\n        _addResourceSpans(transaction, entry, entry.name as string, startTime, duration, timeOrigin);\n        break;\n      }\n      default:\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(transaction);\n\n  // Measurements are only available for pageload transactions\n  if (op === 'pageload') {\n    _addTtfbRequestTimeToMeasurements(_measurements);\n\n    ['fcp', 'fp', 'lcp'].forEach(name => {\n      if (!_measurements[name] || !transactionStartTime || timeOrigin >= transactionStartTime) {\n        return;\n      }\n      // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n      // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n      // to be adjusted to be relative to transaction.startTimestamp.\n      const oldValue = _measurements[name].value;\n      const measurementTimestamp = timeOrigin + msToSec(oldValue);\n\n      // normalizedValue should be in milliseconds\n      const normalizedValue = Math.abs((measurementTimestamp - transactionStartTime) * 1000);\n      const delta = normalizedValue - oldValue;\n\n      DEBUG_BUILD && logger.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n      _measurements[name].value = normalizedValue;\n    });\n\n    const fidMark = _measurements['mark.fid'];\n    if (fidMark && _measurements['fid']) {\n      // create span for FID\n      _startChild(transaction, {\n        description: 'first input delay',\n        endTimestamp: fidMark.value + msToSec(_measurements['fid'].value),\n        op: 'ui.action',\n        origin: 'auto.ui.browser.metrics',\n        startTimestamp: fidMark.value,\n      });\n\n      // Delete mark.fid as we don't want it to be part of final payload\n      delete _measurements['mark.fid'];\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    if (!('fcp' in _measurements)) {\n      delete _measurements.cls;\n    }\n\n    Object.keys(_measurements).forEach(measurementName => {\n      setMeasurement(measurementName, _measurements[measurementName].value, _measurements[measurementName].unit);\n    });\n\n    _tagMetricInfo(transaction);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/** Create measure related spans */\nexport function _addMeasureSpans(\n  transaction: Transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry: Record<string, any>,\n  startTime: number,\n  duration: number,\n  timeOrigin: number,\n): number {\n  const measureStartTimestamp = timeOrigin + startTime;\n  const measureEndTimestamp = measureStartTimestamp + duration;\n\n  _startChild(transaction, {\n    description: entry.name as string,\n    endTimestamp: measureEndTimestamp,\n    op: entry.entryType as string,\n    origin: 'auto.resource.browser.metrics',\n    startTimestamp: measureStartTimestamp,\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addNavigationSpans(transaction: Transaction, entry: Record<string, any>, timeOrigin: number): void {\n  ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n    _addPerformanceNavigationTiming(transaction, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(transaction, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n  _addPerformanceNavigationTiming(transaction, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n  _addPerformanceNavigationTiming(transaction, entry, 'domainLookup', timeOrigin, 'DNS');\n  _addRequest(transaction, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  transaction: Transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry: Record<string, any>,\n  event: string,\n  timeOrigin: number,\n  description?: string,\n  eventEnd?: string,\n): void {\n  const end = eventEnd ? (entry[eventEnd] as number | undefined) : (entry[`${event}End`] as number | undefined);\n  const start = entry[`${event}Start`] as number | undefined;\n  if (!start || !end) {\n    return;\n  }\n  _startChild(transaction, {\n    op: 'browser',\n    origin: 'auto.browser.browser.metrics',\n    description: description || event,\n    startTimestamp: timeOrigin + msToSec(start),\n    endTimestamp: timeOrigin + msToSec(end),\n  });\n}\n\n/** Create request and response related spans */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addRequest(transaction: Transaction, entry: Record<string, any>, timeOrigin: number): void {\n  if (entry.responseEnd) {\n    // It is possible that we are collecting these metrics when the page hasn't finished loading yet, for example when the HTML slowly streams in.\n    // In this case, ie. when the document request hasn't finished yet, `entry.responseEnd` will be 0.\n    // In order not to produce faulty spans, where the end timestamp is before the start timestamp, we will only collect\n    // these spans when the responseEnd value is available. The backend (Relay) would drop the entire transaction if it contained faulty spans.\n    _startChild(transaction, {\n      op: 'browser',\n      origin: 'auto.browser.browser.metrics',\n      description: 'request',\n      startTimestamp: timeOrigin + msToSec(entry.requestStart as number),\n      endTimestamp: timeOrigin + msToSec(entry.responseEnd as number),\n    });\n\n    _startChild(transaction, {\n      op: 'browser',\n      origin: 'auto.browser.browser.metrics',\n      description: 'response',\n      startTimestamp: timeOrigin + msToSec(entry.responseStart as number),\n      endTimestamp: timeOrigin + msToSec(entry.responseEnd as number),\n    });\n  }\n}\n\nexport interface ResourceEntry extends Record<string, unknown> {\n  initiatorType?: string;\n  transferSize?: number;\n  encodedBodySize?: number;\n  decodedBodySize?: number;\n  renderBlockingStatus?: string;\n}\n\n/** Create resource-related spans */\nexport function _addResourceSpans(\n  transaction: Transaction,\n  entry: ResourceEntry,\n  resourceUrl: string,\n  startTime: number,\n  duration: number,\n  timeOrigin: number,\n): void {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n  const parsedUrl = parseUrl(resourceUrl);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const data: Record<string, any> = {};\n  setResourceEntrySizeData(data, entry, 'transferSize', 'http.response_transfer_size');\n  setResourceEntrySizeData(data, entry, 'encodedBodySize', 'http.response_content_length');\n  setResourceEntrySizeData(data, entry, 'decodedBodySize', 'http.decoded_response_content_length');\n\n  if ('renderBlockingStatus' in entry) {\n    data['resource.render_blocking_status'] = entry.renderBlockingStatus;\n  }\n  if (parsedUrl.protocol) {\n    data['url.scheme'] = parsedUrl.protocol.split(':').pop(); // the protocol returned by parseUrl includes a :, but OTEL spec does not, so we remove it.\n  }\n\n  if (parsedUrl.host) {\n    data['server.address'] = parsedUrl.host;\n  }\n\n  data['url.same_origin'] = resourceUrl.includes(WINDOW.location.origin);\n\n  const startTimestamp = timeOrigin + startTime;\n  const endTimestamp = startTimestamp + duration;\n\n  _startChild(transaction, {\n    description: resourceUrl.replace(WINDOW.location.origin, ''),\n    endTimestamp,\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource.other',\n    origin: 'auto.resource.browser.metrics',\n    startTimestamp,\n    data,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(transaction: Transaction): void {\n  const navigator = WINDOW.navigator as null | (Navigator & NavigatorNetworkInformation & NavigatorDeviceMemory);\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  const connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('connectionType', connection.type);\n    }\n\n    if (isMeasurementValue(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n  }\n\n  if (isMeasurementValue(navigator.deviceMemory)) {\n    // TODO: Can we rewrite this to an attribute?\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setTag('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if (isMeasurementValue(navigator.hardwareConcurrency)) {\n    // TODO: Can we rewrite this to an attribute?\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to transaction to allow debugging */\nfunction _tagMetricInfo(transaction: Transaction): void {\n  if (_lcpEntry) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding LCP Data');\n\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('lcp.element', htmlTreeAsString(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    // TODO: Can we rewrite this to an attribute?\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setTag('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding CLS Data');\n    _clsEntry.sources.forEach((source, index) =>\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag(`cls.source.${index + 1}`, htmlTreeAsString(source.node)),\n    );\n  }\n}\n\nfunction setResourceEntrySizeData(\n  data: Record<string, unknown>,\n  entry: ResourceEntry,\n  key: keyof Pick<ResourceEntry, 'transferSize' | 'encodedBodySize' | 'decodedBodySize'>,\n  dataKey: 'http.response_transfer_size' | 'http.response_content_length' | 'http.decoded_response_content_length',\n): void {\n  const entryVal = entry[key];\n  if (entryVal != null && entryVal < MAX_INT_AS_BYTES) {\n    data[dataKey] = entryVal;\n  }\n}\n\n/**\n * Add ttfb request time information to measurements.\n *\n * ttfb information is added via vendored web vitals library.\n */\nfunction _addTtfbRequestTimeToMeasurements(_measurements: Measurements): void {\n  const navEntry = getNavigationEntry();\n  if (!navEntry) {\n    return;\n  }\n\n  const { responseStart, requestStart } = navEntry;\n\n  if (requestStart <= responseStart) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding TTFB Request Time');\n    _measurements['ttfb.requestTime'] = {\n      value: responseStart - requestStart,\n      unit: 'millisecond',\n    };\n  }\n}\n\n/** Taken from @sentry/core sampling.ts */\nfunction getSampleRate(\n  transactionContext: TransactionContext | undefined,\n  options: ClientOptions,\n  interactionsSampleRate: number,\n): number | boolean {\n  if (!hasTracingEnabled(options)) {\n    return false;\n  }\n  let sampleRate;\n  if (transactionContext !== undefined && typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler({\n      transactionContext,\n      name: transactionContext.name,\n      parentSampled: transactionContext.parentSampled,\n      attributes: {\n        // eslint-disable-next-line deprecation/deprecation\n        ...transactionContext.data,\n        ...transactionContext.attributes,\n      },\n      location: WINDOW.location,\n    });\n  } else if (transactionContext !== undefined && transactionContext.sampled !== undefined) {\n    sampleRate = transactionContext.sampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n  } else {\n    sampleRate = 1;\n  }\n  if (!isValidSampleRate(sampleRate)) {\n    DEBUG_BUILD && logger.warn('[Tracing] Discarding interaction span because of invalid sample rate.');\n    return false;\n  }\n  if (sampleRate === true) {\n    return interactionsSampleRate;\n  } else if (sampleRate === false) {\n    return 0;\n  }\n  return sampleRate * interactionsSampleRate;\n}\n","import {\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  getClient,\n  getCurrentScope,\n  getDynamicSamplingContextFromClient,\n  getDynamicSamplingContextFromSpan,\n  getIsolationScope,\n  hasTracingEnabled,\n  setHttpStatus,\n  spanToTraceHeader,\n  startInactiveSpan,\n} from '@sentry/core';\nimport type { Client, HandlerDataFetch, Scope, Span, SpanOrigin } from '@sentry/types';\nimport {\n  BAGGAGE_HEADER_NAME,\n  dynamicSamplingContextToSentryBaggageHeader,\n  generateSentryTraceHeader,\n  isInstanceOf,\n  parseUrl,\n} from '@sentry/utils';\n\ntype PolymorphicRequestHeaders =\n  | Record<string, string | undefined>\n  | Array<[string, string]>\n  // the below is not preicsely the Header type used in Request, but it'll pass duck-typing\n  | {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      [key: string]: any;\n      append: (key: string, value: string) => void;\n      get: (key: string) => string | null | undefined;\n    };\n\n/**\n * Create and track fetch request spans for usage in combination with `addInstrumentationHandler`.\n *\n * @returns Span if a span was created, otherwise void.\n */\nexport function instrumentFetchRequest(\n  handlerData: HandlerDataFetch,\n  shouldCreateSpan: (url: string) => boolean,\n  shouldAttachHeaders: (url: string) => boolean,\n  spans: Record<string, Span>,\n  spanOrigin: SpanOrigin = 'auto.http.browser',\n): Span | undefined {\n  if (!hasTracingEnabled() || !handlerData.fetchData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = shouldCreateSpan(handlerData.fetchData.url);\n\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      endSpan(span, handlerData);\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const scope = getCurrentScope();\n  const client = getClient();\n\n  const { method, url } = handlerData.fetchData;\n\n  const fullUrl = getFullURL(url);\n  const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n\n  const span = shouldCreateSpanResult\n    ? startInactiveSpan({\n        name: `${method} ${url}`,\n        onlyIfParent: true,\n        attributes: {\n          url,\n          type: 'fetch',\n          'http.method': method,\n          'http.url': fullUrl,\n          'server.address': host,\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: spanOrigin,\n        },\n        op: 'http.client',\n      })\n    : undefined;\n\n  if (span) {\n    handlerData.fetchData.__span = span.spanContext().spanId;\n    spans[span.spanContext().spanId] = span;\n  }\n\n  if (shouldAttachHeaders(handlerData.fetchData.url) && client) {\n    const request: string | Request = handlerData.args[0];\n\n    // In case the user hasn't set the second argument of a fetch call we default it to `{}`.\n    handlerData.args[1] = handlerData.args[1] || {};\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const options: { [key: string]: any } = handlerData.args[1];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    options.headers = addTracingHeadersToFetchRequest(request, client, scope, options, span);\n  }\n\n  return span;\n}\n\n/**\n * Adds sentry-trace and baggage headers to the various forms of fetch headers\n */\nexport function addTracingHeadersToFetchRequest(\n  request: string | unknown, // unknown is actually type Request but we can't export DOM types from this package,\n  client: Client,\n  scope: Scope,\n  options: {\n    headers?:\n      | {\n          [key: string]: string[] | string | undefined;\n        }\n      | PolymorphicRequestHeaders;\n  },\n  requestSpan?: Span,\n): PolymorphicRequestHeaders | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  const span = requestSpan || scope.getSpan();\n\n  const isolationScope = getIsolationScope();\n\n  const { traceId, spanId, sampled, dsc } = {\n    ...isolationScope.getPropagationContext(),\n    ...scope.getPropagationContext(),\n  };\n\n  const sentryTraceHeader = span ? spanToTraceHeader(span) : generateSentryTraceHeader(traceId, spanId, sampled);\n\n  const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(\n    dsc ||\n      (span ? getDynamicSamplingContextFromSpan(span) : getDynamicSamplingContextFromClient(traceId, client, scope)),\n  );\n\n  const headers =\n    options.headers ||\n    (typeof Request !== 'undefined' && isInstanceOf(request, Request) ? (request as Request).headers : undefined);\n\n  if (!headers) {\n    return { 'sentry-trace': sentryTraceHeader, baggage: sentryBaggageHeader };\n  } else if (typeof Headers !== 'undefined' && isInstanceOf(headers, Headers)) {\n    const newHeaders = new Headers(headers as Headers);\n\n    newHeaders.append('sentry-trace', sentryTraceHeader);\n\n    if (sentryBaggageHeader) {\n      // If the same header is appended multiple times the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.append(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n\n    return newHeaders as PolymorphicRequestHeaders;\n  } else if (Array.isArray(headers)) {\n    const newHeaders = [...headers, ['sentry-trace', sentryTraceHeader]];\n\n    if (sentryBaggageHeader) {\n      // If there are multiple entries with the same key, the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.push([BAGGAGE_HEADER_NAME, sentryBaggageHeader]);\n    }\n\n    return newHeaders as PolymorphicRequestHeaders;\n  } else {\n    const existingBaggageHeader = 'baggage' in headers ? headers.baggage : undefined;\n    const newBaggageHeaders: string[] = [];\n\n    if (Array.isArray(existingBaggageHeader)) {\n      newBaggageHeaders.push(...existingBaggageHeader);\n    } else if (existingBaggageHeader) {\n      newBaggageHeaders.push(existingBaggageHeader);\n    }\n\n    if (sentryBaggageHeader) {\n      newBaggageHeaders.push(sentryBaggageHeader);\n    }\n\n    return {\n      ...(headers as Exclude<typeof headers, Headers>),\n      'sentry-trace': sentryTraceHeader,\n      baggage: newBaggageHeaders.length > 0 ? newBaggageHeaders.join(',') : undefined,\n    };\n  }\n}\n\nfunction getFullURL(url: string): string | undefined {\n  try {\n    const parsed = new URL(url);\n    return parsed.href;\n  } catch {\n    return undefined;\n  }\n}\n\nfunction endSpan(span: Span, handlerData: HandlerDataFetch): void {\n  if (handlerData.response) {\n    setHttpStatus(span, handlerData.response.status);\n\n    const contentLength =\n      handlerData.response && handlerData.response.headers && handlerData.response.headers.get('content-length');\n\n    if (contentLength) {\n      const contentLengthNum = parseInt(contentLength);\n      if (contentLengthNum > 0) {\n        span.setAttribute('http.response_content_length', contentLengthNum);\n      }\n    }\n  } else if (handlerData.error) {\n    span.setStatus('internal_error');\n  }\n  span.end();\n}\n","/* eslint-disable max-lines */\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  getClient,\n  getCurrentScope,\n  getDynamicSamplingContextFromClient,\n  getDynamicSamplingContextFromSpan,\n  getIsolationScope,\n  hasTracingEnabled,\n  setHttpStatus,\n  spanToJSON,\n  spanToTraceHeader,\n  startInactiveSpan,\n} from '@sentry/core';\nimport type { HandlerDataXhr, SentryWrappedXMLHttpRequest, Span } from '@sentry/types';\nimport {\n  BAGGAGE_HEADER_NAME,\n  SENTRY_XHR_DATA_KEY,\n  addFetchInstrumentationHandler,\n  addXhrInstrumentationHandler,\n  browserPerformanceTimeOrigin,\n  dynamicSamplingContextToSentryBaggageHeader,\n  generateSentryTraceHeader,\n  parseUrl,\n  stringMatchesSomePattern,\n} from '@sentry/utils';\n\nimport { instrumentFetchRequest } from '../common/fetch';\nimport { addPerformanceInstrumentationHandler } from './instrument';\nimport { WINDOW } from './types';\n\nexport const DEFAULT_TRACE_PROPAGATION_TARGETS = ['localhost', /^\\/(?!\\/)/];\n\n/** Options for Request Instrumentation */\nexport interface RequestInstrumentationOptions {\n  /**\n   * @deprecated Will be removed in v8.\n   * Use `shouldCreateSpanForRequest` to control span creation and `tracePropagationTargets` to control\n   * trace header attachment.\n   */\n  tracingOrigins: Array<string | RegExp>;\n\n  /**\n   * List of strings and/or regexes used to determine which outgoing requests will have `sentry-trace` and `baggage`\n   * headers attached.\n   *\n   * @deprecated Use the top-level `tracePropagationTargets` option in `Sentry.init` instead.\n   * This option will be removed in v8.\n   *\n   * Default: ['localhost', /^\\//] @see {DEFAULT_TRACE_PROPAGATION_TARGETS}\n   */\n  tracePropagationTargets: Array<string | RegExp>;\n\n  /**\n   * Flag to disable patching all together for fetch requests.\n   *\n   * Default: true\n   */\n  traceFetch: boolean;\n\n  /**\n   * Flag to disable patching all together for xhr requests.\n   *\n   * Default: true\n   */\n  traceXHR: boolean;\n\n  /**\n   * If true, Sentry will capture http timings and add them to the corresponding http spans.\n   *\n   * Default: true\n   */\n  enableHTTPTimings: boolean;\n\n  /**\n   * This function will be called before creating a span for a request with the given url.\n   * Return false if you don't want a span for the given url.\n   *\n   * Default: (url: string) => true\n   */\n  shouldCreateSpanForRequest?(this: void, url: string): boolean;\n}\n\nexport const defaultRequestInstrumentationOptions: RequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  enableHTTPTimings: true,\n  // TODO (v8): Remove this property\n  tracingOrigins: DEFAULT_TRACE_PROPAGATION_TARGETS,\n  tracePropagationTargets: DEFAULT_TRACE_PROPAGATION_TARGETS,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nexport function instrumentOutgoingRequests(_options?: Partial<RequestInstrumentationOptions>): void {\n  const {\n    traceFetch,\n    traceXHR,\n    // eslint-disable-next-line deprecation/deprecation\n    tracePropagationTargets,\n    // eslint-disable-next-line deprecation/deprecation\n    tracingOrigins,\n    shouldCreateSpanForRequest,\n    enableHTTPTimings,\n  } = {\n    traceFetch: defaultRequestInstrumentationOptions.traceFetch,\n    traceXHR: defaultRequestInstrumentationOptions.traceXHR,\n    ..._options,\n  };\n\n  const shouldCreateSpan =\n    typeof shouldCreateSpanForRequest === 'function' ? shouldCreateSpanForRequest : (_: string) => true;\n\n  // TODO(v8) Remove tracingOrigins here\n  // The only reason we're passing it in here is because this instrumentOutgoingRequests function is publicly exported\n  // and we don't want to break the API. We can remove it in v8.\n  const shouldAttachHeadersWithTargets = (url: string): boolean =>\n    shouldAttachHeaders(url, tracePropagationTargets || tracingOrigins);\n\n  const spans: Record<string, Span> = {};\n\n  if (traceFetch) {\n    addFetchInstrumentationHandler(handlerData => {\n      const createdSpan = instrumentFetchRequest(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      // We cannot use `window.location` in the generic fetch instrumentation,\n      // but we need it for reliable `server.address` attribute.\n      // so we extend this in here\n      if (createdSpan) {\n        const fullUrl = getFullURL(handlerData.fetchData.url);\n        const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n        createdSpan.setAttributes({\n          'http.url': fullUrl,\n          'server.address': host,\n        });\n      }\n\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n\n  if (traceXHR) {\n    addXhrInstrumentationHandler(handlerData => {\n      const createdSpan = xhrCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n}\n\nfunction isPerformanceResourceTiming(entry: PerformanceEntry): entry is PerformanceResourceTiming {\n  return (\n    entry.entryType === 'resource' &&\n    'initiatorType' in entry &&\n    typeof (entry as PerformanceResourceTiming).nextHopProtocol === 'string' &&\n    (entry.initiatorType === 'fetch' || entry.initiatorType === 'xmlhttprequest')\n  );\n}\n\n/**\n * Creates a temporary observer to listen to the next fetch/xhr resourcing timings,\n * so that when timings hit their per-browser limit they don't need to be removed.\n *\n * @param span A span that has yet to be finished, must contain `url` on data.\n */\nfunction addHTTPTimings(span: Span): void {\n  const { url } = spanToJSON(span).data || {};\n\n  if (!url || typeof url !== 'string') {\n    return;\n  }\n\n  const cleanup = addPerformanceInstrumentationHandler('resource', ({ entries }) => {\n    entries.forEach(entry => {\n      if (isPerformanceResourceTiming(entry) && entry.name.endsWith(url)) {\n        const spanData = resourceTimingEntryToSpanData(entry);\n        spanData.forEach(data => span.setAttribute(...data));\n        // In the next tick, clean this handler up\n        // We have to wait here because otherwise this cleans itself up before it is fully done\n        setTimeout(cleanup);\n      }\n    });\n  });\n}\n\n/**\n * Converts ALPN protocol ids to name and version.\n *\n * (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids)\n * @param nextHopProtocol PerformanceResourceTiming.nextHopProtocol\n */\nexport function extractNetworkProtocol(nextHopProtocol: string): { name: string; version: string } {\n  let name = 'unknown';\n  let version = 'unknown';\n  let _name = '';\n  for (const char of nextHopProtocol) {\n    // http/1.1 etc.\n    if (char === '/') {\n      [name, version] = nextHopProtocol.split('/');\n      break;\n    }\n    // h2, h3 etc.\n    if (!isNaN(Number(char))) {\n      name = _name === 'h' ? 'http' : _name;\n      version = nextHopProtocol.split(_name)[1];\n      break;\n    }\n    _name += char;\n  }\n  if (_name === nextHopProtocol) {\n    // webrtc, ftp, etc.\n    name = _name;\n  }\n  return { name, version };\n}\n\nfunction getAbsoluteTime(time: number = 0): number {\n  return ((browserPerformanceTimeOrigin || performance.timeOrigin) + time) / 1000;\n}\n\nfunction resourceTimingEntryToSpanData(resourceTiming: PerformanceResourceTiming): [string, string | number][] {\n  const { name, version } = extractNetworkProtocol(resourceTiming.nextHopProtocol);\n\n  const timingSpanData: [string, string | number][] = [];\n\n  timingSpanData.push(['network.protocol.version', version], ['network.protocol.name', name]);\n\n  if (!browserPerformanceTimeOrigin) {\n    return timingSpanData;\n  }\n  return [\n    ...timingSpanData,\n    ['http.request.redirect_start', getAbsoluteTime(resourceTiming.redirectStart)],\n    ['http.request.fetch_start', getAbsoluteTime(resourceTiming.fetchStart)],\n    ['http.request.domain_lookup_start', getAbsoluteTime(resourceTiming.domainLookupStart)],\n    ['http.request.domain_lookup_end', getAbsoluteTime(resourceTiming.domainLookupEnd)],\n    ['http.request.connect_start', getAbsoluteTime(resourceTiming.connectStart)],\n    ['http.request.secure_connection_start', getAbsoluteTime(resourceTiming.secureConnectionStart)],\n    ['http.request.connection_end', getAbsoluteTime(resourceTiming.connectEnd)],\n    ['http.request.request_start', getAbsoluteTime(resourceTiming.requestStart)],\n    ['http.request.response_start', getAbsoluteTime(resourceTiming.responseStart)],\n    ['http.request.response_end', getAbsoluteTime(resourceTiming.responseEnd)],\n  ];\n}\n\n/**\n * A function that determines whether to attach tracing headers to a request.\n * This was extracted from `instrumentOutgoingRequests` to make it easier to test shouldAttachHeaders.\n * We only export this fuction for testing purposes.\n */\nexport function shouldAttachHeaders(url: string, tracePropagationTargets: (string | RegExp)[] | undefined): boolean {\n  return stringMatchesSomePattern(url, tracePropagationTargets || DEFAULT_TRACE_PROPAGATION_TARGETS);\n}\n\n/**\n * Create and track xhr request spans\n *\n * @returns Span if a span was created, otherwise void.\n */\n// eslint-disable-next-line complexity\nexport function xhrCallback(\n  handlerData: HandlerDataXhr,\n  shouldCreateSpan: (url: string) => boolean,\n  shouldAttachHeaders: (url: string) => boolean,\n  spans: Record<string, Span>,\n): Span | undefined {\n  const xhr = handlerData.xhr;\n  const sentryXhrData = xhr && xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!hasTracingEnabled() || !xhr || xhr.__sentry_own_request__ || !sentryXhrData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = shouldCreateSpan(sentryXhrData.url);\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span && sentryXhrData.status_code !== undefined) {\n      setHttpStatus(span, sentryXhrData.status_code);\n      span.end();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const scope = getCurrentScope();\n  const isolationScope = getIsolationScope();\n\n  const fullUrl = getFullURL(sentryXhrData.url);\n  const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n\n  const span = shouldCreateSpanResult\n    ? startInactiveSpan({\n        name: `${sentryXhrData.method} ${sentryXhrData.url}`,\n        onlyIfParent: true,\n        attributes: {\n          type: 'xhr',\n          'http.method': sentryXhrData.method,\n          'http.url': fullUrl,\n          url: sentryXhrData.url,\n          'server.address': host,\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser',\n        },\n        op: 'http.client',\n      })\n    : undefined;\n\n  if (span) {\n    xhr.__sentry_xhr_span_id__ = span.spanContext().spanId;\n    spans[xhr.__sentry_xhr_span_id__] = span;\n  }\n\n  const client = getClient();\n\n  if (xhr.setRequestHeader && shouldAttachHeaders(sentryXhrData.url) && client) {\n    const { traceId, spanId, sampled, dsc } = {\n      ...isolationScope.getPropagationContext(),\n      ...scope.getPropagationContext(),\n    };\n\n    const sentryTraceHeader = span ? spanToTraceHeader(span) : generateSentryTraceHeader(traceId, spanId, sampled);\n\n    const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(\n      dsc ||\n        (span ? getDynamicSamplingContextFromSpan(span) : getDynamicSamplingContextFromClient(traceId, client, scope)),\n    );\n\n    setHeaderOnXhr(xhr, sentryTraceHeader, sentryBaggageHeader);\n  }\n\n  return span;\n}\n\nfunction setHeaderOnXhr(\n  xhr: SentryWrappedXMLHttpRequest,\n  sentryTraceHeader: string,\n  sentryBaggageHeader: string | undefined,\n): void {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    xhr.setRequestHeader!('sentry-trace', sentryTraceHeader);\n    if (sentryBaggageHeader) {\n      // From MDN: \"If this method is called several times with the same header, the values are merged into one single request header.\"\n      // We can therefore simply set a baggage header without checking what was there before\n      // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      xhr.setRequestHeader!(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n  } catch (_) {\n    // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n  }\n}\n\nfunction getFullURL(url: string): string | undefined {\n  try {\n    // By adding a base URL to new URL(), this will also work for relative urls\n    // If `url` is a full URL, the base URL is ignored anyhow\n    const parsed = new URL(url, WINDOW.location.origin);\n    return parsed.href;\n  } catch {\n    return undefined;\n  }\n}\n","/* eslint-disable max-lines */\nimport type { Hub, IdleTransaction } from '@sentry/core';\nimport { getClient, getCurrentScope } from '@sentry/core';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  TRACING_DEFAULTS,\n  addTracingExtensions,\n  getActiveTransaction,\n  startIdleTransaction,\n} from '@sentry/core';\nimport type { EventProcessor, Integration, Transaction, TransactionContext, TransactionSource } from '@sentry/types';\nimport { getDomElement, logger, propagationContextFromHeaders } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../common/debug-build';\nimport { registerBackgroundTabDetection } from './backgroundtab';\nimport { addPerformanceInstrumentationHandler } from './instrument';\nimport {\n  addPerformanceEntries,\n  startTrackingINP,\n  startTrackingInteractions,\n  startTrackingLongTasks,\n  startTrackingWebVitals,\n} from './metrics';\nimport type { RequestInstrumentationOptions } from './request';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './request';\nimport { instrumentRoutingWithDefaults } from './router';\nimport { WINDOW } from './types';\nimport type { InteractionRouteNameMapping } from './web-vitals/types';\n\nexport const BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\n/** Options for Browser Tracing integration */\nexport interface BrowserTracingOptions extends RequestInstrumentationOptions {\n  /**\n   * The time to wait in ms until the transaction will be finished during an idle state. An idle state is defined\n   * by a moment where there are no in-progress spans.\n   *\n   * The transaction will use the end timestamp of the last finished span as the endtime for the transaction.\n   * If there are still active spans when this the `idleTimeout` is set, the `idleTimeout` will get reset.\n   * Time is in ms.\n   *\n   * Default: 1000\n   */\n  idleTimeout: number;\n\n  /**\n   * The max duration for a transaction. If a transaction duration hits the `finalTimeout` value, it\n   * will be finished.\n   * Time is in ms.\n   *\n   * Default: 30000\n   */\n  finalTimeout: number;\n\n  /**\n   * The heartbeat interval. If no new spans are started or open spans are finished within 3 heartbeats,\n   * the transaction will be finished.\n   * Time is in ms.\n   *\n   * Default: 5000\n   */\n  heartbeatInterval: number;\n\n  /**\n   * Flag to enable/disable creation of `navigation` transaction on history changes.\n   *\n   * Default: true\n   */\n  startTransactionOnLocationChange: boolean;\n\n  /**\n   * Flag to enable/disable creation of `pageload` transaction on first pageload.\n   *\n   * Default: true\n   */\n  startTransactionOnPageLoad: boolean;\n\n  /**\n   * Flag Transactions where tabs moved to background with \"cancelled\". Browser background tab timing is\n   * not suited towards doing precise measurements of operations. By default, we recommend that this option\n   * be enabled as background transactions can mess up your statistics in nondeterministic ways.\n   *\n   * Default: true\n   */\n  markBackgroundTransactions: boolean;\n\n  /**\n   * If true, Sentry will capture long tasks and add them to the corresponding transaction.\n   *\n   * Default: true\n   */\n  enableLongTask: boolean;\n\n  /**\n   * If true, Sentry will capture INP web vitals as standalone spans .\n   *\n   * Default: false\n   */\n  enableInp: boolean;\n\n  /**\n   * Sample rate to determine interaction span sampling.\n   * interactionsSampleRate is applied on top of the global tracesSampleRate.\n   * ie a tracesSampleRate of 0.1 and interactionsSampleRate of 0.5 will result in a 0.05 sample rate for interactions.\n   *\n   * Default: 1\n   */\n  interactionsSampleRate: number;\n\n  /**\n   * _metricOptions allows the user to send options to change how metrics are collected.\n   *\n   * _metricOptions is currently experimental.\n   *\n   * Default: undefined\n   */\n  _metricOptions?: Partial<{\n    /**\n     * @deprecated This property no longer has any effect and will be removed in v8.\n     */\n    _reportAllChanges: boolean;\n  }>;\n\n  /**\n   * _experiments allows the user to send options to define how this integration works.\n   * Note that the `enableLongTask` options is deprecated in favor of the option at the top level, and will be removed in v8.\n   *\n   * TODO (v8): Remove enableLongTask\n   *\n   * Default: undefined\n   */\n  _experiments: Partial<{\n    enableLongTask: boolean;\n    enableInteractions: boolean;\n    // eslint-disable-next-line deprecation/deprecation\n    onStartRouteTransaction: (t: Transaction | undefined, ctx: TransactionContext, getCurrentHub: () => Hub) => void;\n  }>;\n\n  /**\n   * beforeNavigate is called before a pageload/navigation transaction is created and allows users to modify transaction\n   * context data, or drop the transaction entirely (by setting `sampled = false` in the context).\n   *\n   * Note: For legacy reasons, transactions can also be dropped by returning `undefined`.\n   *\n   * @param context: The context data which will be passed to `startTransaction` by default\n   *\n   * @returns A (potentially) modified context object, with `sampled = false` if the transaction should be dropped.\n   */\n  beforeNavigate?(this: void, context: TransactionContext): TransactionContext | undefined;\n\n  /**\n   * Instrumentation that creates routing change transactions. By default creates\n   * pageload and navigation transactions.\n   */\n  routingInstrumentation<T extends Transaction>(\n    this: void,\n    customStartTransaction: (context: TransactionContext) => T | undefined,\n    startTransactionOnPageLoad?: boolean,\n    startTransactionOnLocationChange?: boolean,\n  ): void;\n}\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS: BrowserTracingOptions = {\n  ...TRACING_DEFAULTS,\n  markBackgroundTransactions: true,\n  routingInstrumentation: instrumentRoutingWithDefaults,\n  startTransactionOnLocationChange: true,\n  startTransactionOnPageLoad: true,\n  enableLongTask: true,\n  enableInp: false,\n  interactionsSampleRate: 1,\n  _experiments: {},\n  ...defaultRequestInstrumentationOptions,\n};\n\n/** We store up to 10 interaction candidates max to cap memory usage. This is the same cap as getINP from web-vitals */\nconst MAX_INTERACTIONS = 10;\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n *\n * @deprecated Use `browserTracingIntegration()` instead.\n */\nexport class BrowserTracing implements Integration {\n  // This class currently doesn't have a static `id` field like the other integration classes, because it prevented\n  // @sentry/tracing from being treeshaken. Tree shakers do not like static fields, because they behave like side effects.\n  // TODO: Come up with a better plan, than using static fields on integration classes, and use that plan on all\n  // integrations.\n\n  /** Browser Tracing integration options */\n  public options: BrowserTracingOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public name: string;\n\n  // eslint-disable-next-line deprecation/deprecation\n  private _getCurrentHub?: () => Hub;\n\n  private _collectWebVitals: () => void;\n\n  private _hasSetTracePropagationTargets: boolean;\n  private _interactionIdToRouteNameMapping: InteractionRouteNameMapping;\n  private _latestRoute: {\n    name: string | undefined;\n    context: TransactionContext | undefined;\n  };\n\n  public constructor(_options?: Partial<BrowserTracingOptions>) {\n    this.name = BROWSER_TRACING_INTEGRATION_ID;\n    this._hasSetTracePropagationTargets = false;\n\n    addTracingExtensions();\n\n    if (DEBUG_BUILD) {\n      this._hasSetTracePropagationTargets = !!(\n        _options &&\n        // eslint-disable-next-line deprecation/deprecation\n        (_options.tracePropagationTargets || _options.tracingOrigins)\n      );\n    }\n\n    this.options = {\n      ...DEFAULT_BROWSER_TRACING_OPTIONS,\n      ..._options,\n    };\n\n    // Special case: enableLongTask can be set in _experiments\n    // TODO (v8): Remove this in v8\n    if (this.options._experiments.enableLongTask !== undefined) {\n      this.options.enableLongTask = this.options._experiments.enableLongTask;\n    }\n\n    // TODO (v8): remove this block after tracingOrigins is removed\n    // Set tracePropagationTargets to tracingOrigins if specified by the user\n    // In case both are specified, tracePropagationTargets takes precedence\n    // eslint-disable-next-line deprecation/deprecation\n    if (_options && !_options.tracePropagationTargets && _options.tracingOrigins) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.options.tracePropagationTargets = _options.tracingOrigins;\n    }\n\n    this._collectWebVitals = startTrackingWebVitals();\n    /** Stores a mapping of interactionIds from PerformanceEventTimings to the origin interaction path */\n    this._interactionIdToRouteNameMapping = {};\n\n    if (this.options.enableInp) {\n      startTrackingINP(this._interactionIdToRouteNameMapping, this.options.interactionsSampleRate);\n    }\n    if (this.options.enableLongTask) {\n      startTrackingLongTasks();\n    }\n    if (this.options._experiments.enableInteractions) {\n      startTrackingInteractions();\n    }\n\n    this._latestRoute = {\n      name: undefined,\n      context: undefined,\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    this._getCurrentHub = getCurrentHub;\n    const hub = getCurrentHub();\n    // eslint-disable-next-line deprecation/deprecation\n    const client = hub.getClient();\n    const clientOptions = client && client.getOptions();\n\n    const {\n      routingInstrumentation: instrumentRouting,\n      startTransactionOnLocationChange,\n      startTransactionOnPageLoad,\n      markBackgroundTransactions,\n      traceFetch,\n      traceXHR,\n      shouldCreateSpanForRequest,\n      enableHTTPTimings,\n      _experiments,\n    } = this.options;\n\n    const clientOptionsTracePropagationTargets = clientOptions && clientOptions.tracePropagationTargets;\n    // There are three ways to configure tracePropagationTargets:\n    // 1. via top level client option `tracePropagationTargets`\n    // 2. via BrowserTracing option `tracePropagationTargets`\n    // 3. via BrowserTracing option `tracingOrigins` (deprecated)\n    //\n    // To avoid confusion, favour top level client option `tracePropagationTargets`, and fallback to\n    // BrowserTracing option `tracePropagationTargets` and then `tracingOrigins` (deprecated).\n    // This is done as it minimizes bundle size (we don't have to have undefined checks).\n    //\n    // If both 1 and either one of 2 or 3 are set (from above), we log out a warning.\n    // eslint-disable-next-line deprecation/deprecation\n    const tracePropagationTargets = clientOptionsTracePropagationTargets || this.options.tracePropagationTargets;\n    if (DEBUG_BUILD && this._hasSetTracePropagationTargets && clientOptionsTracePropagationTargets) {\n      logger.warn(\n        '[Tracing] The `tracePropagationTargets` option was set in the BrowserTracing integration and top level `Sentry.init`. The top level `Sentry.init` value is being used.',\n      );\n    }\n\n    instrumentRouting(\n      (context: TransactionContext) => {\n        const transaction = this._createRouteTransaction(context);\n\n        this.options._experiments.onStartRouteTransaction &&\n          this.options._experiments.onStartRouteTransaction(transaction, context, getCurrentHub);\n\n        return transaction;\n      },\n      startTransactionOnPageLoad,\n      startTransactionOnLocationChange,\n    );\n\n    if (markBackgroundTransactions) {\n      registerBackgroundTabDetection();\n    }\n\n    if (_experiments.enableInteractions) {\n      this._registerInteractionListener();\n    }\n\n    if (this.options.enableInp) {\n      this._registerInpInteractionListener();\n    }\n\n    instrumentOutgoingRequests({\n      traceFetch,\n      traceXHR,\n      tracePropagationTargets,\n      shouldCreateSpanForRequest,\n      enableHTTPTimings,\n    });\n  }\n\n  /** Create routing idle transaction. */\n  private _createRouteTransaction(context: TransactionContext): Transaction | undefined {\n    if (!this._getCurrentHub) {\n      DEBUG_BUILD &&\n        logger.warn(`[Tracing] Did not create ${context.op} transaction because _getCurrentHub is invalid.`);\n      return undefined;\n    }\n\n    const hub = this._getCurrentHub();\n\n    const { beforeNavigate, idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n\n    const isPageloadTransaction = context.op === 'pageload';\n\n    let expandedContext: TransactionContext;\n    if (isPageloadTransaction) {\n      const sentryTrace = isPageloadTransaction ? getMetaContent('sentry-trace') : '';\n      const baggage = isPageloadTransaction ? getMetaContent('baggage') : undefined;\n      const { traceId, dsc, parentSpanId, sampled } = propagationContextFromHeaders(sentryTrace, baggage);\n      expandedContext = {\n        traceId,\n        parentSpanId,\n        parentSampled: sampled,\n        ...context,\n        metadata: {\n          // eslint-disable-next-line deprecation/deprecation\n          ...context.metadata,\n          dynamicSamplingContext: dsc,\n        },\n        trimEnd: true,\n      };\n    } else {\n      expandedContext = {\n        trimEnd: true,\n        ...context,\n      };\n    }\n\n    const modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n\n    // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n    // from being sent to Sentry).\n    const finalContext = modifiedContext === undefined ? { ...expandedContext, sampled: false } : modifiedContext;\n\n    // If `beforeNavigate` set a custom name, record that fact\n    // eslint-disable-next-line deprecation/deprecation\n    finalContext.metadata =\n      finalContext.name !== expandedContext.name\n        ? // eslint-disable-next-line deprecation/deprecation\n          { ...finalContext.metadata, source: 'custom' }\n        : // eslint-disable-next-line deprecation/deprecation\n          finalContext.metadata;\n\n    this._latestRoute.name = finalContext.name;\n    this._latestRoute.context = finalContext;\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (finalContext.sampled === false) {\n      DEBUG_BUILD && logger.log(`[Tracing] Will not send ${finalContext.op} transaction because of beforeNavigate.`);\n    }\n\n    DEBUG_BUILD && logger.log(`[Tracing] Starting ${finalContext.op} transaction on scope`);\n\n    const { location } = WINDOW;\n\n    const idleTransaction = startIdleTransaction(\n      hub,\n      finalContext,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n      heartbeatInterval,\n      isPageloadTransaction, // should wait for finish signal if it's a pageload transaction\n    );\n\n    if (isPageloadTransaction) {\n      if (WINDOW.document) {\n        WINDOW.document.addEventListener('readystatechange', () => {\n          if (['interactive', 'complete'].includes(WINDOW.document!.readyState)) {\n            idleTransaction.sendAutoFinishSignal();\n          }\n        });\n\n        if (['interactive', 'complete'].includes(WINDOW.document.readyState)) {\n          idleTransaction.sendAutoFinishSignal();\n        }\n      }\n    }\n\n    idleTransaction.registerBeforeFinishCallback(transaction => {\n      this._collectWebVitals();\n      addPerformanceEntries(transaction);\n    });\n\n    return idleTransaction as Transaction;\n  }\n\n  /** Start listener for interaction transactions */\n  private _registerInteractionListener(): void {\n    let inflightInteractionTransaction: IdleTransaction | undefined;\n    const registerInteractionTransaction = (): void => {\n      const { idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n      const op = 'ui.action.click';\n\n      // eslint-disable-next-line deprecation/deprecation\n      const currentTransaction = getActiveTransaction();\n      if (currentTransaction && currentTransaction.op && ['navigation', 'pageload'].includes(currentTransaction.op)) {\n        DEBUG_BUILD &&\n          logger.warn(\n            `[Tracing] Did not create ${op} transaction because a pageload or navigation transaction is in progress.`,\n          );\n        return undefined;\n      }\n\n      if (inflightInteractionTransaction) {\n        inflightInteractionTransaction.setFinishReason('interactionInterrupted');\n        inflightInteractionTransaction.end();\n        inflightInteractionTransaction = undefined;\n      }\n\n      if (!this._getCurrentHub) {\n        DEBUG_BUILD && logger.warn(`[Tracing] Did not create ${op} transaction because _getCurrentHub is invalid.`);\n        return undefined;\n      }\n\n      if (!this._latestRoute.name) {\n        DEBUG_BUILD && logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n        return undefined;\n      }\n\n      const hub = this._getCurrentHub();\n      const { location } = WINDOW;\n\n      const context: TransactionContext = {\n        name: this._latestRoute.name,\n        op,\n        trimEnd: true,\n        data: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: this._latestRoute.context\n            ? getSource(this._latestRoute.context)\n            : undefined || 'url',\n        },\n      };\n\n      inflightInteractionTransaction = startIdleTransaction(\n        hub,\n        context,\n        idleTimeout,\n        finalTimeout,\n        true,\n        { location }, // for use in the tracesSampler\n        heartbeatInterval,\n      );\n    };\n\n    ['click'].forEach(type => {\n      if (WINDOW.document) {\n        addEventListener(type, registerInteractionTransaction, { once: false, capture: true });\n      }\n    });\n  }\n\n  /** Creates a listener on interaction entries, and maps interactionIds to the origin path of the interaction */\n  private _registerInpInteractionListener(): void {\n    const handleEntries = ({ entries }: { entries: PerformanceEntry[] }): void => {\n      const client = getClient();\n      // We need to get the replay, user, and activeTransaction from the current scope\n      // so that we can associate replay id, profile id, and a user display to the span\n      const replay =\n        client !== undefined && client.getIntegrationByName !== undefined\n          ? (client.getIntegrationByName('Replay') as Integration & { getReplayId: () => string })\n          : undefined;\n      const replayId = replay !== undefined ? replay.getReplayId() : undefined;\n      // eslint-disable-next-line deprecation/deprecation\n      const activeTransaction = getActiveTransaction();\n      const currentScope = getCurrentScope();\n      const user = currentScope !== undefined ? currentScope.getUser() : undefined;\n      entries.forEach(entry => {\n        if (isPerformanceEventTiming(entry)) {\n          const interactionId = entry.interactionId;\n          if (interactionId === undefined) {\n            return;\n          }\n          const existingInteraction = this._interactionIdToRouteNameMapping[interactionId];\n          const duration = entry.duration;\n          const startTime = entry.startTime;\n          const keys = Object.keys(this._interactionIdToRouteNameMapping);\n          const minInteractionId =\n            keys.length > 0\n              ? keys.reduce((a, b) => {\n                  return this._interactionIdToRouteNameMapping[a].duration <\n                    this._interactionIdToRouteNameMapping[b].duration\n                    ? a\n                    : b;\n                })\n              : undefined;\n          // For a first input event to be considered, we must check that an interaction event does not already exist with the same duration and start time.\n          // This is also checked in the web-vitals library.\n          if (entry.entryType === 'first-input') {\n            const matchingEntry = keys\n              .map(key => this._interactionIdToRouteNameMapping[key])\n              .some(interaction => {\n                return interaction.duration === duration && interaction.startTime === startTime;\n              });\n            if (matchingEntry) {\n              return;\n            }\n          }\n          // Interactions with an id of 0 and are not first-input are not valid.\n          if (!interactionId) {\n            return;\n          }\n          // If the interaction already exists, we want to use the duration of the longest entry, since that is what the INP metric uses.\n          if (existingInteraction) {\n            existingInteraction.duration = Math.max(existingInteraction.duration, duration);\n          } else if (\n            keys.length < MAX_INTERACTIONS ||\n            minInteractionId === undefined ||\n            duration > this._interactionIdToRouteNameMapping[minInteractionId].duration\n          ) {\n            // If the interaction does not exist, we want to add it to the mapping if there is space, or if the duration is longer than the shortest entry.\n            const routeName = this._latestRoute.name;\n            const parentContext = this._latestRoute.context;\n            if (routeName && parentContext) {\n              if (minInteractionId && Object.keys(this._interactionIdToRouteNameMapping).length >= MAX_INTERACTIONS) {\n                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                delete this._interactionIdToRouteNameMapping[minInteractionId];\n              }\n              this._interactionIdToRouteNameMapping[interactionId] = {\n                routeName,\n                duration,\n                parentContext,\n                user,\n                activeTransaction,\n                replayId,\n                startTime,\n              };\n            }\n          }\n        }\n      });\n    };\n    addPerformanceInstrumentationHandler('event', handleEntries);\n    addPerformanceInstrumentationHandler('first-input', handleEntries);\n  }\n}\n\n/** Returns the value of a meta tag */\nexport function getMetaContent(metaName: string): string | undefined {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  const metaTag = getDomElement(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : undefined;\n}\n\nfunction getSource(context: TransactionContext): TransactionSource | undefined {\n  const sourceFromAttributes = context.attributes && context.attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n  // eslint-disable-next-line deprecation/deprecation\n  const sourceFromData = context.data && context.data[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n  // eslint-disable-next-line deprecation/deprecation\n  const sourceFromMetadata = context.metadata && context.metadata.source;\n\n  return sourceFromAttributes || sourceFromData || sourceFromMetadata;\n}\n\nfunction isPerformanceEventTiming(entry: PerformanceEntry): entry is PerformanceEventTiming {\n  return 'duration' in entry;\n}\n","import type { Transaction, TransactionContext } from '@sentry/types';\nimport { addHistoryInstrumentationHandler, browserPerformanceTimeOrigin, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../common/debug-build';\nimport { WINDOW } from './types';\n\n/**\n * Default function implementing pageload and navigation transactions\n */\nexport function instrumentRoutingWithDefaults<T extends Transaction>(\n  customStartTransaction: (context: TransactionContext) => T | undefined,\n  startTransactionOnPageLoad: boolean = true,\n  startTransactionOnLocationChange: boolean = true,\n): void {\n  if (!WINDOW || !WINDOW.location) {\n    DEBUG_BUILD && logger.warn('Could not initialize routing instrumentation due to invalid location');\n    return;\n  }\n\n  let startingUrl: string | undefined = WINDOW.location.href;\n\n  let activeTransaction: T | undefined;\n  if (startTransactionOnPageLoad) {\n    activeTransaction = customStartTransaction({\n      name: WINDOW.location.pathname,\n      // pageload should always start at timeOrigin (and needs to be in s, not ms)\n      startTimestamp: browserPerformanceTimeOrigin ? browserPerformanceTimeOrigin / 1000 : undefined,\n      op: 'pageload',\n      origin: 'auto.pageload.browser',\n      metadata: { source: 'url' },\n    });\n  }\n\n  if (startTransactionOnLocationChange) {\n    addHistoryInstrumentationHandler(({ to, from }) => {\n      /**\n       * This early return is there to account for some cases where a navigation transaction starts right after\n       * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n       * create an uneccessary navigation transaction.\n       *\n       * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n       * only be caused in certain development environments where the usage of a hot module reloader is causing\n       * errors.\n       */\n      if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n        startingUrl = undefined;\n        return;\n      }\n\n      if (from !== to) {\n        startingUrl = undefined;\n        if (activeTransaction) {\n          DEBUG_BUILD && logger.log(`[Tracing] Finishing current transaction with op: ${activeTransaction.op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeTransaction.end();\n        }\n        activeTransaction = customStartTransaction({\n          name: WINDOW.location.pathname,\n          op: 'navigation',\n          origin: 'auto.navigation.browser',\n          metadata: { source: 'url' },\n        });\n      }\n    });\n  }\n}\n","/* eslint-disable max-lines */\nimport type { IdleTransaction } from '@sentry/core';\nimport { getActiveSpan, getClient, getCurrentScope } from '@sentry/core';\nimport { getCurrentHub } from '@sentry/core';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  TRACING_DEFAULTS,\n  addTracingExtensions,\n  getActiveTransaction,\n  spanToJSON,\n  startIdleTransaction,\n} from '@sentry/core';\nimport type {\n  Client,\n  Integration,\n  IntegrationFn,\n  StartSpanOptions,\n  Transaction,\n  TransactionContext,\n  TransactionSource,\n} from '@sentry/types';\nimport type { Span } from '@sentry/types';\nimport {\n  addHistoryInstrumentationHandler,\n  browserPerformanceTimeOrigin,\n  getDomElement,\n  logger,\n  propagationContextFromHeaders,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../common/debug-build';\nimport { registerBackgroundTabDetection } from './backgroundtab';\nimport { addPerformanceInstrumentationHandler } from './instrument';\nimport {\n  addPerformanceEntries,\n  startTrackingINP,\n  startTrackingInteractions,\n  startTrackingLongTasks,\n  startTrackingWebVitals,\n} from './metrics';\nimport type { RequestInstrumentationOptions } from './request';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './request';\nimport { WINDOW } from './types';\nimport type { InteractionRouteNameMapping } from './web-vitals/types';\n\nexport const BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\n/** Options for Browser Tracing integration */\nexport interface BrowserTracingOptions extends RequestInstrumentationOptions {\n  /**\n   * The time to wait in ms until the transaction will be finished during an idle state. An idle state is defined\n   * by a moment where there are no in-progress spans.\n   *\n   * The transaction will use the end timestamp of the last finished span as the endtime for the transaction.\n   * If there are still active spans when this the `idleTimeout` is set, the `idleTimeout` will get reset.\n   * Time is in ms.\n   *\n   * Default: 1000\n   */\n  idleTimeout: number;\n\n  /**\n   * The max duration for a transaction. If a transaction duration hits the `finalTimeout` value, it\n   * will be finished.\n   * Time is in ms.\n   *\n   * Default: 30000\n   */\n  finalTimeout: number;\n\n  /**\n   * The heartbeat interval. If no new spans are started or open spans are finished within 3 heartbeats,\n   * the transaction will be finished.\n   * Time is in ms.\n   *\n   * Default: 5000\n   */\n  heartbeatInterval: number;\n\n  /**\n   * If a span should be created on page load.\n   * If this is set to `false`, this integration will not start the default page load span.\n   * Default: true\n   */\n  instrumentPageLoad: boolean;\n\n  /**\n   * If a span should be created on navigation (history change).\n   * If this is set to `false`, this integration will not start the default navigation spans.\n   * Default: true\n   */\n  instrumentNavigation: boolean;\n\n  /**\n   * Flag spans where tabs moved to background with \"cancelled\". Browser background tab timing is\n   * not suited towards doing precise measurements of operations. By default, we recommend that this option\n   * be enabled as background transactions can mess up your statistics in nondeterministic ways.\n   *\n   * Default: true\n   */\n  markBackgroundSpan: boolean;\n\n  /**\n   * If true, Sentry will capture long tasks and add them to the corresponding transaction.\n   *\n   * Default: true\n   */\n  enableLongTask: boolean;\n\n  /**\n   * If true, Sentry will capture INP web vitals as standalone spans .\n   *\n   * Default: false\n   */\n  enableInp: boolean;\n\n  /**\n   * Sample rate to determine interaction span sampling.\n   * interactionsSampleRate is applied on top of the global tracesSampleRate.\n   * ie a tracesSampleRate of 0.1 and interactionsSampleRate of 0.5 will result in a 0.05 sample rate for interactions.\n   *\n   * Default: 1\n   */\n  interactionsSampleRate: number;\n\n  /**\n   * _metricOptions allows the user to send options to change how metrics are collected.\n   *\n   * _metricOptions is currently experimental.\n   *\n   * Default: undefined\n   */\n  _metricOptions?: Partial<{\n    /**\n     * @deprecated This property no longer has any effect and will be removed in v8.\n     */\n    _reportAllChanges: boolean;\n  }>;\n\n  /**\n   * _experiments allows the user to send options to define how this integration works.\n   * Note that the `enableLongTask` options is deprecated in favor of the option at the top level, and will be removed in v8.\n   *\n   * TODO (v8): Remove enableLongTask\n   *\n   * Default: undefined\n   */\n  _experiments: Partial<{\n    enableInteractions: boolean;\n  }>;\n\n  /**\n   * A callback which is called before a span for a pageload or navigation is started.\n   * It receives the options passed to `startSpan`, and expects to return an updated options object.\n   */\n  beforeStartSpan?: (options: StartSpanOptions) => StartSpanOptions;\n}\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS: BrowserTracingOptions = {\n  ...TRACING_DEFAULTS,\n  instrumentNavigation: true,\n  instrumentPageLoad: true,\n  markBackgroundSpan: true,\n  enableLongTask: true,\n  enableInp: false,\n  interactionsSampleRate: 1,\n  _experiments: {},\n  ...defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n *\n * We explicitly export the proper type here, as this has to be extended in some cases.\n */\nexport const browserTracingIntegration = ((_options: Partial<BrowserTracingOptions> = {}) => {\n  const _hasSetTracePropagationTargets = DEBUG_BUILD\n    ? !!(\n        // eslint-disable-next-line deprecation/deprecation\n        (_options.tracePropagationTargets || _options.tracingOrigins)\n      )\n    : false;\n\n  addTracingExtensions();\n\n  // TODO (v8): remove this block after tracingOrigins is removed\n  // Set tracePropagationTargets to tracingOrigins if specified by the user\n  // In case both are specified, tracePropagationTargets takes precedence\n  // eslint-disable-next-line deprecation/deprecation\n  if (!_options.tracePropagationTargets && _options.tracingOrigins) {\n    // eslint-disable-next-line deprecation/deprecation\n    _options.tracePropagationTargets = _options.tracingOrigins;\n  }\n\n  const options = {\n    ...DEFAULT_BROWSER_TRACING_OPTIONS,\n    ..._options,\n  };\n\n  const _collectWebVitals = startTrackingWebVitals();\n\n  /** Stores a mapping of interactionIds from PerformanceEventTimings to the origin interaction path */\n  const interactionIdToRouteNameMapping: InteractionRouteNameMapping = {};\n  if (options.enableInp) {\n    startTrackingINP(interactionIdToRouteNameMapping, options.interactionsSampleRate);\n  }\n\n  if (options.enableLongTask) {\n    startTrackingLongTasks();\n  }\n  if (options._experiments.enableInteractions) {\n    startTrackingInteractions();\n  }\n\n  const latestRoute: {\n    name: string | undefined;\n    context: TransactionContext | undefined;\n  } = {\n    name: undefined,\n    context: undefined,\n  };\n\n  /** Create routing idle transaction. */\n  function _createRouteTransaction(context: TransactionContext): Transaction | undefined {\n    // eslint-disable-next-line deprecation/deprecation\n    const hub = getCurrentHub();\n\n    const { beforeStartSpan, idleTimeout, finalTimeout, heartbeatInterval } = options;\n\n    const isPageloadTransaction = context.op === 'pageload';\n\n    let expandedContext: TransactionContext;\n    if (isPageloadTransaction) {\n      const sentryTrace = isPageloadTransaction ? getMetaContent('sentry-trace') : '';\n      const baggage = isPageloadTransaction ? getMetaContent('baggage') : undefined;\n      const { traceId, dsc, parentSpanId, sampled } = propagationContextFromHeaders(sentryTrace, baggage);\n      expandedContext = {\n        traceId,\n        parentSpanId,\n        parentSampled: sampled,\n        ...context,\n        metadata: {\n          // eslint-disable-next-line deprecation/deprecation\n          ...context.metadata,\n          dynamicSamplingContext: dsc,\n        },\n        trimEnd: true,\n      };\n    } else {\n      expandedContext = {\n        trimEnd: true,\n        ...context,\n      };\n    }\n\n    const finalContext = beforeStartSpan ? beforeStartSpan(expandedContext) : expandedContext;\n\n    // If `beforeStartSpan` set a custom name, record that fact\n    // eslint-disable-next-line deprecation/deprecation\n    finalContext.metadata =\n      finalContext.name !== expandedContext.name\n        ? // eslint-disable-next-line deprecation/deprecation\n          { ...finalContext.metadata, source: 'custom' }\n        : // eslint-disable-next-line deprecation/deprecation\n          finalContext.metadata;\n\n    latestRoute.name = finalContext.name;\n    latestRoute.context = finalContext;\n\n    if (finalContext.sampled === false) {\n      DEBUG_BUILD && logger.log(`[Tracing] Will not send ${finalContext.op} transaction because of beforeNavigate.`);\n    }\n\n    DEBUG_BUILD && logger.log(`[Tracing] Starting ${finalContext.op} transaction on scope`);\n\n    const { location } = WINDOW;\n\n    const idleTransaction = startIdleTransaction(\n      hub,\n      finalContext,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n      heartbeatInterval,\n      isPageloadTransaction, // should wait for finish signal if it's a pageload transaction\n    );\n\n    if (isPageloadTransaction && WINDOW.document) {\n      WINDOW.document.addEventListener('readystatechange', () => {\n        if (['interactive', 'complete'].includes(WINDOW.document!.readyState)) {\n          idleTransaction.sendAutoFinishSignal();\n        }\n      });\n\n      if (['interactive', 'complete'].includes(WINDOW.document.readyState)) {\n        idleTransaction.sendAutoFinishSignal();\n      }\n    }\n\n    idleTransaction.registerBeforeFinishCallback(transaction => {\n      _collectWebVitals();\n      addPerformanceEntries(transaction);\n    });\n\n    return idleTransaction as Transaction;\n  }\n\n  return {\n    name: BROWSER_TRACING_INTEGRATION_ID,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    setupOnce: () => {},\n    afterAllSetup(client) {\n      const clientOptions = client.getOptions();\n\n      const { markBackgroundSpan, traceFetch, traceXHR, shouldCreateSpanForRequest, enableHTTPTimings, _experiments } =\n        options;\n\n      const clientOptionsTracePropagationTargets = clientOptions && clientOptions.tracePropagationTargets;\n      // There are three ways to configure tracePropagationTargets:\n      // 1. via top level client option `tracePropagationTargets`\n      // 2. via BrowserTracing option `tracePropagationTargets`\n      // 3. via BrowserTracing option `tracingOrigins` (deprecated)\n      //\n      // To avoid confusion, favour top level client option `tracePropagationTargets`, and fallback to\n      // BrowserTracing option `tracePropagationTargets` and then `tracingOrigins` (deprecated).\n      // This is done as it minimizes bundle size (we don't have to have undefined checks).\n      //\n      // If both 1 and either one of 2 or 3 are set (from above), we log out a warning.\n      // eslint-disable-next-line deprecation/deprecation\n      const tracePropagationTargets = clientOptionsTracePropagationTargets || options.tracePropagationTargets;\n      if (DEBUG_BUILD && _hasSetTracePropagationTargets && clientOptionsTracePropagationTargets) {\n        logger.warn(\n          '[Tracing] The `tracePropagationTargets` option was set in the BrowserTracing integration and top level `Sentry.init`. The top level `Sentry.init` value is being used.',\n        );\n      }\n\n      let activeSpan: Span | undefined;\n      let startingUrl: string | undefined = WINDOW.location && WINDOW.location.href;\n\n      if (client.on) {\n        client.on('startNavigationSpan', (context: StartSpanOptions) => {\n          if (activeSpan) {\n            DEBUG_BUILD && logger.log(`[Tracing] Finishing current transaction with op: ${spanToJSON(activeSpan).op}`);\n            // If there's an open transaction on the scope, we need to finish it before creating an new one.\n            activeSpan.end();\n          }\n          activeSpan = _createRouteTransaction({\n            op: 'navigation',\n            ...context,\n          });\n        });\n\n        client.on('startPageLoadSpan', (context: StartSpanOptions) => {\n          if (activeSpan) {\n            DEBUG_BUILD && logger.log(`[Tracing] Finishing current transaction with op: ${spanToJSON(activeSpan).op}`);\n            // If there's an open transaction on the scope, we need to finish it before creating an new one.\n            activeSpan.end();\n          }\n          activeSpan = _createRouteTransaction({\n            op: 'pageload',\n            ...context,\n          });\n        });\n      }\n\n      if (options.instrumentPageLoad && client.emit && WINDOW.location) {\n        const context: StartSpanOptions = {\n          name: WINDOW.location.pathname,\n          // pageload should always start at timeOrigin (and needs to be in s, not ms)\n          startTimestamp: browserPerformanceTimeOrigin ? browserPerformanceTimeOrigin / 1000 : undefined,\n          origin: 'auto.pageload.browser',\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n          },\n        };\n        startBrowserTracingPageLoadSpan(client, context);\n      }\n\n      if (options.instrumentNavigation && client.emit && WINDOW.location) {\n        addHistoryInstrumentationHandler(({ to, from }) => {\n          /**\n           * This early return is there to account for some cases where a navigation transaction starts right after\n           * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n           * create an uneccessary navigation transaction.\n           *\n           * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n           * only be caused in certain development environments where the usage of a hot module reloader is causing\n           * errors.\n           */\n          if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n            startingUrl = undefined;\n            return;\n          }\n\n          if (from !== to) {\n            startingUrl = undefined;\n            const context: StartSpanOptions = {\n              name: WINDOW.location.pathname,\n              origin: 'auto.navigation.browser',\n              attributes: {\n                [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n              },\n            };\n\n            startBrowserTracingNavigationSpan(client, context);\n          }\n        });\n      }\n\n      if (markBackgroundSpan) {\n        registerBackgroundTabDetection();\n      }\n\n      if (_experiments.enableInteractions) {\n        registerInteractionListener(options, latestRoute);\n      }\n\n      if (options.enableInp) {\n        registerInpInteractionListener(interactionIdToRouteNameMapping, latestRoute);\n      }\n\n      instrumentOutgoingRequests({\n        traceFetch,\n        traceXHR,\n        tracePropagationTargets,\n        shouldCreateSpanForRequest,\n        enableHTTPTimings,\n      });\n    },\n    // TODO v8: Remove this again\n    // This is private API that we use to fix converted BrowserTracing integrations in Next.js & SvelteKit\n    options,\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Manually start a page load span.\n * This will only do something if the BrowserTracing integration has been setup.\n */\nexport function startBrowserTracingPageLoadSpan(client: Client, spanOptions: StartSpanOptions): Span | undefined {\n  if (!client.emit) {\n    return;\n  }\n\n  client.emit('startPageLoadSpan', spanOptions);\n\n  const span = getActiveSpan();\n  const op = span && spanToJSON(span).op;\n  return op === 'pageload' ? span : undefined;\n}\n\n/**\n * Manually start a navigation span.\n * This will only do something if the BrowserTracing integration has been setup.\n */\nexport function startBrowserTracingNavigationSpan(client: Client, spanOptions: StartSpanOptions): Span | undefined {\n  if (!client.emit) {\n    return;\n  }\n\n  client.emit('startNavigationSpan', spanOptions);\n\n  const span = getActiveSpan();\n  const op = span && spanToJSON(span).op;\n  return op === 'navigation' ? span : undefined;\n}\n\n/** Returns the value of a meta tag */\nexport function getMetaContent(metaName: string): string | undefined {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  const metaTag = getDomElement(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : undefined;\n}\n\n/** Start listener for interaction transactions */\nfunction registerInteractionListener(\n  options: BrowserTracingOptions,\n  latestRoute: {\n    name: string | undefined;\n    context: TransactionContext | undefined;\n  },\n): void {\n  let inflightInteractionTransaction: IdleTransaction | undefined;\n  const registerInteractionTransaction = (): void => {\n    const { idleTimeout, finalTimeout, heartbeatInterval } = options;\n    const op = 'ui.action.click';\n\n    // eslint-disable-next-line deprecation/deprecation\n    const currentTransaction = getActiveTransaction();\n    if (currentTransaction && currentTransaction.op && ['navigation', 'pageload'].includes(currentTransaction.op)) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `[Tracing] Did not create ${op} transaction because a pageload or navigation transaction is in progress.`,\n        );\n      return undefined;\n    }\n\n    if (inflightInteractionTransaction) {\n      inflightInteractionTransaction.setFinishReason('interactionInterrupted');\n      inflightInteractionTransaction.end();\n      inflightInteractionTransaction = undefined;\n    }\n\n    if (!latestRoute.name) {\n      DEBUG_BUILD && logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n      return undefined;\n    }\n\n    const { location } = WINDOW;\n\n    const context: TransactionContext = {\n      name: latestRoute.name,\n      op,\n      trimEnd: true,\n      data: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: latestRoute.context ? getSource(latestRoute.context) : undefined || 'url',\n      },\n    };\n\n    inflightInteractionTransaction = startIdleTransaction(\n      // eslint-disable-next-line deprecation/deprecation\n      getCurrentHub(),\n      context,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n      heartbeatInterval,\n    );\n  };\n\n  ['click'].forEach(type => {\n    if (WINDOW.document) {\n      addEventListener(type, registerInteractionTransaction, { once: false, capture: true });\n    }\n  });\n}\n\nfunction isPerformanceEventTiming(entry: PerformanceEntry): entry is PerformanceEventTiming {\n  return 'duration' in entry;\n}\n\n/** We store up to 10 interaction candidates max to cap memory usage. This is the same cap as getINP from web-vitals */\nconst MAX_INTERACTIONS = 10;\n\n/** Creates a listener on interaction entries, and maps interactionIds to the origin path of the interaction */\nfunction registerInpInteractionListener(\n  interactionIdToRouteNameMapping: InteractionRouteNameMapping,\n  latestRoute: {\n    name: string | undefined;\n    context: TransactionContext | undefined;\n  },\n): void {\n  const handleEntries = ({ entries }: { entries: PerformanceEntry[] }): void => {\n    const client = getClient();\n    // We need to get the replay, user, and activeTransaction from the current scope\n    // so that we can associate replay id, profile id, and a user display to the span\n    const replay =\n      client !== undefined && client.getIntegrationByName !== undefined\n        ? (client.getIntegrationByName('Replay') as Integration & { getReplayId: () => string })\n        : undefined;\n    const replayId = replay !== undefined ? replay.getReplayId() : undefined;\n    // eslint-disable-next-line deprecation/deprecation\n    const activeTransaction = getActiveTransaction();\n    const currentScope = getCurrentScope();\n    const user = currentScope !== undefined ? currentScope.getUser() : undefined;\n    entries.forEach(entry => {\n      if (isPerformanceEventTiming(entry)) {\n        const interactionId = entry.interactionId;\n        if (interactionId === undefined) {\n          return;\n        }\n        const existingInteraction = interactionIdToRouteNameMapping[interactionId];\n        const duration = entry.duration;\n        const startTime = entry.startTime;\n        const keys = Object.keys(interactionIdToRouteNameMapping);\n        const minInteractionId =\n          keys.length > 0\n            ? keys.reduce((a, b) => {\n                return interactionIdToRouteNameMapping[a].duration < interactionIdToRouteNameMapping[b].duration\n                  ? a\n                  : b;\n              })\n            : undefined;\n        // For a first input event to be considered, we must check that an interaction event does not already exist with the same duration and start time.\n        // This is also checked in the web-vitals library.\n        if (entry.entryType === 'first-input') {\n          const matchingEntry = keys\n            .map(key => interactionIdToRouteNameMapping[key])\n            .some(interaction => {\n              return interaction.duration === duration && interaction.startTime === startTime;\n            });\n          if (matchingEntry) {\n            return;\n          }\n        }\n        // Interactions with an id of 0 and are not first-input are not valid.\n        if (!interactionId) {\n          return;\n        }\n        // If the interaction already exists, we want to use the duration of the longest entry, since that is what the INP metric uses.\n        if (existingInteraction) {\n          existingInteraction.duration = Math.max(existingInteraction.duration, duration);\n        } else if (\n          keys.length < MAX_INTERACTIONS ||\n          minInteractionId === undefined ||\n          duration > interactionIdToRouteNameMapping[minInteractionId].duration\n        ) {\n          // If the interaction does not exist, we want to add it to the mapping if there is space, or if the duration is longer than the shortest entry.\n          const routeName = latestRoute.name;\n          const parentContext = latestRoute.context;\n          if (routeName && parentContext) {\n            if (minInteractionId && Object.keys(interactionIdToRouteNameMapping).length >= MAX_INTERACTIONS) {\n              // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n              delete interactionIdToRouteNameMapping[minInteractionId];\n            }\n            interactionIdToRouteNameMapping[interactionId] = {\n              routeName,\n              duration,\n              parentContext,\n              user,\n              activeTransaction,\n              replayId,\n              startTime,\n            };\n          }\n        }\n      }\n    });\n  };\n  addPerformanceInstrumentationHandler('event', handleEntries);\n  addPerformanceInstrumentationHandler('first-input', handleEntries);\n}\n\nfunction getSource(context: TransactionContext): TransactionSource | undefined {\n  const sourceFromAttributes = context.attributes && context.attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n  // eslint-disable-next-line deprecation/deprecation\n  const sourceFromData = context.data && context.data[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n  // eslint-disable-next-line deprecation/deprecation\n  const sourceFromMetadata = context.metadata && context.metadata.source;\n\n  return sourceFromAttributes || sourceFromData || sourceFromMetadata;\n}\n","import type { Envelope, InternalBaseTransportOptions, Transport, TransportMakeRequestResponse } from '@sentry/types';\nimport { envelopeContainsItemType, logger, parseRetryAfterHeader } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nexport const MIN_DELAY = 100; // 100 ms\nexport const START_DELAY = 5_000; // 5 seconds\nconst MAX_DELAY = 3.6e6; // 1 hour\n\nfunction log(msg: string, error?: Error): void {\n  DEBUG_BUILD && logger.info(`[Offline]: ${msg}`, error);\n}\n\nexport interface OfflineStore {\n  insert(env: Envelope): Promise<void>;\n  pop(): Promise<Envelope | undefined>;\n}\n\nexport type CreateOfflineStore = (options: OfflineTransportOptions) => OfflineStore;\n\nexport interface OfflineTransportOptions extends InternalBaseTransportOptions {\n  /**\n   * A function that creates the offline store instance.\n   */\n  createStore?: CreateOfflineStore;\n\n  /**\n   * Flush the offline store shortly after startup.\n   *\n   * Defaults: false\n   */\n  flushAtStartup?: boolean;\n\n  /**\n   * Called before an event is stored.\n   *\n   * Return false to drop the envelope rather than store it.\n   *\n   * @param envelope The envelope that failed to send.\n   * @param error The error that occurred.\n   * @param retryDelay The current retry delay in milliseconds.\n   */\n  shouldStore?: (envelope: Envelope, error: Error, retryDelay: number) => boolean | Promise<boolean>;\n}\n\ntype Timer = number | { unref?: () => void };\n\n/**\n * Wraps a transport and stores and retries events when they fail to send.\n *\n * @param createTransport The transport to wrap.\n */\nexport function makeOfflineTransport<TO>(\n  createTransport: (options: TO) => Transport,\n): (options: TO & OfflineTransportOptions) => Transport {\n  return options => {\n    const transport = createTransport(options);\n    const store = options.createStore ? options.createStore(options) : undefined;\n\n    let retryDelay = START_DELAY;\n    let flushTimer: Timer | undefined;\n\n    function shouldQueue(env: Envelope, error: Error, retryDelay: number): boolean | Promise<boolean> {\n      // We don't queue Session Replay envelopes because they are:\n      // - Ordered and Replay relies on the response status to know when they're successfully sent.\n      // - Likely to fill the queue quickly and block other events from being sent.\n      // We also want to drop client reports because they can be generated when we retry sending events while offline.\n      if (envelopeContainsItemType(env, ['replay_event', 'replay_recording', 'client_report'])) {\n        return false;\n      }\n\n      if (options.shouldStore) {\n        return options.shouldStore(env, error, retryDelay);\n      }\n\n      return true;\n    }\n\n    function flushIn(delay: number): void {\n      if (!store) {\n        return;\n      }\n\n      if (flushTimer) {\n        clearTimeout(flushTimer as ReturnType<typeof setTimeout>);\n      }\n\n      flushTimer = setTimeout(async () => {\n        flushTimer = undefined;\n\n        const found = await store.pop();\n        if (found) {\n          log('Attempting to send previously queued event');\n          void send(found).catch(e => {\n            log('Failed to retry sending', e);\n          });\n        }\n      }, delay) as Timer;\n\n      // We need to unref the timer in node.js, otherwise the node process never exit.\n      if (typeof flushTimer !== 'number' && flushTimer.unref) {\n        flushTimer.unref();\n      }\n    }\n\n    function flushWithBackOff(): void {\n      if (flushTimer) {\n        return;\n      }\n\n      flushIn(retryDelay);\n\n      retryDelay = Math.min(retryDelay * 2, MAX_DELAY);\n    }\n\n    async function send(envelope: Envelope): Promise<void | TransportMakeRequestResponse> {\n      try {\n        const result = await transport.send(envelope);\n\n        let delay = MIN_DELAY;\n\n        if (result) {\n          // If there's a retry-after header, use that as the next delay.\n          if (result.headers && result.headers['retry-after']) {\n            delay = parseRetryAfterHeader(result.headers['retry-after']);\n          } // If we have a server error, return now so we don't flush the queue.\n          else if ((result.statusCode || 0) >= 400) {\n            return result;\n          }\n        }\n\n        flushIn(delay);\n        retryDelay = START_DELAY;\n        return result;\n      } catch (e) {\n        if (store && (await shouldQueue(envelope, e as Error, retryDelay))) {\n          await store.insert(envelope);\n          flushWithBackOff();\n          log('Error sending. Event queued', e as Error);\n          return {};\n        } else {\n          throw e;\n        }\n      }\n    }\n\n    if (options.flushAtStartup) {\n      flushWithBackOff();\n    }\n\n    return {\n      send,\n      flush: t => transport.flush(t),\n    };\n  };\n}\n","import type { OfflineStore, OfflineTransportOptions } from '@sentry/core';\nimport { makeOfflineTransport } from '@sentry/core';\nimport type { Envelope, InternalBaseTransportOptions, Transport } from '@sentry/types';\nimport type { TextDecoderInternal } from '@sentry/utils';\nimport { parseEnvelope, serializeEnvelope } from '@sentry/utils';\n\n// 'Store', 'promisifyRequest' and 'createStore' were originally copied from the 'idb-keyval' package before being\n// modified and simplified: https://github.com/jakearchibald/idb-keyval\n//\n// At commit: 0420a704fd6cbb4225429c536b1f61112d012fca\n// Original licence:\n\n// Copyright 2016, Jake Archibald\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ntype Store = <T>(callback: (store: IDBObjectStore) => T | PromiseLike<T>) => Promise<T>;\n\nfunction promisifyRequest<T = undefined>(request: IDBRequest<T> | IDBTransaction): Promise<T> {\n  return new Promise<T>((resolve, reject) => {\n    // @ts-expect-error - file size hacks\n    request.oncomplete = request.onsuccess = () => resolve(request.result);\n    // @ts-expect-error - file size hacks\n    request.onabort = request.onerror = () => reject(request.error);\n  });\n}\n\n/** Create or open an IndexedDb store */\nexport function createStore(dbName: string, storeName: string): Store {\n  const request = indexedDB.open(dbName);\n  request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n  const dbp = promisifyRequest(request);\n\n  return callback => dbp.then(db => callback(db.transaction(storeName, 'readwrite').objectStore(storeName)));\n}\n\nfunction keys(store: IDBObjectStore): Promise<number[]> {\n  return promisifyRequest(store.getAllKeys() as IDBRequest<number[]>);\n}\n\n/** Insert into the store */\nexport function insert(store: Store, value: Uint8Array | string, maxQueueSize: number): Promise<void> {\n  return store(store => {\n    return keys(store).then(keys => {\n      if (keys.length >= maxQueueSize) {\n        return;\n      }\n\n      // We insert with an incremented key so that the entries are popped in order\n      store.put(value, Math.max(...keys, 0) + 1);\n      return promisifyRequest(store.transaction);\n    });\n  });\n}\n\n/** Pop the oldest value from the store */\nexport function pop(store: Store): Promise<Uint8Array | string | undefined> {\n  return store(store => {\n    return keys(store).then(keys => {\n      if (keys.length === 0) {\n        return undefined;\n      }\n\n      return promisifyRequest(store.get(keys[0])).then(value => {\n        store.delete(keys[0]);\n        return promisifyRequest(store.transaction).then(() => value);\n      });\n    });\n  });\n}\n\nexport interface BrowserOfflineTransportOptions extends OfflineTransportOptions {\n  /**\n   * Name of indexedDb database to store envelopes in\n   * Default: 'sentry-offline'\n   */\n  dbName?: string;\n  /**\n   * Name of indexedDb object store to store envelopes in\n   * Default: 'queue'\n   */\n  storeName?: string;\n  /**\n   * Maximum number of envelopes to store\n   * Default: 30\n   */\n  maxQueueSize?: number;\n  /**\n   * Only required for testing on node.js\n   * @ignore\n   */\n  textDecoder?: TextDecoderInternal;\n}\n\nfunction createIndexedDbStore(options: BrowserOfflineTransportOptions): OfflineStore {\n  let store: Store | undefined;\n\n  // Lazily create the store only when it's needed\n  function getStore(): Store {\n    if (store == undefined) {\n      store = createStore(options.dbName || 'sentry-offline', options.storeName || 'queue');\n    }\n\n    return store;\n  }\n\n  return {\n    insert: async (env: Envelope) => {\n      try {\n        const serialized = await serializeEnvelope(env, options.textEncoder);\n        await insert(getStore(), serialized, options.maxQueueSize || 30);\n      } catch (_) {\n        //\n      }\n    },\n    pop: async () => {\n      try {\n        const deserialized = await pop(getStore());\n        if (deserialized) {\n          return parseEnvelope(\n            deserialized,\n            options.textEncoder || new TextEncoder(),\n            options.textDecoder || new TextDecoder(),\n          );\n        }\n      } catch (_) {\n        //\n      }\n\n      return undefined;\n    },\n  };\n}\n\nfunction makeIndexedDbOfflineTransport<T>(\n  createTransport: (options: T) => Transport,\n): (options: T & BrowserOfflineTransportOptions) => Transport {\n  return options => createTransport({ ...options, createStore: createIndexedDbStore });\n}\n\n/**\n * Creates a transport that uses IndexedDb to store events when offline.\n */\nexport function makeBrowserOfflineTransport<T extends InternalBaseTransportOptions>(\n  createTransport: (options: T) => Transport,\n): (options: T & BrowserOfflineTransportOptions) => Transport {\n  return makeIndexedDbOfflineTransport<T>(makeOfflineTransport(createTransport));\n}\n","/* eslint-disable max-lines */\n\nimport { DEFAULT_ENVIRONMENT, getClient } from '@sentry/core';\nimport type { DebugImage, Envelope, Event, EventEnvelope, StackFrame, StackParser, Transaction } from '@sentry/types';\nimport type { Profile, ThreadCpuProfile } from '@sentry/types/src/profiling';\nimport { GLOBAL_OBJ, browserPerformanceTimeOrigin, forEachEnvelopeItem, logger, uuid4 } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\nimport type { JSSelfProfile, JSSelfProfileStack, JSSelfProfiler, JSSelfProfilerConstructor } from './jsSelfProfiling';\n\nconst MS_TO_NS = 1e6;\n// Use 0 as main thread id which is identical to threadId in node:worker_threads\n// where main logs 0 and workers seem to log in increments of 1\nconst THREAD_ID_STRING = String(0);\nconst THREAD_NAME = 'main';\n\n// Machine properties (eval only once)\nlet OS_PLATFORM = '';\nlet OS_PLATFORM_VERSION = '';\nlet OS_ARCH = '';\nlet OS_BROWSER = (WINDOW.navigator && WINDOW.navigator.userAgent) || '';\nlet OS_MODEL = '';\nconst OS_LOCALE =\n  (WINDOW.navigator && WINDOW.navigator.language) ||\n  (WINDOW.navigator && WINDOW.navigator.languages && WINDOW.navigator.languages[0]) ||\n  '';\n\ntype UAData = {\n  platform?: string;\n  architecture?: string;\n  model?: string;\n  platformVersion?: string;\n  fullVersionList?: {\n    brand: string;\n    version: string;\n  }[];\n};\n\ninterface UserAgentData {\n  getHighEntropyValues: (keys: string[]) => Promise<UAData>;\n}\n\nfunction isUserAgentData(data: unknown): data is UserAgentData {\n  return typeof data === 'object' && data !== null && 'getHighEntropyValues' in data;\n}\n\n// @ts-expect-error userAgentData is not part of the navigator interface yet\nconst userAgentData = WINDOW.navigator && WINDOW.navigator.userAgentData;\n\nif (isUserAgentData(userAgentData)) {\n  userAgentData\n    .getHighEntropyValues(['architecture', 'model', 'platform', 'platformVersion', 'fullVersionList'])\n    .then((ua: UAData) => {\n      OS_PLATFORM = ua.platform || '';\n      OS_ARCH = ua.architecture || '';\n      OS_MODEL = ua.model || '';\n      OS_PLATFORM_VERSION = ua.platformVersion || '';\n\n      if (ua.fullVersionList && ua.fullVersionList.length > 0) {\n        const firstUa = ua.fullVersionList[ua.fullVersionList.length - 1];\n        OS_BROWSER = `${firstUa.brand} ${firstUa.version}`;\n      }\n    })\n    .catch(e => void e);\n}\n\nfunction isProcessedJSSelfProfile(profile: ThreadCpuProfile | JSSelfProfile): profile is JSSelfProfile {\n  return !('thread_metadata' in profile);\n}\n\n// Enriches the profile with threadId of the current thread.\n// This is done in node as we seem to not be able to get the info from C native code.\n/**\n *\n */\nexport function enrichWithThreadInformation(profile: ThreadCpuProfile | JSSelfProfile): ThreadCpuProfile {\n  if (!isProcessedJSSelfProfile(profile)) {\n    return profile;\n  }\n\n  return convertJSSelfProfileToSampledFormat(profile);\n}\n\n// Profile is marked as optional because it is deleted from the metadata\n// by the integration before the event is processed by other integrations.\nexport interface ProfiledEvent extends Event {\n  sdkProcessingMetadata: {\n    profile?: JSSelfProfile;\n  };\n}\n\nfunction getTraceId(event: Event): string {\n  const traceId: unknown = event && event.contexts && event.contexts['trace'] && event.contexts['trace']['trace_id'];\n  // Log a warning if the profile has an invalid traceId (should be uuidv4).\n  // All profiles and transactions are rejected if this is the case and we want to\n  // warn users that this is happening if they enable debug flag\n  if (typeof traceId === 'string' && traceId.length !== 32) {\n    if (DEBUG_BUILD) {\n      logger.log(`[Profiling] Invalid traceId: ${traceId} on profiled event`);\n    }\n  }\n  if (typeof traceId !== 'string') {\n    return '';\n  }\n\n  return traceId;\n}\n/**\n * Creates a profiling event envelope from a Sentry event. If profile does not pass\n * validation, returns null.\n * @param event\n * @param dsn\n * @param metadata\n * @param tunnel\n * @returns {EventEnvelope | null}\n */\n\n/**\n * Creates a profiling event envelope from a Sentry event.\n */\nexport function createProfilePayload(\n  profile_id: string,\n  start_timestamp: number | undefined,\n  processed_profile: JSSelfProfile,\n  event: ProfiledEvent,\n): Profile {\n  if (event.type !== 'transaction') {\n    // createProfilingEventEnvelope should only be called for transactions,\n    // we type guard this behavior with isProfiledTransactionEvent.\n    throw new TypeError('Profiling events may only be attached to transactions, this should never occur.');\n  }\n\n  if (processed_profile === undefined || processed_profile === null) {\n    throw new TypeError(\n      `Cannot construct profiling event envelope without a valid profile. Got ${processed_profile} instead.`,\n    );\n  }\n\n  const traceId = getTraceId(event);\n  const enrichedThreadProfile = enrichWithThreadInformation(processed_profile);\n  const transactionStartMs = start_timestamp\n    ? start_timestamp\n    : typeof event.start_timestamp === 'number'\n      ? event.start_timestamp * 1000\n      : Date.now();\n  const transactionEndMs = typeof event.timestamp === 'number' ? event.timestamp * 1000 : Date.now();\n\n  const profile: Profile = {\n    event_id: profile_id,\n    timestamp: new Date(transactionStartMs).toISOString(),\n    platform: 'javascript',\n    version: '1',\n    release: event.release || '',\n    environment: event.environment || DEFAULT_ENVIRONMENT,\n    runtime: {\n      name: 'javascript',\n      version: WINDOW.navigator.userAgent,\n    },\n    os: {\n      name: OS_PLATFORM,\n      version: OS_PLATFORM_VERSION,\n      build_number: OS_BROWSER,\n    },\n    device: {\n      locale: OS_LOCALE,\n      model: OS_MODEL,\n      manufacturer: OS_BROWSER,\n      architecture: OS_ARCH,\n      is_emulator: false,\n    },\n    debug_meta: {\n      images: applyDebugMetadata(processed_profile.resources),\n    },\n    profile: enrichedThreadProfile,\n    transactions: [\n      {\n        name: event.transaction || '',\n        id: event.event_id || uuid4(),\n        trace_id: traceId,\n        active_thread_id: THREAD_ID_STRING,\n        relative_start_ns: '0',\n        relative_end_ns: ((transactionEndMs - transactionStartMs) * 1e6).toFixed(0),\n      },\n    ],\n  };\n\n  return profile;\n}\n\n/**\n *\n */\nexport function isProfiledTransactionEvent(event: Event): event is ProfiledEvent {\n  return !!(event.sdkProcessingMetadata && event.sdkProcessingMetadata['profile']);\n}\n\n/*\n  See packages/tracing-internal/src/browser/router.ts\n*/\n/**\n *\n */\nexport function isAutomatedPageLoadTransaction(transaction: Transaction): boolean {\n  return transaction.op === 'pageload';\n}\n\n/**\n * Converts a JSSelfProfile to a our sampled format.\n * Does not currently perform stack indexing.\n */\nexport function convertJSSelfProfileToSampledFormat(input: JSSelfProfile): Profile['profile'] {\n  let EMPTY_STACK_ID: undefined | number = undefined;\n  let STACK_ID = 0;\n\n  // Initialize the profile that we will fill with data\n  const profile: Profile['profile'] = {\n    samples: [],\n    stacks: [],\n    frames: [],\n    thread_metadata: {\n      [THREAD_ID_STRING]: { name: THREAD_NAME },\n    },\n  };\n\n  if (!input.samples.length) {\n    return profile;\n  }\n\n  // We assert samples.length > 0 above and timestamp should always be present\n  const start = input.samples[0].timestamp;\n  // The JS SDK might change it's time origin based on some heuristic (see See packages/utils/src/time.ts)\n  // when that happens, we need to ensure we are correcting the profile timings so the two timelines stay in sync.\n  // Since JS self profiling time origin is always initialized to performance.timeOrigin, we need to adjust for\n  // the drift between the SDK selected value and our profile time origin.\n  const origin =\n    typeof performance.timeOrigin === 'number' ? performance.timeOrigin : browserPerformanceTimeOrigin || 0;\n  const adjustForOriginChange = origin - (browserPerformanceTimeOrigin || origin);\n\n  for (let i = 0; i < input.samples.length; i++) {\n    const jsSample = input.samples[i];\n\n    // If sample has no stack, add an empty sample\n    if (jsSample.stackId === undefined) {\n      if (EMPTY_STACK_ID === undefined) {\n        EMPTY_STACK_ID = STACK_ID;\n        profile.stacks[EMPTY_STACK_ID] = [];\n        STACK_ID++;\n      }\n\n      profile['samples'][i] = {\n        // convert ms timestamp to ns\n        elapsed_since_start_ns: ((jsSample.timestamp + adjustForOriginChange - start) * MS_TO_NS).toFixed(0),\n        stack_id: EMPTY_STACK_ID,\n        thread_id: THREAD_ID_STRING,\n      };\n      continue;\n    }\n\n    let stackTop: JSSelfProfileStack | undefined = input.stacks[jsSample.stackId];\n\n    // Functions in top->down order (root is last)\n    // We follow the stackTop.parentId trail and collect each visited frameId\n    const stack: number[] = [];\n\n    while (stackTop) {\n      stack.push(stackTop.frameId);\n\n      const frame = input.frames[stackTop.frameId];\n\n      // If our frame has not been indexed yet, index it\n      if (profile.frames[stackTop.frameId] === undefined) {\n        profile.frames[stackTop.frameId] = {\n          function: frame.name,\n          abs_path: typeof frame.resourceId === 'number' ? input.resources[frame.resourceId] : undefined,\n          lineno: frame.line,\n          colno: frame.column,\n        };\n      }\n\n      stackTop = stackTop.parentId === undefined ? undefined : input.stacks[stackTop.parentId];\n    }\n\n    const sample: Profile['profile']['samples'][0] = {\n      // convert ms timestamp to ns\n      elapsed_since_start_ns: ((jsSample.timestamp + adjustForOriginChange - start) * MS_TO_NS).toFixed(0),\n      stack_id: STACK_ID,\n      thread_id: THREAD_ID_STRING,\n    };\n\n    profile['stacks'][STACK_ID] = stack;\n    profile['samples'][i] = sample;\n    STACK_ID++;\n  }\n\n  return profile;\n}\n\n/**\n * Adds items to envelope if they are not already present - mutates the envelope.\n * @param envelope\n */\nexport function addProfilesToEnvelope(envelope: EventEnvelope, profiles: Profile[]): Envelope {\n  if (!profiles.length) {\n    return envelope;\n  }\n\n  for (const profile of profiles) {\n    envelope[1].push([{ type: 'profile' }, profile]);\n  }\n  return envelope;\n}\n\n/**\n * Finds transactions with profile_id context in the envelope\n * @param envelope\n * @returns\n */\nexport function findProfiledTransactionsFromEnvelope(envelope: Envelope): Event[] {\n  const events: Event[] = [];\n\n  forEachEnvelopeItem(envelope, (item, type) => {\n    if (type !== 'transaction') {\n      return;\n    }\n\n    for (let j = 1; j < item.length; j++) {\n      const event = item[j] as Event;\n\n      if (event && event.contexts && event.contexts['profile'] && event.contexts['profile']['profile_id']) {\n        events.push(item[j] as Event);\n      }\n    }\n  });\n\n  return events;\n}\n\nconst debugIdStackParserCache = new WeakMap<StackParser, Map<string, StackFrame[]>>();\n/**\n * Applies debug meta data to an event from a list of paths to resources (sourcemaps)\n */\nexport function applyDebugMetadata(resource_paths: ReadonlyArray<string>): DebugImage[] {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return [];\n  }\n\n  const client = getClient();\n  const options = client && client.getOptions();\n  const stackParser = options && options.stackParser;\n\n  if (!stackParser) {\n    return [];\n  }\n\n  let debugIdStackFramesCache: Map<string, StackFrame[]>;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map<string, StackFrame[]>();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce<Record<string, string>>((acc, debugIdStackTrace) => {\n    let parsedStack: StackFrame[];\n\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      const file = stackFrame && stackFrame.filename;\n\n      if (stackFrame && file) {\n        acc[file] = debugIdMap[debugIdStackTrace] as string;\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  const images: DebugImage[] = [];\n  for (const path of resource_paths) {\n    if (path && filenameDebugIdMap[path]) {\n      images.push({\n        type: 'sourcemap',\n        code_file: path,\n        debug_id: filenameDebugIdMap[path] as string,\n      });\n    }\n  }\n\n  return images;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nexport function isValidSampleRate(rate: unknown): boolean {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  if ((typeof rate !== 'number' && typeof rate !== 'boolean') || (typeof rate === 'number' && isNaN(rate))) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `[Profiling] Invalid sample rate. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // Boolean sample rates are always valid\n  if (rate === true || rate === false) {\n    return true;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    DEBUG_BUILD && logger.warn(`[Profiling] Invalid sample rate. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\nfunction isValidProfile(profile: JSSelfProfile): profile is JSSelfProfile & { profile_id: string } {\n  if (profile.samples.length < 2) {\n    if (DEBUG_BUILD) {\n      // Log a warning if the profile has less than 2 samples so users can know why\n      // they are not seeing any profiling data and we cant avoid the back and forth\n      // of asking them to provide us with a dump of the profile data.\n      logger.log('[Profiling] Discarding profile because it contains less than 2 samples');\n    }\n    return false;\n  }\n\n  if (!profile.frames.length) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Discarding profile because it contains no frames');\n    }\n    return false;\n  }\n\n  return true;\n}\n\n// Keep a flag value to avoid re-initializing the profiler constructor. If it fails\n// once, it will always fail and this allows us to early return.\nlet PROFILING_CONSTRUCTOR_FAILED: boolean = false;\nexport const MAX_PROFILE_DURATION_MS = 30_000;\n\n/**\n * Check if profiler constructor is available.\n * @param maybeProfiler\n */\nfunction isJSProfilerSupported(maybeProfiler: unknown): maybeProfiler is typeof JSSelfProfilerConstructor {\n  return typeof maybeProfiler === 'function';\n}\n\n/**\n * Starts the profiler and returns the profiler instance.\n */\nexport function startJSSelfProfile(): JSSelfProfiler | undefined {\n  // Feature support check first\n  const JSProfilerConstructor = WINDOW.Profiler;\n\n  if (!isJSProfilerSupported(JSProfilerConstructor)) {\n    if (DEBUG_BUILD) {\n      logger.log(\n        '[Profiling] Profiling is not supported by this browser, Profiler interface missing on window object.',\n      );\n    }\n    return;\n  }\n\n  // From initial testing, it seems that the minimum value for sampleInterval is 10ms.\n  const samplingIntervalMS = 10;\n  // Start the profiler\n  const maxSamples = Math.floor(MAX_PROFILE_DURATION_MS / samplingIntervalMS);\n\n  // Attempt to initialize the profiler constructor, if it fails, we disable profiling for the current user session.\n  // This is likely due to a missing 'Document-Policy': 'js-profiling' header. We do not want to throw an error if this happens\n  // as we risk breaking the user's application, so just disable profiling and log an error.\n  try {\n    return new JSProfilerConstructor({ sampleInterval: samplingIntervalMS, maxBufferSize: maxSamples });\n  } catch (e) {\n    if (DEBUG_BUILD) {\n      logger.log(\n        \"[Profiling] Failed to initialize the Profiling constructor, this is likely due to a missing 'Document-Policy': 'js-profiling' header.\",\n      );\n      logger.log('[Profiling] Disabling profiling for current user session.');\n    }\n    PROFILING_CONSTRUCTOR_FAILED = true;\n  }\n\n  return;\n}\n\n/**\n * Determine if a profile should be profiled.\n */\nexport function shouldProfileTransaction(transaction: Transaction): boolean {\n  // If constructor failed once, it will always fail, so we can early return.\n  if (PROFILING_CONSTRUCTOR_FAILED) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Profiling has been disabled for the duration of the current user session.');\n    }\n    return false;\n  }\n\n  if (!transaction.isRecording()) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Discarding profile because transaction was not sampled.');\n    }\n    return false;\n  }\n\n  const client = getClient();\n  const options = client && client.getOptions();\n  if (!options) {\n    DEBUG_BUILD && logger.log('[Profiling] Profiling disabled, no options found.');\n    return false;\n  }\n\n  // @ts-expect-error profilesSampleRate is not part of the browser options yet\n  const profilesSampleRate: number | boolean | undefined = options.profilesSampleRate;\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(profilesSampleRate)) {\n    DEBUG_BUILD && logger.warn('[Profiling] Discarding profile because of invalid sample rate.');\n    return false;\n  }\n\n  // if the function returned 0 (or false), or if `profileSampleRate` is 0, it's a sign the profile should be dropped\n  if (!profilesSampleRate) {\n    DEBUG_BUILD &&\n      logger.log(\n        '[Profiling] Discarding profile because a negative sampling decision was inherited or profileSampleRate is set to 0',\n      );\n    return false;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  const sampled = profilesSampleRate === true ? true : Math.random() < profilesSampleRate;\n  // Check if we should sample this profile\n  if (!sampled) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Profiling] Discarding profile because it's not included in the random sample (sampling rate = ${Number(\n          profilesSampleRate,\n        )})`,\n      );\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a profiling envelope item, if the profile does not pass validation, returns null.\n * @param event\n * @returns {Profile | null}\n */\nexport function createProfilingEvent(\n  profile_id: string,\n  start_timestamp: number | undefined,\n  profile: JSSelfProfile,\n  event: ProfiledEvent,\n): Profile | null {\n  if (!isValidProfile(profile)) {\n    return null;\n  }\n\n  return createProfilePayload(profile_id, start_timestamp, profile, event);\n}\n\n// TODO (v8): We need to obtain profile ids in @sentry-internal/tracing,\n// but we don't have access to this map because importing this map would\n// cause a circular dependancy. We need to resolve this in v8.\nconst PROFILE_MAP: Map<string, JSSelfProfile> = new Map();\n/**\n *\n */\nexport function getActiveProfilesCount(): number {\n  return PROFILE_MAP.size;\n}\n\n/**\n * Retrieves profile from global cache and removes it.\n */\nexport function takeProfileFromGlobalCache(profile_id: string): JSSelfProfile | undefined {\n  const profile = PROFILE_MAP.get(profile_id);\n  if (profile) {\n    PROFILE_MAP.delete(profile_id);\n  }\n  return profile;\n}\n/**\n * Adds profile to global cache and evicts the oldest profile if the cache is full.\n */\nexport function addProfileToGlobalCache(profile_id: string, profile: JSSelfProfile): void {\n  PROFILE_MAP.set(profile_id, profile);\n\n  if (PROFILE_MAP.size > 30) {\n    const last: string = PROFILE_MAP.keys().next().value;\n    PROFILE_MAP.delete(last);\n  }\n}\n","/* eslint-disable complexity */\nimport { spanToJSON } from '@sentry/core';\nimport type { Transaction } from '@sentry/types';\nimport { logger, timestampInSeconds, uuid4 } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\nimport type { JSSelfProfile } from './jsSelfProfiling';\nimport {\n  MAX_PROFILE_DURATION_MS,\n  addProfileToGlobalCache,\n  isAutomatedPageLoadTransaction,\n  shouldProfileTransaction,\n  startJSSelfProfile,\n} from './utils';\n\n/**\n * Safety wrapper for startTransaction for the unlikely case that transaction starts before tracing is imported -\n * if that happens we want to avoid throwing an error from profiling code.\n * see https://github.com/getsentry/sentry-javascript/issues/4731.\n *\n * @experimental\n */\nexport function onProfilingStartRouteTransaction(transaction: Transaction | undefined): Transaction | undefined {\n  if (!transaction) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Transaction is undefined, skipping profiling');\n    }\n    return transaction;\n  }\n\n  if (shouldProfileTransaction(transaction)) {\n    return startProfileForTransaction(transaction);\n  }\n\n  return transaction;\n}\n\n/**\n * Wraps startTransaction and stopTransaction with profiling related logic.\n * startProfileForTransaction is called after the call to startTransaction in order to avoid our own code from\n * being profiled. Because of that same reason, stopProfiling is called before the call to stopTransaction.\n */\nexport function startProfileForTransaction(transaction: Transaction): Transaction {\n  // Start the profiler and get the profiler instance.\n  let startTimestamp: number | undefined;\n  if (isAutomatedPageLoadTransaction(transaction)) {\n    startTimestamp = timestampInSeconds() * 1000;\n  }\n\n  const profiler = startJSSelfProfile();\n\n  // We failed to construct the profiler, fallback to original transaction.\n  // No need to log anything as this has already been logged in startProfile.\n  if (!profiler) {\n    return transaction;\n  }\n\n  if (DEBUG_BUILD) {\n    logger.log(`[Profiling] started profiling transaction: ${spanToJSON(transaction).description}`);\n  }\n\n  // We create \"unique\" transaction names to avoid concurrent transactions with same names\n  // from being ignored by the profiler. From here on, only this transaction name should be used when\n  // calling the profiler methods. Note: we log the original name to the user to avoid confusion.\n  const profileId = uuid4();\n\n  // A couple of important things to note here:\n  // `CpuProfilerBindings.stopProfiling` will be scheduled to run in 30seconds in order to exceed max profile duration.\n  // Whichever of the two (transaction.finish/timeout) is first to run, the profiling will be stopped and the gathered profile\n  // will be processed when the original transaction is finished. Since onProfileHandler can be invoked multiple times in the\n  // event of an error or user mistake (calling transaction.finish multiple times), it is important that the behavior of onProfileHandler\n  // is idempotent as we do not want any timings or profiles to be overriden by the last call to onProfileHandler.\n  // After the original finish method is called, the event will be reported through the integration and delegated to transport.\n  const processedProfile: JSSelfProfile | null = null;\n\n  /**\n   * Idempotent handler for profile stop\n   */\n  async function onProfileHandler(): Promise<null> {\n    // Check if the profile exists and return it the behavior has to be idempotent as users may call transaction.finish multiple times.\n    if (!transaction) {\n      return null;\n    }\n    // Satisfy the type checker, but profiler will always be defined here.\n    if (!profiler) {\n      return null;\n    }\n    if (processedProfile) {\n      if (DEBUG_BUILD) {\n        logger.log('[Profiling] profile for:', spanToJSON(transaction).description, 'already exists, returning early');\n      }\n      return null;\n    }\n\n    return profiler\n      .stop()\n      .then((profile: JSSelfProfile): null => {\n        if (maxDurationTimeoutID) {\n          WINDOW.clearTimeout(maxDurationTimeoutID);\n          maxDurationTimeoutID = undefined;\n        }\n\n        if (DEBUG_BUILD) {\n          logger.log(`[Profiling] stopped profiling of transaction: ${spanToJSON(transaction).description}`);\n        }\n\n        // In case of an overlapping transaction, stopProfiling may return null and silently ignore the overlapping profile.\n        if (!profile) {\n          if (DEBUG_BUILD) {\n            logger.log(\n              `[Profiling] profiler returned null profile for: ${spanToJSON(transaction).description}`,\n              'this may indicate an overlapping transaction or a call to stopProfiling with a profile title that was never started',\n            );\n          }\n          return null;\n        }\n\n        addProfileToGlobalCache(profileId, profile);\n        return null;\n      })\n      .catch(error => {\n        if (DEBUG_BUILD) {\n          logger.log('[Profiling] error while stopping profiler:', error);\n        }\n        return null;\n      });\n  }\n\n  // Enqueue a timeout to prevent profiles from running over max duration.\n  let maxDurationTimeoutID: number | undefined = WINDOW.setTimeout(() => {\n    if (DEBUG_BUILD) {\n      logger.log(\n        '[Profiling] max profile duration elapsed, stopping profiling for:',\n        spanToJSON(transaction).description,\n      );\n    }\n    // If the timeout exceeds, we want to stop profiling, but not finish the transaction\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    onProfileHandler();\n  }, MAX_PROFILE_DURATION_MS);\n\n  // We need to reference the original end call to avoid creating an infinite loop\n  const originalEnd = transaction.end.bind(transaction);\n\n  /**\n   * Wraps startTransaction and stopTransaction with profiling related logic.\n   * startProfiling is called after the call to startTransaction in order to avoid our own code from\n   * being profiled. Because of that same reason, stopProfiling is called before the call to stopTransaction.\n   */\n  function profilingWrappedTransactionEnd(): Transaction {\n    if (!transaction) {\n      return originalEnd();\n    }\n    // onProfileHandler should always return the same profile even if this is called multiple times.\n    // Always call onProfileHandler to ensure stopProfiling is called and the timeout is cleared.\n    void onProfileHandler().then(\n      () => {\n        // TODO: Can we rewrite this to use attributes?\n        // eslint-disable-next-line deprecation/deprecation\n        transaction.setContext('profile', { profile_id: profileId, start_timestamp: startTimestamp });\n        originalEnd();\n      },\n      () => {\n        // If onProfileHandler fails, we still want to call the original finish method.\n        originalEnd();\n      },\n    );\n\n    return transaction;\n  }\n\n  transaction.end = profilingWrappedTransactionEnd;\n  return transaction;\n}\n","import { convertIntegrationFnToClass, defineIntegration, getCurrentScope } from '@sentry/core';\nimport type { Client, EventEnvelope, Integration, IntegrationClass, IntegrationFn, Transaction } from '@sentry/types';\nimport type { Profile } from '@sentry/types/src/profiling';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { startProfileForTransaction } from './hubextensions';\nimport type { ProfiledEvent } from './utils';\nimport {\n  addProfilesToEnvelope,\n  createProfilingEvent,\n  findProfiledTransactionsFromEnvelope,\n  getActiveProfilesCount,\n  isAutomatedPageLoadTransaction,\n  shouldProfileTransaction,\n  takeProfileFromGlobalCache,\n} from './utils';\n\nconst INTEGRATION_NAME = 'BrowserProfiling';\n\nconst _browserProfilingIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      const scope = getCurrentScope();\n\n      // eslint-disable-next-line deprecation/deprecation\n      const transaction = scope.getTransaction();\n\n      if (transaction && isAutomatedPageLoadTransaction(transaction)) {\n        if (shouldProfileTransaction(transaction)) {\n          startProfileForTransaction(transaction);\n        }\n      }\n\n      if (typeof client.on !== 'function') {\n        logger.warn('[Profiling] Client does not support hooks, profiling will be disabled');\n        return;\n      }\n\n      client.on('startTransaction', (transaction: Transaction) => {\n        if (shouldProfileTransaction(transaction)) {\n          startProfileForTransaction(transaction);\n        }\n      });\n\n      client.on('beforeEnvelope', (envelope): void => {\n        // if not profiles are in queue, there is nothing to add to the envelope.\n        if (!getActiveProfilesCount()) {\n          return;\n        }\n\n        const profiledTransactionEvents = findProfiledTransactionsFromEnvelope(envelope);\n        if (!profiledTransactionEvents.length) {\n          return;\n        }\n\n        const profilesToAddToEnvelope: Profile[] = [];\n\n        for (const profiledTransaction of profiledTransactionEvents) {\n          const context = profiledTransaction && profiledTransaction.contexts;\n          const profile_id = context && context['profile'] && context['profile']['profile_id'];\n          const start_timestamp = context && context['profile'] && context['profile']['start_timestamp'];\n\n          if (typeof profile_id !== 'string') {\n            DEBUG_BUILD && logger.log('[Profiling] cannot find profile for a transaction without a profile context');\n            continue;\n          }\n\n          if (!profile_id) {\n            DEBUG_BUILD && logger.log('[Profiling] cannot find profile for a transaction without a profile context');\n            continue;\n          }\n\n          // Remove the profile from the transaction context before sending, relay will take care of the rest.\n          if (context && context['profile']) {\n            delete context.profile;\n          }\n\n          const profile = takeProfileFromGlobalCache(profile_id);\n          if (!profile) {\n            DEBUG_BUILD && logger.log(`[Profiling] Could not retrieve profile for transaction: ${profile_id}`);\n            continue;\n          }\n\n          const profileEvent = createProfilingEvent(\n            profile_id,\n            start_timestamp as number | undefined,\n            profile,\n            profiledTransaction as ProfiledEvent,\n          );\n          if (profileEvent) {\n            profilesToAddToEnvelope.push(profileEvent);\n          }\n        }\n\n        addProfilesToEnvelope(envelope as EventEnvelope, profilesToAddToEnvelope);\n      });\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const browserProfilingIntegration = defineIntegration(_browserProfilingIntegration);\n\n/**\n * Browser profiling integration. Stores any event that has contexts[\"profile\"][\"profile_id\"]\n * This exists because we do not want to await async profiler.stop calls as transaction.finish is called\n * in a synchronous context. Instead, we handle sending the profile async from the promise callback and\n * rely on being able to pull the event from the cache when we need to construct the envelope. This makes the\n * integration less reliable as we might be dropping profiles when the cache is full.\n *\n * @experimental\n * @deprecated Use `browserProfilingIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const BrowserProfilingIntegration = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  browserProfilingIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }>;\n\n// eslint-disable-next-line deprecation/deprecation\nexport type BrowserProfilingIntegration = typeof BrowserProfilingIntegration;\n","// eslint-disable-next-line deprecation/deprecation\nimport { Replay as InternalReplay, replayIntegration as internalReplayIntegration } from './integration';\nimport type {\n  CanvasManagerInterface as InternalCanvasManagerInterface,\n  CanvasManagerOptions as InternalCanvasManagerOptions,\n  ReplayBreadcrumbFrame as InternalReplayBreadcrumbFrame,\n  ReplayBreadcrumbFrameEvent as InternalReplayBreadcrumbFrameEvent,\n  ReplayConfiguration as InternalReplayConfiguration,\n  ReplayEventType as InternalReplayEventType,\n  ReplayEventWithTime as InternalReplayEventWithTime,\n  ReplayFrame as InternalReplayFrame,\n  ReplayFrameEvent as InternalReplayFrameEvent,\n  ReplayOptionFrameEvent as InternalReplayOptionFrameEvent,\n  ReplaySpanFrame as InternalReplaySpanFrame,\n  ReplaySpanFrameEvent as InternalReplaySpanFrameEvent,\n} from './types';\nimport { getReplay as internalGetReplay } from './util/getReplay';\n\n/** @deprecated Use the export from `@sentry/replay` or from framework-specific SDKs like `@sentry/react` or `@sentry/vue` */\nconst getReplay = internalGetReplay;\n\n/** @deprecated Use the export from `@sentry/replay` or from framework-specific SDKs like `@sentry/react` or `@sentry/vue` */\nconst replayIntegration = internalReplayIntegration;\n\n/** @deprecated Use the export from `@sentry/replay` or from framework-specific SDKs like `@sentry/react` or `@sentry/vue` */\n// eslint-disable-next-line deprecation/deprecation\nclass Replay extends InternalReplay {}\n\n// eslint-disable-next-line deprecation/deprecation\nexport { replayIntegration, getReplay, Replay, internalReplayIntegration, internalGetReplay, InternalReplay };\n\n/** @deprecated Use the export from `@sentry/replay` or from framework-specific SDKs like `@sentry/react` or `@sentry/vue` */\ntype ReplayConfiguration = InternalReplayConfiguration;\n\n/** @deprecated Use the export from `@sentry/replay` or from framework-specific SDKs like `@sentry/react` or `@sentry/vue` */\ntype ReplayEventType = InternalReplayEventType;\n\n/** @deprecated Use the export from `@sentry/replay` or from framework-specific SDKs like `@sentry/react` or `@sentry/vue` */\ntype ReplayEventWithTime = InternalReplayEventWithTime;\n\n/** @deprecated Use the export from `@sentry/replay` or from framework-specific SDKs like `@sentry/react` or `@sentry/vue` */\ntype ReplayBreadcrumbFrame = InternalReplayBreadcrumbFrame;\n\n/** @deprecated Use the export from `@sentry/replay` or from framework-specific SDKs like `@sentry/react` or `@sentry/vue` */\ntype ReplayBreadcrumbFrameEvent = InternalReplayBreadcrumbFrameEvent;\n\n/** @deprecated Use the export from `@sentry/replay` or from framework-specific SDKs like `@sentry/react` or `@sentry/vue` */\ntype ReplayOptionFrameEvent = InternalReplayOptionFrameEvent;\n\n/** @deprecated Use the export from `@sentry/replay` or from framework-specific SDKs like `@sentry/react` or `@sentry/vue` */\ntype ReplayFrame = InternalReplayFrame;\n\n/** @deprecated Use the export from `@sentry/replay` or from framework-specific SDKs like `@sentry/react` or `@sentry/vue` */\ntype ReplayFrameEvent = InternalReplayFrameEvent;\n\n/** @deprecated Use the export from `@sentry/replay` or from framework-specific SDKs like `@sentry/react` or `@sentry/vue` */\ntype ReplaySpanFrame = InternalReplaySpanFrame;\n\n/** @deprecated Use the export from `@sentry/replay` or from framework-specific SDKs like `@sentry/react` or `@sentry/vue` */\ntype ReplaySpanFrameEvent = InternalReplaySpanFrameEvent;\n\n/** @deprecated Use the export from `@sentry/replay` or from framework-specific SDKs like `@sentry/react` or `@sentry/vue` */\ntype CanvasManagerInterface = InternalCanvasManagerInterface;\n\n/** @deprecated Use the export from `@sentry/replay` or from framework-specific SDKs like `@sentry/react` or `@sentry/vue` */\ntype CanvasManagerOptions = InternalCanvasManagerOptions;\n\nexport type {\n  // eslint-disable-next-line deprecation/deprecation\n  CanvasManagerInterface,\n  // eslint-disable-next-line deprecation/deprecation\n  CanvasManagerOptions,\n  // eslint-disable-next-line deprecation/deprecation\n  ReplayBreadcrumbFrame,\n  // eslint-disable-next-line deprecation/deprecation\n  ReplayBreadcrumbFrameEvent,\n  // eslint-disable-next-line deprecation/deprecation\n  ReplayConfiguration,\n  // eslint-disable-next-line deprecation/deprecation\n  ReplayEventType,\n  // eslint-disable-next-line deprecation/deprecation\n  ReplayEventWithTime,\n  // eslint-disable-next-line deprecation/deprecation\n  ReplayFrame,\n  // eslint-disable-next-line deprecation/deprecation\n  ReplayFrameEvent,\n  // eslint-disable-next-line deprecation/deprecation\n  ReplayOptionFrameEvent,\n  // eslint-disable-next-line deprecation/deprecation\n  ReplaySpanFrame,\n  // eslint-disable-next-line deprecation/deprecation\n  ReplaySpanFrameEvent,\n  InternalCanvasManagerInterface,\n  InternalCanvasManagerOptions,\n  InternalReplayBreadcrumbFrame,\n  InternalReplayBreadcrumbFrameEvent,\n  InternalReplayConfiguration,\n  InternalReplayEventType,\n  InternalReplayEventWithTime,\n  InternalReplayFrame,\n  InternalReplayFrameEvent,\n  InternalReplayOptionFrameEvent,\n  InternalReplaySpanFrame,\n  InternalReplaySpanFrameEvent,\n};\n\n// TODO (v8): Remove deprecated types\nexport * from './types/deprecated';\n","export const DEFAULT_ENVIRONMENT = 'production';\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","import type { Event, EventHint, EventProcessor } from '@sentry/types';\nimport { SyncPromise, getGlobalSingleton, isThenable, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\n\n/**\n * Returns the global event processors.\n * @deprecated Global event processors will be removed in v8.\n */\nexport function getGlobalEventProcessors(): EventProcessor[] {\n  return getGlobalSingleton<EventProcessor[]>('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @deprecated Use `addEventProcessor` instead. Global event processors will be removed in v8.\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  // eslint-disable-next-line deprecation/deprecation\n  getGlobalEventProcessors().push(callback);\n}\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nexport function notifyEventProcessors(\n  processors: EventProcessor[],\n  event: Event | null,\n  hint: EventHint,\n  index: number = 0,\n): PromiseLike<Event | null> {\n  return new SyncPromise<Event | null>((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) as Event | null;\n\n      DEBUG_BUILD && processor.id && result === null && logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if (isThenable(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n","import type {\n  Breadcrumb,\n  BreadcrumbHint,\n  CaptureContext,\n  CheckIn,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  FinishedCheckIn,\n  MonitorConfig,\n  Primitive,\n  Scope as ScopeInterface,\n  Session,\n  SessionContext,\n  Severity,\n  SeverityLevel,\n  Span,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport { GLOBAL_OBJ, isThenable, logger, timestampInSeconds, uuid4 } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { Hub } from './hub';\nimport { runWithAsyncContext } from './hub';\nimport { getCurrentHub, getIsolationScope } from './hub';\nimport type { Scope } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\nimport type { ExclusiveEventHintOrCaptureContext } from './utils/prepareEvent';\nimport { parseEventHintOrCaptureContext } from './utils/prepareEvent';\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nexport function captureException(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exception: any,\n  hint?: ExclusiveEventHintOrCaptureContext,\n): string {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureException(exception, parseEventHintOrCaptureContext(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param captureContext Define the level of the message or pass in additional data to attach to the message.\n * @returns the id of the captured message.\n */\nexport function captureMessage(\n  message: string,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext?: CaptureContext | Severity | SeverityLevel,\n): string {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param exception The event to send to Sentry.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured event.\n */\nexport function captureEvent(event: Event, hint?: EventHint): string {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n *\n * @deprecated Use getCurrentScope() directly.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function configureScope(callback: (scope: Scope) => void): ReturnType<Hub['configureScope']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): ReturnType<Hub['addBreadcrumb']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().addBreadcrumb(breadcrumb, hint);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, deprecation/deprecation\nexport function setContext(name: string, context: { [key: string]: any } | null): ReturnType<Hub['setContext']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setExtras(extras: Extras): ReturnType<Hub['setExtras']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setExtra(key: string, extra: Extra): ReturnType<Hub['setExtra']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setTags(tags: { [key: string]: Primitive }): ReturnType<Hub['setTags']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setTag(key: string, value: Primitive): ReturnType<Hub['setTag']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setUser(user: User | null): ReturnType<Hub['setUser']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n */\nexport function withScope<T>(callback: (scope: Scope) => T): T;\n/**\n * Set the given scope as the active scope in the callback.\n */\nexport function withScope<T>(scope: ScopeInterface | undefined, callback: (scope: Scope) => T): T;\n/**\n * Either creates a new active scope, or sets the given scope as active scope in the given callback.\n */\nexport function withScope<T>(\n  ...rest: [callback: (scope: Scope) => T] | [scope: ScopeInterface | undefined, callback: (scope: Scope) => T]\n): T {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [scope, callback] = rest;\n    if (!scope) {\n      // eslint-disable-next-line deprecation/deprecation\n      return hub.withScope(callback);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    return hub.withScope(() => {\n      // eslint-disable-next-line deprecation/deprecation\n      hub.getStackTop().scope = scope as Scope;\n      return callback(scope as Scope);\n    });\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return hub.withScope(rest[0]);\n}\n\n/**\n * Attempts to fork the current isolation scope and the current scope based on the current async context strategy. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n *\n * @param callback The callback in which the passed isolation scope is active. (Note: In environments without async\n * context strategy, the currently active isolation scope may change within execution of the callback.)\n * @returns The same value that `callback` returns.\n */\nexport function withIsolationScope<T>(callback: (isolationScope: Scope) => T): T {\n  return runWithAsyncContext(() => {\n    return callback(getIsolationScope());\n  });\n}\n\n/**\n * Forks the current scope and sets the provided span as active span in the context of the provided callback.\n *\n * @param span Spans started in the context of the provided callback will be children of this span.\n * @param callback Execution context in which the provided span will be active. Is passed the newly forked scope.\n * @returns the value returned from the provided callback function.\n */\nexport function withActiveSpan<T>(span: Span, callback: (scope: Scope) => T): T {\n  return withScope(scope => {\n    // eslint-disable-next-line deprecation/deprecation\n    scope.setSpan(span);\n    return callback(scope);\n  });\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n *\n * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n */\nexport function startTransaction(\n  context: TransactionContext,\n  customSamplingContext?: CustomSamplingContext,\n  // eslint-disable-next-line deprecation/deprecation\n): ReturnType<Hub['startTransaction']> {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function captureCheckIn(checkIn: CheckIn, upsertMonitorConfig?: MonitorConfig): string {\n  const scope = getCurrentScope();\n  const client = getClient();\n  if (!client) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function withMonitor<T>(\n  monitorSlug: CheckIn['monitorSlug'],\n  callback: () => T,\n  upsertMonitorConfig?: MonitorConfig,\n): T {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = timestampInSeconds();\n\n  function finishCheckIn(status: FinishedCheckIn['status']): void {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: timestampInSeconds() - now });\n  }\n\n  let maybePromiseResult: T;\n  try {\n    maybePromiseResult = callback();\n  } catch (e) {\n    finishCheckIn('error');\n    throw e;\n  }\n\n  if (isThenable(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishCheckIn('ok');\n      },\n      () => {\n        finishCheckIn('error');\n      },\n    );\n  } else {\n    finishCheckIn('ok');\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function flush(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function close(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n * @deprecated This function will be removed in the next major version of the Sentry SDK.\n */\nexport function lastEventId(): string | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * Get the currently active client.\n */\nexport function getClient<C extends Client>(): C | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getClient<C>();\n}\n\n/**\n * Returns true if Sentry has been properly initialized.\n */\nexport function isInitialized(): boolean {\n  return !!getClient();\n}\n\n/**\n * Get the currently active scope.\n */\nexport function getCurrentScope(): Scope {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getScope();\n}\n\n/**\n * Start a session on the current isolation scope.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns the new active session\n */\nexport function startSession(context?: SessionContext): Session {\n  const client = getClient();\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n  // Will fetch userAgent if called from browser sdk\n  const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n  const session = makeSession({\n    release,\n    environment,\n    user: currentScope.getUser() || isolationScope.getUser(),\n    ...(userAgent && { userAgent }),\n    ...context,\n  });\n\n  // End existing session if there's one\n  const currentSession = isolationScope.getSession();\n  if (currentSession && currentSession.status === 'ok') {\n    updateSession(currentSession, { status: 'exited' });\n  }\n\n  endSession();\n\n  // Afterwards we set the new session on the scope\n  isolationScope.setSession(session);\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession(session);\n\n  return session;\n}\n\n/**\n * End the session on the current isolation scope.\n */\nexport function endSession(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session) {\n    closeSession(session);\n  }\n  _sendSessionUpdate();\n\n  // the session is over; take it off of the scope\n  isolationScope.setSession();\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession();\n}\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n  const client = getClient();\n  // TODO (v8): Remove currentScope and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session && client && client.captureSession) {\n    client.captureSession(session);\n  }\n}\n\n/**\n * Sends the current session on the scope to Sentry\n *\n * @param end If set the session will be marked as exited and removed from the scope.\n *            Defaults to `false`.\n */\nexport function captureSession(end: boolean = false): void {\n  // both send the update and pull the session from the scope\n  if (end) {\n    endSession();\n    return;\n  }\n\n  // only send the update\n  _sendSessionUpdate();\n}\n","/* eslint-disable max-lines */\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Primitive,\n  Session,\n  SessionContext,\n  Severity,\n  SeverityLevel,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport {\n  GLOBAL_OBJ,\n  consoleSandbox,\n  dateTimestampInSeconds,\n  getGlobalSingleton,\n  isThenable,\n  logger,\n  uuid4,\n} from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { DEBUG_BUILD } from './debug-build';\nimport { Scope } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\nimport { SDK_VERSION } from './version';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = parseFloat(SDK_VERSION);\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\nexport interface RunWithAsyncContextOptions {\n  /** Whether to reuse an existing async context if one exists. Defaults to false. */\n  reuseExisting?: boolean;\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Strategy used to track async context.\n */\nexport interface AsyncContextStrategy {\n  /**\n   * Gets the current async context. Returns undefined if there is no current async context.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub: () => Hub | undefined;\n  /**\n   * Runs the supplied callback in its own async context.\n   */\n  runWithAsyncContext<T>(callback: () => T, options: RunWithAsyncContextOptions): T;\n}\n\n/**\n * A layer in the process stack.\n * @hidden\n */\nexport interface Layer {\n  client?: Client;\n  scope: Scope;\n}\n\n/**\n * An object that contains a hub and maintains a scope stack.\n * @hidden\n */\nexport interface Carrier {\n  __SENTRY__?: {\n    // eslint-disable-next-line deprecation/deprecation\n    hub?: Hub;\n    acs?: AsyncContextStrategy;\n    /**\n     * Extra Hub properties injected by various SDKs\n     */\n    integrations?: Integration[];\n    extensions?: {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n}\n\n/**\n * @deprecated The `Hub` class will be removed in version 8 of the SDK in favour of `Scope` and `Client` objects.\n *\n * If you previously used the `Hub` class directly, replace it with `Scope` and `Client` objects. More information:\n * - [Multiple Sentry Instances](https://docs.sentry.io/platforms/javascript/best-practices/multiple-sentry-instances/)\n * - [Browser Extensions](https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/)\n *\n * Some of our APIs are typed with the Hub class instead of the interface (e.g. `getCurrentHub`). Most of them are deprecated\n * themselves and will also be removed in version 8. More information:\n * - [Migration Guide](https://github.com/getsentry/sentry-javascript/blob/develop/MIGRATION.md#deprecate-hub)\n */\n// eslint-disable-next-line deprecation/deprecation\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  private _isolationScope: Scope;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   *\n   * @deprecated Instantiation of Hub objects is deprecated and the constructor will be removed in version 8 of the SDK.\n   *\n   * If you are currently using the Hub for multi-client use like so:\n   *\n   * ```\n   * // OLD\n   * const hub = new Hub();\n   * hub.bindClient(client);\n   * makeMain(hub)\n   * ```\n   *\n   * instead initialize the client as follows:\n   *\n   * ```\n   * // NEW\n   * Sentry.withIsolationScope(() => {\n   *    Sentry.setCurrentClient(client);\n   *    client.init();\n   * });\n   * ```\n   *\n   * If you are using the Hub to capture events like so:\n   *\n   * ```\n   * // OLD\n   * const client = new Client();\n   * const hub = new Hub(client);\n   * hub.captureException()\n   * ```\n   *\n   * instead capture isolated events as follows:\n   *\n   * ```\n   * // NEW\n   * const client = new Client();\n   * const scope = new Scope();\n   * scope.setClient(client);\n   * scope.captureException();\n   * ```\n   */\n  public constructor(\n    client?: Client,\n    scope?: Scope,\n    isolationScope?: Scope,\n    private readonly _version: number = API_VERSION,\n  ) {\n    let assignedScope;\n    if (!scope) {\n      assignedScope = new Scope();\n      assignedScope.setClient(client);\n    } else {\n      assignedScope = scope;\n    }\n\n    let assignedIsolationScope;\n    if (!isolationScope) {\n      assignedIsolationScope = new Scope();\n      assignedIsolationScope.setClient(client);\n    } else {\n      assignedIsolationScope = isolationScope;\n    }\n\n    this._stack = [{ scope: assignedScope }];\n\n    if (client) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.bindClient(client);\n    }\n\n    this._isolationScope = assignedIsolationScope;\n  }\n\n  /**\n   * Checks if this hub's version is older than the given version.\n   *\n   * @param version A version number to compare to.\n   * @return True if the given version is newer; otherwise false.\n   *\n   * @deprecated This will be removed in v8.\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * This binds the given client to the current scope.\n   * @param client An SDK client (client) instance.\n   *\n   * @deprecated Use `initAndBind()` directly, or `setCurrentClient()` and/or `client.init()` instead.\n   */\n  public bindClient(client?: Client): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const top = this.getStackTop();\n    top.client = client;\n    top.scope.setClient(client);\n    // eslint-disable-next-line deprecation/deprecation\n    if (client && client.setupIntegrations) {\n      // eslint-disable-next-line deprecation/deprecation\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.getScope().clone();\n    // eslint-disable-next-line deprecation/deprecation\n    this.getStack().push({\n      // eslint-disable-next-line deprecation/deprecation\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n  public popScope(): boolean {\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.getStack().length <= 1) return false;\n    // eslint-disable-next-line deprecation/deprecation\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.withScope()` instead.\n   */\n  public withScope<T>(callback: (scope: Scope) => T): T {\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.pushScope();\n\n    let maybePromiseResult: T;\n    try {\n      maybePromiseResult = callback(scope);\n    } catch (e) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.popScope();\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      // @ts-expect-error - isThenable returns the wrong type\n      return maybePromiseResult.then(\n        res => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          return res;\n        },\n        e => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          throw e;\n        },\n      );\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    this.popScope();\n    return maybePromiseResult;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.getClient()` instead.\n   */\n  public getClient<C extends Client>(): C | undefined {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().client as C;\n  }\n\n  /**\n   * Returns the scope of the top stack.\n   *\n   * @deprecated Use `Sentry.getCurrentScope()` instead.\n   */\n  public getScope(): Scope {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().scope;\n  }\n\n  /**\n   * @deprecated Use `Sentry.getIsolationScope()` instead.\n   */\n  public getIsolationScope(): Scope {\n    return this._isolationScope;\n  }\n\n  /**\n   * Returns the scope stack for domains or the process.\n   * @deprecated This will be removed in v8.\n   */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /**\n   * Returns the topmost scope layer in the order domain > local > process.\n   * @deprecated This will be removed in v8.\n   */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureException()` instead.\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureException(exception, {\n      originalException: exception,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use  `Sentry.captureMessage()` instead.\n   */\n  public captureMessage(\n    message: string,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n  ): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureMessage(message, level, {\n      originalException: message,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureEvent()` instead.\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureEvent(event, { ...hint, event_id: eventId });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated This will be removed in v8.\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.addBreadcrumb()` instead.\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    // TODO(v8): I know this comment doesn't make much sense because the hub will be deprecated but I still wanted to\n    // write it down. In theory, we would have to add the breadcrumbs to the isolation scope here, however, that would\n    // duplicate all of the breadcrumbs. There was the possibility of adding breadcrumbs to both, the isolation scope\n    // and the normal scope, and deduplicating it down the line in the event processing pipeline. However, that would\n    // have been very fragile, because the breadcrumb objects would have needed to keep their identity all throughout\n    // the event processing pipeline.\n    // In the new implementation, the top level `Sentry.addBreadcrumb()` should ONLY write to the isolation scope.\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setUser()` instead.\n   */\n  public setUser(user: User | null): void {\n    // TODO(v8): The top level `Sentry.setUser()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setUser(user);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTags()` instead.\n   */\n  public setTags(tags: { [key: string]: Primitive }): void {\n    // TODO(v8): The top level `Sentry.setTags()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTags(tags);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtras()` instead.\n   */\n  public setExtras(extras: Extras): void {\n    // TODO(v8): The top level `Sentry.setExtras()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtras(extras);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTag()` instead.\n   */\n  public setTag(key: string, value: Primitive): void {\n    // TODO(v8): The top level `Sentry.setTag()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTag(key, value);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtra()` instead.\n   */\n  public setExtra(key: string, extra: Extra): void {\n    // TODO(v8): The top level `Sentry.setExtra()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtra(key, extra);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setContext()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    // TODO(v8): The top level `Sentry.setContext()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setContext(name, context);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `getScope()` directly.\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public run(callback: (hub: Hub) => void): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      // eslint-disable-next-line deprecation/deprecation\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.getClient().getIntegrationByName()` instead.\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      // eslint-disable-next-line deprecation/deprecation\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n   *\n   * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n   * new child span within the transaction or any span, call the respective `.startChild()` method.\n   *\n   * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n   *\n   * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n   * finished child spans will be sent to Sentry.\n   *\n   * @param context Properties of the new `Transaction`.\n   * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n   * default values). See {@link Options.tracesSampler}.\n   *\n   * @returns The transaction which was just started\n   *\n   * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n   */\n  public startTransaction(context: TransactionContext, customSamplingContext?: CustomSamplingContext): Transaction {\n    const result = this._callExtensionMethod<Transaction>('startTransaction', context, customSamplingContext);\n\n    if (DEBUG_BUILD && !result) {\n      // eslint-disable-next-line deprecation/deprecation\n      const client = this.getClient();\n      if (!client) {\n        logger.warn(\n          \"Tracing extension 'startTransaction' is missing. You should 'init' the SDK before calling 'startTransaction'\",\n        );\n      } else {\n        logger.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n`);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `spanToTraceHeader()` instead.\n   */\n  public traceHeaders(): { [key: string]: string } {\n    return this._callExtensionMethod<{ [key: string]: string }>('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use top level `captureSession` instead.\n   */\n  public captureSession(endSession: boolean = false): void {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      // eslint-disable-next-line deprecation/deprecation\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `endSession` instead.\n   */\n  public endSession(): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `startSession` instead.\n   */\n  public startSession(context?: SessionContext): Session {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      updateSession(currentSession, { status: 'exited' });\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   *\n   * @deprecated Use top-level `getClient().getOptions().sendDefaultPii` instead. This function\n   * only unnecessarily increased API surface but only wrapped accessing the option.\n   */\n  public shouldSendDefaultPii(): boolean {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n  private _sendSessionUpdate(): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    const session = scope.getSession();\n    if (session && client && client.captureSession) {\n      client.captureSession(session);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-expect-error Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _callExtensionMethod<T>(method: string, ...args: any[]): T {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    DEBUG_BUILD && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier(): Carrier {\n  GLOBAL_OBJ.__SENTRY__ = GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n *\n * @deprecated Use `setCurrentClient()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n *\n * @deprecated Use the respective replacement method directly instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    const hub = registry.__SENTRY__.acs.getCurrentHub();\n\n    if (hub) {\n      return hub;\n    }\n  }\n\n  // Return hub that lives on a global object\n  return getGlobalHub(registry);\n}\n\n/**\n * Get the currently active isolation scope.\n * The isolation scope is active for the current exection context,\n * meaning that it will remain stable for the same Hub.\n */\nexport function getIsolationScope(): Scope {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getIsolationScope();\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction getGlobalHub(registry: Carrier = getMainCarrier()): Hub {\n  // If there's no hub, or its an old API, assign a new one\n\n  if (\n    !hasHubOnCarrier(registry) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(registry).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function ensureHubOnCarrier(carrier: Carrier, parent: Hub = getGlobalHub()): void {\n  // If there's no hub on current domain, or it's an old API, assign a new one\n  if (\n    !hasHubOnCarrier(carrier) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(carrier).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = parent.getClient();\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = parent.getScope();\n    // eslint-disable-next-line deprecation/deprecation\n    const isolationScope = parent.getIsolationScope();\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(carrier, new Hub(client, scope.clone(), isolationScope.clone()));\n  }\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nexport function setAsyncContextStrategy(strategy: AsyncContextStrategy | undefined): void {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  registry.__SENTRY__ = registry.__SENTRY__ || {};\n  registry.__SENTRY__.acs = strategy;\n}\n\n/**\n * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.\n *\n * @param callback The callback to run in its own async context\n * @param options Options to pass to the async context strategy\n * @returns The result of the callback\n */\nexport function runWithAsyncContext<T>(callback: () => T, options: RunWithAsyncContextOptions = {}): T {\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);\n  }\n\n  // if there was no strategy, fallback to just calling the callback\n  return callback();\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  // eslint-disable-next-line deprecation/deprecation\n  return getGlobalSingleton<Hub>('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n","import type {\n  Client,\n  Event,\n  EventHint,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n  IntegrationFnResult,\n  Options,\n} from '@sentry/types';\nimport { arrayify, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { addGlobalEventProcessor } from './eventProcessors';\nimport { getClient } from './exports';\nimport { getCurrentHub } from './hub';\n\ndeclare module '@sentry/types' {\n  interface Integration {\n    isDefaultInstance?: boolean;\n  }\n}\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport type IntegrationIndex = {\n  [key: string]: Integration;\n};\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations: Integration[]): Integration[] {\n  const integrationsByName: { [key: string]: Integration } = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nexport function getIntegrationsToSetup(options: Pick<Options, 'defaultIntegrations' | 'integrations'>): Integration[] {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations: Integration[];\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(client: Client, integrations: Integration[]): IntegrationIndex {\n  const integrationIndex: IntegrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/**\n * Execute the `afterAllSetup` hooks of the given integrations.\n */\nexport function afterSetupIntegrations(client: Client, integrations: Integration[]): void {\n  for (const integration of integrations) {\n    // guard against empty provided integrations\n    if (integration && integration.afterAllSetup) {\n      integration.afterAllSetup(client);\n    }\n  }\n}\n\n/** Setup a single integration.  */\nexport function setupIntegration(client: Client, integration: Integration, integrationIndex: IntegrationIndex): void {\n  if (integrationIndex[integration.name]) {\n    DEBUG_BUILD && logger.log(`Integration skipped because it was already installed: ${integration.name}`);\n    return;\n  }\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    // eslint-disable-next-line deprecation/deprecation\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (client.on && typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) as typeof integration.preprocessEvent;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (client.addEventProcessor && typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) as typeof integration.processEvent;\n\n    const processor = Object.assign((event: Event, hint: EventHint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  DEBUG_BUILD && logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current hub's client. */\nexport function addIntegration(integration: Integration): void {\n  const client = getClient();\n\n  if (!client || !client.addIntegration) {\n    DEBUG_BUILD && logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex<T>(arr: T[], callback: (item: T) => boolean): number {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * Convert a new integration function to the legacy class syntax.\n * In v8, we can remove this and instead export the integration functions directly.\n *\n * @deprecated This will be removed in v8!\n */\nexport function convertIntegrationFnToClass<Fn extends IntegrationFn>(\n  name: string,\n  fn: Fn,\n): IntegrationClass<Integration> {\n  return Object.assign(\n    function ConvertedIntegration(...args: Parameters<Fn>): Integration {\n      return fn(...args);\n    },\n    { id: name },\n  ) as unknown as IntegrationClass<Integration>;\n}\n\n/**\n * Define an integration function that can be used to create an integration instance.\n * Note that this by design hides the implementation details of the integration, as they are considered internal.\n */\nexport function defineIntegration<Fn extends IntegrationFn>(fn: Fn): (...args: Parameters<Fn>) => IntegrationFnResult {\n  return fn;\n}\n","/* eslint-disable max-lines */\nimport type {\n  Attachment,\n  Breadcrumb,\n  CaptureContext,\n  Client,\n  Context,\n  Contexts,\n  Event,\n  EventHint,\n  EventProcessor,\n  Extra,\n  Extras,\n  Primitive,\n  PropagationContext,\n  RequestSession,\n  Scope as ScopeInterface,\n  ScopeContext,\n  ScopeData,\n  Session,\n  Severity,\n  SeverityLevel,\n  Span,\n  Transaction,\n  User,\n} from '@sentry/types';\nimport { dateTimestampInSeconds, isPlainObject, logger, uuid4 } from '@sentry/utils';\n\nimport { getGlobalEventProcessors, notifyEventProcessors } from './eventProcessors';\nimport { updateSession } from './session';\nimport { applyScopeDataToEvent } from './utils/applyScopeDataToEvent';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * The global scope is kept in this module.\n * When accessing this via `getGlobalScope()` we'll make sure to set one if none is currently present.\n */\nlet globalScope: ScopeInterface | undefined;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport class Scope implements ScopeInterface {\n  /** Flag if notifying is happening. */\n  protected _notifyingListeners: boolean;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void>;\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  protected _eventProcessors: EventProcessor[];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[];\n\n  /** User */\n  protected _user: User;\n\n  /** Tags */\n  protected _tags: { [key: string]: Primitive };\n\n  /** Extra */\n  protected _extra: Extras;\n\n  /** Contexts */\n  protected _contexts: Contexts;\n\n  /** Attachments */\n  protected _attachments: Attachment[];\n\n  /** Propagation Context for distributed tracing */\n  protected _propagationContext: PropagationContext;\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n  protected _sdkProcessingMetadata: { [key: string]: unknown };\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n  protected _level?: Severity | SeverityLevel;\n\n  /**\n   * Transaction Name\n   */\n  protected _transactionName?: string;\n\n  /** Span */\n  protected _span?: Span;\n\n  /** Session */\n  protected _session?: Session;\n\n  /** Request Mode Session Status */\n  protected _requestSession?: RequestSession;\n\n  /** The client on this scope */\n  protected _client?: Client;\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n  public constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = generatePropagationContext();\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @deprecated Use `scope.clone()` and `new Scope()` instead.\n   */\n  public static clone(scope?: Scope): Scope {\n    return scope ? scope.clone() : new Scope();\n  }\n\n  /**\n   * Clone this scope instance.\n   */\n  public clone(): Scope {\n    const newScope = new Scope();\n    newScope._breadcrumbs = [...this._breadcrumbs];\n    newScope._tags = { ...this._tags };\n    newScope._extra = { ...this._extra };\n    newScope._contexts = { ...this._contexts };\n    newScope._user = this._user;\n    newScope._level = this._level;\n    newScope._span = this._span;\n    newScope._session = this._session;\n    newScope._transactionName = this._transactionName;\n    newScope._fingerprint = this._fingerprint;\n    newScope._eventProcessors = [...this._eventProcessors];\n    newScope._requestSession = this._requestSession;\n    newScope._attachments = [...this._attachments];\n    newScope._sdkProcessingMetadata = { ...this._sdkProcessingMetadata };\n    newScope._propagationContext = { ...this._propagationContext };\n    newScope._client = this._client;\n\n    return newScope;\n  }\n\n  /** Update the client on the scope. */\n  public setClient(client: Client | undefined): void {\n    this._client = client;\n  }\n\n  /**\n   * Get the client assigned to this scope.\n   *\n   * It is generally recommended to use the global function `Sentry.getClient()` instead, unless you know what you are doing.\n   */\n  public getClient(): Client | undefined {\n    return this._client;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    // If null is passed we want to unset everything, but still define keys,\n    // so that later down in the pipeline any existing values are cleared.\n    this._user = user || {\n      email: undefined,\n      id: undefined,\n      ip_address: undefined,\n      segment: undefined,\n      username: undefined,\n    };\n\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getUser(): User | undefined {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getRequestSession(): RequestSession | undefined {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setRequestSession(requestSession?: RequestSession): this {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): this {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): this {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): this {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel,\n  ): this {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the transaction name on the scope for future events.\n   */\n  public setTransactionName(name?: string): this {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(key: string, context: Context | null): this {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the Span on the scope.\n   * @param span Span\n   * @deprecated Instead of setting a span on a scope, use `startSpan()`/`startSpanManual()` instead.\n   */\n  public setSpan(span?: Span): this {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Returns the `Span` if there is one.\n   * @deprecated Use `getActiveSpan()` instead.\n   */\n  public getSpan(): Span | undefined {\n    return this._span;\n  }\n\n  /**\n   * Returns the `Transaction` attached to the scope (if there is one).\n   * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.\n   */\n  public getTransaction(): Transaction | undefined {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this._span;\n    // Cannot replace with getRootSpan because getRootSpan returns a span, not a transaction\n    // Also, this method will be removed anyway.\n    // eslint-disable-next-line deprecation/deprecation\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSession(session?: Session): this {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSession(): Session | undefined {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public update(captureContext?: CaptureContext): this {\n    if (!captureContext) {\n      return this;\n    }\n\n    const scopeToMerge = typeof captureContext === 'function' ? captureContext(this) : captureContext;\n\n    if (scopeToMerge instanceof Scope) {\n      const scopeData = scopeToMerge.getScopeData();\n\n      this._tags = { ...this._tags, ...scopeData.tags };\n      this._extra = { ...this._extra, ...scopeData.extra };\n      this._contexts = { ...this._contexts, ...scopeData.contexts };\n      if (scopeData.user && Object.keys(scopeData.user).length) {\n        this._user = scopeData.user;\n      }\n      if (scopeData.level) {\n        this._level = scopeData.level;\n      }\n      if (scopeData.fingerprint.length) {\n        this._fingerprint = scopeData.fingerprint;\n      }\n      if (scopeToMerge.getRequestSession()) {\n        this._requestSession = scopeToMerge.getRequestSession();\n      }\n      if (scopeData.propagationContext) {\n        this._propagationContext = scopeData.propagationContext;\n      }\n    } else if (isPlainObject(scopeToMerge)) {\n      const scopeContext = captureContext as ScopeContext;\n      this._tags = { ...this._tags, ...scopeContext.tags };\n      this._extra = { ...this._extra, ...scopeContext.extra };\n      this._contexts = { ...this._contexts, ...scopeContext.contexts };\n      if (scopeContext.user) {\n        this._user = scopeContext.user;\n      }\n      if (scopeContext.level) {\n        this._level = scopeContext.level;\n      }\n      if (scopeContext.fingerprint) {\n        this._fingerprint = scopeContext.fingerprint;\n      }\n      if (scopeContext.requestSession) {\n        this._requestSession = scopeContext.requestSession;\n      }\n      if (scopeContext.propagationContext) {\n        this._propagationContext = scopeContext.propagationContext;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    this._propagationContext = generatePropagationContext();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n\n    const breadcrumbs = this._breadcrumbs;\n    breadcrumbs.push(mergedBreadcrumb);\n    this._breadcrumbs = breadcrumbs.length > maxCrumbs ? breadcrumbs.slice(-maxCrumbs) : breadcrumbs;\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getLastBreadcrumb(): Breadcrumb | undefined {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addAttachment(attachment: Attachment): this {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `getScopeData()` instead.\n   */\n  public getAttachments(): Attachment[] {\n    const data = this.getScopeData();\n\n    return data.attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearAttachments(): this {\n    this._attachments = [];\n    return this;\n  }\n\n  /** @inheritDoc */\n  public getScopeData(): ScopeData {\n    const {\n      _breadcrumbs,\n      _attachments,\n      _contexts,\n      _tags,\n      _extra,\n      _user,\n      _level,\n      _fingerprint,\n      _eventProcessors,\n      _propagationContext,\n      _sdkProcessingMetadata,\n      _transactionName,\n      _span,\n    } = this;\n\n    return {\n      breadcrumbs: _breadcrumbs,\n      attachments: _attachments,\n      contexts: _contexts,\n      tags: _tags,\n      extra: _extra,\n      user: _user,\n      level: _level,\n      fingerprint: _fingerprint || [],\n      eventProcessors: _eventProcessors,\n      propagationContext: _propagationContext,\n      sdkProcessingMetadata: _sdkProcessingMetadata,\n      transactionName: _transactionName,\n      span: _span,\n    };\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   * @deprecated Use `applyScopeDataToEvent()` directly\n   */\n  public applyToEvent(\n    event: Event,\n    hint: EventHint = {},\n    additionalEventProcessors: EventProcessor[] = [],\n  ): PromiseLike<Event | null> {\n    applyScopeDataToEvent(event, this.getScopeData());\n\n    // TODO (v8): Update this order to be: Global > Client > Scope\n    const eventProcessors: EventProcessor[] = [\n      ...additionalEventProcessors,\n      // eslint-disable-next-line deprecation/deprecation\n      ...getGlobalEventProcessors(),\n      ...this._eventProcessors,\n    ];\n\n    return notifyEventProcessors(eventProcessors, event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n  public setSDKProcessingMetadata(newData: { [key: string]: unknown }): this {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setPropagationContext(context: PropagationContext): this {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getPropagationContext(): PropagationContext {\n    return this._propagationContext;\n  }\n\n  /**\n   * Capture an exception for this scope.\n   *\n   * @param exception The exception to capture.\n   * @param hint Optinal additional data to attach to the Sentry event.\n   * @returns the id of the captured Sentry event.\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture exception!');\n      return eventId;\n    }\n\n    const syntheticException = new Error('Sentry syntheticException');\n\n    this._client.captureException(\n      exception,\n      {\n        originalException: exception,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Capture a message for this scope.\n   *\n   * @param message The message to capture.\n   * @param level An optional severity level to report the message with.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured message.\n   */\n  public captureMessage(message: string, level?: SeverityLevel, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture message!');\n      return eventId;\n    }\n\n    const syntheticException = new Error(message);\n\n    this._client.captureMessage(\n      message,\n      level,\n      {\n        originalException: message,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Captures a manually created event for this scope and sends it to Sentry.\n   *\n   * @param exception The event to capture.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured event.\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture event!');\n      return eventId;\n    }\n\n    this._client.captureEvent(event, { ...hint, event_id: eventId }, this);\n\n    return eventId;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n}\n\n/**\n * Get the global scope.\n * This scope is applied to _all_ events.\n */\nexport function getGlobalScope(): ScopeInterface {\n  if (!globalScope) {\n    globalScope = new Scope();\n  }\n\n  return globalScope;\n}\n\n/**\n * This is mainly needed for tests.\n * DO NOT USE this, as this is an internal API and subject to change.\n * @hidden\n */\nexport function setGlobalScope(scope: ScopeInterface | undefined): void {\n  globalScope = scope;\n}\n\nfunction generatePropagationContext(): PropagationContext {\n  return {\n    traceId: uuid4(),\n    spanId: uuid4().substring(16),\n  };\n}\n","import type { SerializedSession, Session, SessionContext, SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, timestampInSeconds, uuid4 } from '@sentry/utils';\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nexport function makeSession(context?: Omit<SessionContext, 'started' | 'status'>): Session {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session: Session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nexport function updateSession(session: Session, context: SessionContext = {}): void {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nexport function closeSession(session: Session, status?: Exclude<SessionStatus, 'ok'>): void {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session: Session): SerializedSession {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n","import type { Client, DynamicSamplingContext, Scope, Span, Transaction } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getClient, getCurrentScope } from '../exports';\nimport { getRootSpan } from '../utils/getRootSpan';\nimport { spanIsSampled, spanToJSON } from '../utils/spanUtils';\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatches the `createDsc` lifecycle hook as a side effect.\n */\nexport function getDynamicSamplingContextFromClient(\n  trace_id: string,\n  client: Client,\n  scope?: Scope,\n): DynamicSamplingContext {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n  // TODO(v8): Remove segment from User\n  // eslint-disable-next-line deprecation/deprecation\n  const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n  const dsc = dropUndefinedKeys({\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    user_segment,\n    public_key,\n    trace_id,\n  }) as DynamicSamplingContext;\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n/**\n * A Span with a frozen dynamic sampling context.\n */\ntype TransactionWithV7FrozenDsc = Transaction & { _frozenDynamicSamplingContext?: DynamicSamplingContext };\n\n/**\n * Creates a dynamic sampling context from a span (and client and scope)\n *\n * @param span the span from which a few values like the root span name and sample rate are extracted.\n *\n * @returns a dynamic sampling context\n */\nexport function getDynamicSamplingContextFromSpan(span: Span): Readonly<Partial<DynamicSamplingContext>> {\n  const client = getClient();\n  if (!client) {\n    return {};\n  }\n\n  // passing emit=false here to only emit later once the DSC is actually populated\n  const dsc = getDynamicSamplingContextFromClient(spanToJSON(span).trace_id || '', client, getCurrentScope());\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  const txn = getRootSpan(span) as TransactionWithV7FrozenDsc | undefined;\n  if (!txn) {\n    return dsc;\n  }\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  // For now we need to avoid breaking users who directly created a txn with a DSC, where this field is still set.\n  // @see Transaction class constructor\n  const v7FrozenDsc = txn && txn._frozenDynamicSamplingContext;\n  if (v7FrozenDsc) {\n    return v7FrozenDsc;\n  }\n\n  // TODO (v8): Replace txn.metadata with txn.attributes[]\n  // We can't do this yet because attributes aren't always set yet.\n  // eslint-disable-next-line deprecation/deprecation\n  const { sampleRate: maybeSampleRate, source } = txn.metadata;\n  if (maybeSampleRate != null) {\n    dsc.sample_rate = `${maybeSampleRate}`;\n  }\n\n  // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n  const jsonSpan = spanToJSON(txn);\n\n  // after JSON conversion, txn.name becomes jsonSpan.description\n  if (source && source !== 'url') {\n    dsc.transaction = jsonSpan.description;\n  }\n\n  dsc.sampled = String(spanIsSampled(txn));\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n","import type { Breadcrumb, Event, ScopeData, Span } from '@sentry/types';\nimport { arrayify, dropUndefinedKeys } from '@sentry/utils';\nimport { getDynamicSamplingContextFromSpan } from '../tracing/dynamicSamplingContext';\nimport { getRootSpan } from './getRootSpan';\nimport { spanToJSON, spanToTraceContext } from './spanUtils';\n\n/**\n * Applies data from the scope to the event and runs all event processors on it.\n */\nexport function applyScopeDataToEvent(event: Event, data: ScopeData): void {\n  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata } = data;\n\n  // Apply general data\n  applyDataToEvent(event, data);\n\n  // We want to set the trace context for normal events only if there isn't already\n  // a trace context on the event. There is a product feature in place where we link\n  // errors with transaction and it relies on that.\n  if (span) {\n    applySpanToEvent(event, span);\n  }\n\n  applyFingerprintToEvent(event, fingerprint);\n  applyBreadcrumbsToEvent(event, breadcrumbs);\n  applySdkMetadataToEvent(event, sdkProcessingMetadata);\n}\n\n/** Merge data of two scopes together. */\nexport function mergeScopeData(data: ScopeData, mergeData: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    sdkProcessingMetadata,\n    breadcrumbs,\n    fingerprint,\n    eventProcessors,\n    attachments,\n    propagationContext,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n    span,\n  } = mergeData;\n\n  mergeAndOverwriteScopeData(data, 'extra', extra);\n  mergeAndOverwriteScopeData(data, 'tags', tags);\n  mergeAndOverwriteScopeData(data, 'user', user);\n  mergeAndOverwriteScopeData(data, 'contexts', contexts);\n  mergeAndOverwriteScopeData(data, 'sdkProcessingMetadata', sdkProcessingMetadata);\n\n  if (level) {\n    data.level = level;\n  }\n\n  if (transactionName) {\n    // eslint-disable-next-line deprecation/deprecation\n    data.transactionName = transactionName;\n  }\n\n  if (span) {\n    data.span = span;\n  }\n\n  if (breadcrumbs.length) {\n    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n  }\n\n  if (fingerprint.length) {\n    data.fingerprint = [...data.fingerprint, ...fingerprint];\n  }\n\n  if (eventProcessors.length) {\n    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n  }\n\n  if (attachments.length) {\n    data.attachments = [...data.attachments, ...attachments];\n  }\n\n  data.propagationContext = { ...data.propagationContext, ...propagationContext };\n}\n\n/**\n * Merges certain scope data. Undefined values will overwrite any existing values.\n * Exported only for tests.\n */\nexport function mergeAndOverwriteScopeData<\n  Prop extends 'extra' | 'tags' | 'user' | 'contexts' | 'sdkProcessingMetadata',\n  Data extends ScopeData,\n>(data: Data, prop: Prop, mergeVal: Data[Prop]): void {\n  if (mergeVal && Object.keys(mergeVal).length) {\n    // Clone object\n    data[prop] = { ...data[prop] };\n    for (const key in mergeVal) {\n      if (Object.prototype.hasOwnProperty.call(mergeVal, key)) {\n        data[prop][key] = mergeVal[key];\n      }\n    }\n  }\n}\n\n/** Exported only for tests */\nexport function mergeArray<Prop extends 'breadcrumbs' | 'fingerprint'>(\n  event: Event,\n  prop: Prop,\n  mergeVal: ScopeData[Prop],\n): void {\n  const prevVal = event[prop];\n  // If we are not merging any new values,\n  // we only need to proceed if there was an empty array before (as we want to replace it with undefined)\n  if (!mergeVal.length && (!prevVal || prevVal.length)) {\n    return;\n  }\n\n  const merged = [...(prevVal || []), ...mergeVal] as ScopeData[Prop];\n  event[prop] = merged.length ? merged : undefined;\n}\n\nfunction applyDataToEvent(event: Event, data: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n  } = data;\n\n  const cleanedExtra = dropUndefinedKeys(extra);\n  if (cleanedExtra && Object.keys(cleanedExtra).length) {\n    event.extra = { ...cleanedExtra, ...event.extra };\n  }\n\n  const cleanedTags = dropUndefinedKeys(tags);\n  if (cleanedTags && Object.keys(cleanedTags).length) {\n    event.tags = { ...cleanedTags, ...event.tags };\n  }\n\n  const cleanedUser = dropUndefinedKeys(user);\n  if (cleanedUser && Object.keys(cleanedUser).length) {\n    event.user = { ...cleanedUser, ...event.user };\n  }\n\n  const cleanedContexts = dropUndefinedKeys(contexts);\n  if (cleanedContexts && Object.keys(cleanedContexts).length) {\n    event.contexts = { ...cleanedContexts, ...event.contexts };\n  }\n\n  if (level) {\n    event.level = level;\n  }\n\n  if (transactionName) {\n    event.transaction = transactionName;\n  }\n}\n\nfunction applyBreadcrumbsToEvent(event: Event, breadcrumbs: Breadcrumb[]): void {\n  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n}\n\nfunction applySdkMetadataToEvent(event: Event, sdkProcessingMetadata: ScopeData['sdkProcessingMetadata']): void {\n  event.sdkProcessingMetadata = {\n    ...event.sdkProcessingMetadata,\n    ...sdkProcessingMetadata,\n  };\n}\n\nfunction applySpanToEvent(event: Event, span: Span): void {\n  event.contexts = { trace: spanToTraceContext(span), ...event.contexts };\n  const rootSpan = getRootSpan(span);\n  if (rootSpan) {\n    event.sdkProcessingMetadata = {\n      dynamicSamplingContext: getDynamicSamplingContextFromSpan(span),\n      ...event.sdkProcessingMetadata,\n    };\n    const transactionName = spanToJSON(rootSpan).description;\n    if (transactionName) {\n      event.tags = { transaction: transactionName, ...event.tags };\n    }\n  }\n}\n\n/**\n * Applies fingerprint from the scope to the event if there's one,\n * uses message if there's one instead or get rid of empty fingerprint\n */\nfunction applyFingerprintToEvent(event: Event, fingerprint: ScopeData['fingerprint'] | undefined): void {\n  // Make sure it's an array first and we actually have something in place\n  event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n  // If we have something on the scope, then merge it with event\n  if (fingerprint) {\n    event.fingerprint = event.fingerprint.concat(fingerprint);\n  }\n\n  // If we have no data at all, remove empty array default\n  if (event.fingerprint && !event.fingerprint.length) {\n    delete event.fingerprint;\n  }\n}\n","import type { Span } from '@sentry/types';\n\n/**\n * Returns the root span of a given span.\n *\n * As long as we use `Transaction`s internally, the returned root span\n * will be a `Transaction` but be aware that this might change in the future.\n *\n * If the given span has no root span or transaction, `undefined` is returned.\n */\nexport function getRootSpan(span: Span): Span | undefined {\n  // TODO (v8): Remove this check and just return span\n  // eslint-disable-next-line deprecation/deprecation\n  return span.transaction;\n}\n","import type { Client, DsnComponents, Hub } from '@sentry/types';\n\n/**\n * Checks whether given url points to Sentry server\n * @param url url to verify\n *\n * TODO(v8): Remove Hub fallback type\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function isSentryRequestUrl(url: string, hubOrClient: Hub | Client | undefined): boolean {\n  const client =\n    hubOrClient && isHub(hubOrClient)\n      ? // eslint-disable-next-line deprecation/deprecation\n        hubOrClient.getClient()\n      : hubOrClient;\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n\n  return checkDsn(url, dsn) || checkTunnel(url, tunnel);\n}\n\nfunction checkTunnel(url: string, tunnel: string | undefined): boolean {\n  if (!tunnel) {\n    return false;\n  }\n\n  return removeTrailingSlash(url) === removeTrailingSlash(tunnel);\n}\n\nfunction checkDsn(url: string, dsn: DsnComponents | undefined): boolean {\n  return dsn ? url.includes(dsn.host) : false;\n}\n\nfunction removeTrailingSlash(str: string): string {\n  return str[str.length - 1] === '/' ? str.slice(0, -1) : str;\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction isHub(hubOrClient: Hub | Client | undefined): hubOrClient is Hub {\n  // eslint-disable-next-line deprecation/deprecation\n  return (hubOrClient as Hub).getClient !== undefined;\n}\n","import type {\n  CaptureContext,\n  Client,\n  ClientOptions,\n  Event,\n  EventHint,\n  Scope as ScopeInterface,\n  ScopeContext,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\nimport { GLOBAL_OBJ, addExceptionMechanism, dateTimestampInSeconds, normalize, truncate, uuid4 } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getGlobalEventProcessors, notifyEventProcessors } from '../eventProcessors';\nimport { Scope, getGlobalScope } from '../scope';\nimport { applyScopeDataToEvent, mergeScopeData } from './applyScopeDataToEvent';\nimport { spanToJSON } from './spanUtils';\n\n/**\n * This type makes sure that we get either a CaptureContext, OR an EventHint.\n * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:\n * { user: { id: '123' }, mechanism: { handled: false } }\n */\nexport type ExclusiveEventHintOrCaptureContext =\n  | (CaptureContext & Partial<{ [key in keyof EventHint]: never }>)\n  | (EventHint & Partial<{ [key in keyof ScopeContext]: never }>);\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nexport function prepareEvent(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n  scope?: Scope,\n  client?: Client,\n  isolationScope?: Scope,\n): PromiseLike<Event | null> {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1_000 } = options;\n  const prepared: Event = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  const finalScope = getFinalScope(scope, hint.captureContext);\n\n  if (hint.mechanism) {\n    addExceptionMechanism(prepared, hint.mechanism);\n  }\n\n  const clientEventProcessors = client && client.getEventProcessors ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Hub.addEventProcessor} gets the finished prepared event.\n  // Merge scope data together\n  const data = getGlobalScope().getScopeData();\n\n  if (isolationScope) {\n    const isolationData = isolationScope.getScopeData();\n    mergeScopeData(data, isolationData);\n  }\n\n  if (finalScope) {\n    const finalScopeData = finalScope.getScopeData();\n    mergeScopeData(data, finalScopeData);\n  }\n\n  const attachments = [...(hint.attachments || []), ...data.attachments];\n  if (attachments.length) {\n    hint.attachments = attachments;\n  }\n\n  applyScopeDataToEvent(prepared, data);\n\n  // TODO (v8): Update this order to be: Global > Client > Scope\n  const eventProcessors = [\n    ...clientEventProcessors,\n    // eslint-disable-next-line deprecation/deprecation\n    ...getGlobalEventProcessors(),\n    // Run scope event processors _after_ all other processors\n    ...data.eventProcessors,\n  ];\n\n  const result = notifyEventProcessors(eventProcessors, prepared, hint);\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event: Event, options: ClientOptions): void {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = truncate(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = truncate(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\nconst debugIdStackParserCache = new WeakMap<StackParser, Map<string, StackFrame[]>>();\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nexport function applyDebugIds(event: Event, stackParser: StackParser): void {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return;\n  }\n\n  let debugIdStackFramesCache: Map<string, StackFrame[]>;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map<string, StackFrame[]>();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce<Record<string, string>>((acc, debugIdStackTrace) => {\n    let parsedStack: StackFrame[];\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      if (stackFrame.filename) {\n        acc[stackFrame.filename] = debugIdMap[debugIdStackTrace];\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event!.exception!.values!.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace!.frames!.forEach(frame => {\n        if (frame.filename) {\n          frame.debug_id = filenameDebugIdMap[frame.filename];\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nexport function applyDebugMeta(event: Event): void {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap: Record<string, string> = {};\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception!.values!.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace!.frames!.forEach(frame => {\n        if (frame.debug_id) {\n          if (frame.abs_path) {\n            filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n          } else if (frame.filename) {\n            filenameDebugIdMap[frame.filename] = frame.debug_id;\n          }\n          delete frame.debug_id;\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.keys(filenameDebugIdMap).forEach(filename => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id: filenameDebugIdMap[filename],\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event: Event, integrationNames: string[]): void {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event: Event | null, depth: number, maxBreadth: number): Event | null {\n  if (!event) {\n    return null;\n  }\n\n  const normalized: Event = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      const data = spanToJSON(span).data;\n\n      if (data) {\n        // This is a bit weird, as we generally have `Span` instances here, but to be safe we do not assume so\n        // eslint-disable-next-line deprecation/deprecation\n        span.data = normalize(data, depth, maxBreadth);\n      }\n\n      return span;\n    });\n  }\n\n  return normalized;\n}\n\nfunction getFinalScope(scope: Scope | undefined, captureContext: CaptureContext | undefined): Scope | undefined {\n  if (!captureContext) {\n    return scope;\n  }\n\n  const finalScope = scope ? scope.clone() : new Scope();\n  finalScope.update(captureContext);\n  return finalScope;\n}\n\n/**\n * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.\n * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.\n */\nexport function parseEventHintOrCaptureContext(\n  hint: ExclusiveEventHintOrCaptureContext | undefined,\n): EventHint | undefined {\n  if (!hint) {\n    return undefined;\n  }\n\n  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext\n  if (hintIsScopeOrFunction(hint)) {\n    return { captureContext: hint };\n  }\n\n  if (hintIsScopeContext(hint)) {\n    return {\n      captureContext: hint,\n    };\n  }\n\n  return hint;\n}\n\nfunction hintIsScopeOrFunction(\n  hint: CaptureContext | EventHint,\n): hint is ScopeInterface | ((scope: ScopeInterface) => ScopeInterface) {\n  return hint instanceof Scope || typeof hint === 'function';\n}\n\ntype ScopeContextProperty = keyof ScopeContext;\nconst captureContextKeys: readonly ScopeContextProperty[] = [\n  'user',\n  'level',\n  'extra',\n  'contexts',\n  'tags',\n  'fingerprint',\n  'requestSession',\n  'propagationContext',\n] as const;\n\nfunction hintIsScopeContext(hint: Partial<ScopeContext> | EventHint): hint is Partial<ScopeContext> {\n  return Object.keys(hint).some(key => captureContextKeys.includes(key as ScopeContextProperty));\n}\n","import type { Span, SpanJSON, SpanTimeInput, TraceContext } from '@sentry/types';\nimport { dropUndefinedKeys, generateSentryTraceHeader, timestampInSeconds } from '@sentry/utils';\nimport type { Span as SpanClass } from '../tracing/span';\n\n// These are aligned with OpenTelemetry trace flags\nexport const TRACE_FLAG_NONE = 0x0;\nexport const TRACE_FLAG_SAMPLED = 0x1;\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in an event.\n */\nexport function spanToTraceContext(span: Span): TraceContext {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { data, op, parent_span_id, status, tags, origin } = spanToJSON(span);\n\n  return dropUndefinedKeys({\n    data,\n    op,\n    parent_span_id,\n    span_id,\n    status,\n    tags,\n    trace_id,\n    origin,\n  });\n}\n\n/**\n * Convert a Span to a Sentry trace header.\n */\nexport function spanToTraceHeader(span: Span): string {\n  const { traceId, spanId } = span.spanContext();\n  const sampled = spanIsSampled(span);\n  return generateSentryTraceHeader(traceId, spanId, sampled);\n}\n\n/**\n * Convert a span time input intp a timestamp in seconds.\n */\nexport function spanTimeInputToSeconds(input: SpanTimeInput | undefined): number {\n  if (typeof input === 'number') {\n    return ensureTimestampInSeconds(input);\n  }\n\n  if (Array.isArray(input)) {\n    // See {@link HrTime} for the array-based time format\n    return input[0] + input[1] / 1e9;\n  }\n\n  if (input instanceof Date) {\n    return ensureTimestampInSeconds(input.getTime());\n  }\n\n  return timestampInSeconds();\n}\n\n/**\n * Converts a timestamp to second, if it was in milliseconds, or keeps it as second.\n */\nfunction ensureTimestampInSeconds(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Convert a span to a JSON representation.\n * Note that all fields returned here are optional and need to be guarded against.\n *\n * Note: Because of this, we currently have a circular type dependency (which we opted out of in package.json).\n * This is not avoidable as we need `spanToJSON` in `spanUtils.ts`, which in turn is needed by `span.ts` for backwards compatibility.\n * And `spanToJSON` needs the Span class from `span.ts` to check here.\n * TODO v8: When we remove the deprecated stuff from `span.ts`, we can remove the circular dependency again.\n */\nexport function spanToJSON(span: Span): Partial<SpanJSON> {\n  if (spanIsSpanClass(span)) {\n    return span.getSpanJSON();\n  }\n\n  // Fallback: We also check for `.toJSON()` here...\n  // eslint-disable-next-line deprecation/deprecation\n  if (typeof span.toJSON === 'function') {\n    // eslint-disable-next-line deprecation/deprecation\n    return span.toJSON();\n  }\n\n  return {};\n}\n\n/**\n * Sadly, due to circular dependency checks we cannot actually import the Span class here and check for instanceof.\n * :( So instead we approximate this by checking if it has the `getSpanJSON` method.\n */\nfunction spanIsSpanClass(span: Span): span is SpanClass {\n  return typeof (span as SpanClass).getSpanJSON === 'function';\n}\n\n/**\n * Returns true if a span is sampled.\n * In most cases, you should just use `span.isRecording()` instead.\n * However, this has a slightly different semantic, as it also returns false if the span is finished.\n * So in the case where this distinction is important, use this method.\n */\nexport function spanIsSampled(span: Span): boolean {\n  // We align our trace flags with the ones OpenTelemetry use\n  // So we also check for sampled the same way they do.\n  const { traceFlags } = span.spanContext();\n  // eslint-disable-next-line no-bitwise\n  return Boolean(traceFlags & TRACE_FLAG_SAMPLED);\n}\n","export const SDK_VERSION = '7.112.2';\n","import {\n  captureException,\n  captureMessage,\n  convertIntegrationFnToClass,\n  defineIntegration,\n  getClient,\n  withScope,\n} from '@sentry/core';\nimport type { CaptureContext, Client, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport {\n  CONSOLE_LEVELS,\n  GLOBAL_OBJ,\n  addConsoleInstrumentationHandler,\n  addExceptionMechanism,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/utils';\n\ninterface CaptureConsoleOptions {\n  levels?: string[];\n}\n\nconst INTEGRATION_NAME = 'CaptureConsole';\n\nconst _captureConsoleIntegration = ((options: CaptureConsoleOptions = {}) => {\n  const levels = options.levels || CONSOLE_LEVELS;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (!('console' in GLOBAL_OBJ)) {\n        return;\n      }\n\n      addConsoleInstrumentationHandler(({ args, level }) => {\n        if (getClient() !== client || !levels.includes(level)) {\n          return;\n        }\n\n        consoleHandler(args, level);\n      });\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const captureConsoleIntegration = defineIntegration(_captureConsoleIntegration);\n\n/**\n * Send Console API calls as Sentry Events.\n * @deprecated Use `captureConsoleIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const CaptureConsole = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  captureConsoleIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }> & {\n  new (options?: { levels?: string[] }): Integration;\n};\n\nfunction consoleHandler(args: unknown[], level: string): void {\n  const captureContext: CaptureContext = {\n    level: severityLevelFromString(level),\n    extra: {\n      arguments: args,\n    },\n  };\n\n  withScope(scope => {\n    scope.addEventProcessor(event => {\n      event.logger = 'console';\n\n      addExceptionMechanism(event, {\n        handled: false,\n        type: 'console',\n      });\n\n      return event;\n    });\n\n    if (level === 'assert' && args[0] === false) {\n      const message = `Assertion failed: ${safeJoin(args.slice(1), ' ') || 'console.assert'}`;\n      scope.setExtra('arguments', args.slice(1));\n      captureMessage(message, captureContext);\n      return;\n    }\n\n    const error = args.find(arg => arg instanceof Error);\n    if (level === 'error' && error) {\n      captureException(error, captureContext);\n      return;\n    }\n\n    const message = safeJoin(args, ' ');\n    captureMessage(message, captureContext);\n  });\n}\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Integration, IntegrationClass, IntegrationFn, StackFrame } from '@sentry/types';\nimport { GLOBAL_OBJ, addContextToFrame, stripUrlQueryAndFragment } from '@sentry/utils';\n\nconst WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nconst DEFAULT_LINES_OF_CONTEXT = 7;\n\nconst INTEGRATION_NAME = 'ContextLines';\n\ninterface ContextLinesOptions {\n  /**\n   * Sets the number of context lines for each frame when loading a file.\n   * Defaults to 7.\n   *\n   * Set to 0 to disable loading and inclusion of source files.\n   **/\n  frameContextLines?: number;\n}\n\nconst _contextLinesIntegration = ((options: ContextLinesOptions = {}) => {\n  const contextLines = options.frameContextLines != null ? options.frameContextLines : DEFAULT_LINES_OF_CONTEXT;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event) {\n      return addSourceContext(event, contextLines);\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const contextLinesIntegration = defineIntegration(_contextLinesIntegration);\n\n/**\n * Collects source context lines around the lines of stackframes pointing to JS embedded in\n * the current page's HTML.\n *\n * This integration DOES NOT work for stack frames pointing to JS files that are loaded by the browser.\n * For frames pointing to files, context lines are added during ingestion and symbolication\n * by attempting to download the JS files to the Sentry backend.\n *\n * Use this integration if you have inline JS code in HTML pages that can't be accessed\n * by our backend (e.g. due to a login-protected page).\n *\n * @deprecated Use `contextLinesIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const ContextLines = convertIntegrationFnToClass(INTEGRATION_NAME, contextLinesIntegration) as IntegrationClass<\n  Integration & { processEvent: (event: Event) => Event }\n> & { new (options?: { frameContextLines?: number }): Integration };\n\n/**\n * Processes an event and adds context lines.\n */\nfunction addSourceContext(event: Event, contextLines: number): Event {\n  const doc = WINDOW.document;\n  const htmlFilename = WINDOW.location && stripUrlQueryAndFragment(WINDOW.location.href);\n  if (!doc || !htmlFilename) {\n    return event;\n  }\n\n  const exceptions = event.exception && event.exception.values;\n  if (!exceptions || !exceptions.length) {\n    return event;\n  }\n\n  const html = doc.documentElement.innerHTML;\n  if (!html) {\n    return event;\n  }\n\n  const htmlLines = ['<!DOCTYPE html>', '<html>', ...html.split('\\n'), '</html>'];\n\n  exceptions.forEach(exception => {\n    const stacktrace = exception.stacktrace;\n    if (stacktrace && stacktrace.frames) {\n      stacktrace.frames = stacktrace.frames.map(frame =>\n        applySourceContextToFrame(frame, htmlLines, htmlFilename, contextLines),\n      );\n    }\n  });\n\n  return event;\n}\n\n/**\n * Only exported for testing\n */\nexport function applySourceContextToFrame(\n  frame: StackFrame,\n  htmlLines: string[],\n  htmlFilename: string,\n  linesOfContext: number,\n): StackFrame {\n  if (frame.filename !== htmlFilename || !frame.lineno || !htmlLines.length) {\n    return frame;\n  }\n\n  addContextToFrame(htmlLines, frame, linesOfContext);\n\n  return frame;\n}\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Client, Event, EventHint, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport { consoleSandbox } from '@sentry/utils';\n\nconst INTEGRATION_NAME = 'Debug';\n\ninterface DebugOptions {\n  /** Controls whether console output created by this integration should be stringified. Default: `false` */\n  stringify?: boolean;\n  /** Controls whether a debugger should be launched before an event is sent. Default: `false` */\n  debugger?: boolean;\n}\n\nconst _debugIntegration = ((options: DebugOptions = {}) => {\n  const _options = {\n    debugger: false,\n    stringify: false,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (!client.on) {\n        return;\n      }\n\n      client.on('beforeSendEvent', (event: Event, hint?: EventHint) => {\n        if (_options.debugger) {\n          // eslint-disable-next-line no-debugger\n          debugger;\n        }\n\n        /* eslint-disable no-console */\n        consoleSandbox(() => {\n          if (_options.stringify) {\n            console.log(JSON.stringify(event, null, 2));\n            if (hint && Object.keys(hint).length) {\n              console.log(JSON.stringify(hint, null, 2));\n            }\n          } else {\n            console.log(event);\n            if (hint && Object.keys(hint).length) {\n              console.log(hint);\n            }\n          }\n        });\n        /* eslint-enable no-console */\n      });\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const debugIntegration = defineIntegration(_debugIntegration);\n\n/**\n * Integration to debug sent Sentry events.\n * This integration should not be used in production.\n *\n * @deprecated Use `debugIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Debug = convertIntegrationFnToClass(INTEGRATION_NAME, debugIntegration) as IntegrationClass<\n  Integration & { setup: (client: Client) => void }\n> & {\n  new (options?: {\n    stringify?: boolean;\n    debugger?: boolean;\n  }): Integration;\n};\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Exception, Integration, IntegrationClass, IntegrationFn, StackFrame } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\n\nconst INTEGRATION_NAME = 'Dedupe';\n\nconst _dedupeIntegration = (() => {\n  let previousEvent: Event | undefined;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(currentEvent) {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      // Juuust in case something goes wrong\n      try {\n        if (_shouldDropEvent(currentEvent, previousEvent)) {\n          DEBUG_BUILD && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n          return null;\n        }\n      } catch (_oO) {} // eslint-disable-line no-empty\n\n      return (previousEvent = currentEvent);\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const dedupeIntegration = defineIntegration(_dedupeIntegration);\n\n/**\n * Deduplication filter.\n * @deprecated Use `dedupeIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Dedupe = convertIntegrationFnToClass(INTEGRATION_NAME, dedupeIntegration) as IntegrationClass<\n  Integration & { processEvent: (event: Event) => Event }\n>;\n\n/** only exported for tests. */\nexport function _shouldDropEvent(currentEvent: Event, previousEvent?: Event): boolean {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isSameMessageEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameExceptionEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameStacktrace(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames as StackFrame[];\n  previousFrames = previousFrames as StackFrame[];\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _isSameFingerprint(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint as string[];\n  previousFingerprint = previousFingerprint as string[];\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\nfunction _getExceptionFromEvent(event: Event): Exception | undefined {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\nfunction _getFramesFromEvent(event: Event): StackFrame[] | undefined {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-expect-error Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type {\n  Contexts,\n  Event,\n  EventHint,\n  ExtendedError,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n} from '@sentry/types';\nimport { addNonEnumerableProperty, isError, isPlainObject, logger, normalize } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\n\nconst INTEGRATION_NAME = 'ExtraErrorData';\n\ninterface ExtraErrorDataOptions {\n  /**\n   * The object depth up to which to capture data on error objects.\n   */\n  depth: number;\n\n  /**\n   * Whether to capture error causes.\n   *\n   * More information: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/cause\n   */\n  captureErrorCause: boolean;\n}\n\nconst _extraErrorDataIntegration = ((options: Partial<ExtraErrorDataOptions> = {}) => {\n  const depth = options.depth || 3;\n\n  // TODO(v8): Flip the default for this option to true\n  const captureErrorCause = options.captureErrorCause || false;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event, hint) {\n      return _enhanceEventWithErrorData(event, hint, depth, captureErrorCause);\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const extraErrorDataIntegration = defineIntegration(_extraErrorDataIntegration);\n\n/**\n * Extract additional data for from original exceptions.\n * @deprecated Use `extraErrorDataIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const ExtraErrorData = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  extraErrorDataIntegration,\n) as IntegrationClass<Integration & { processEvent: (event: Event, hint: EventHint) => Event }> & {\n  new (\n    options?: Partial<{\n      depth: number;\n      captureErrorCause: boolean;\n    }>,\n  ): Integration;\n};\n\nfunction _enhanceEventWithErrorData(\n  event: Event,\n  hint: EventHint = {},\n  depth: number,\n  captureErrorCause: boolean,\n): Event {\n  if (!hint.originalException || !isError(hint.originalException)) {\n    return event;\n  }\n  const exceptionName = (hint.originalException as ExtendedError).name || hint.originalException.constructor.name;\n\n  const errorData = _extractErrorData(hint.originalException as ExtendedError, captureErrorCause);\n\n  if (errorData) {\n    const contexts: Contexts = {\n      ...event.contexts,\n    };\n\n    const normalizedErrorData = normalize(errorData, depth);\n\n    if (isPlainObject(normalizedErrorData)) {\n      // We mark the error data as \"already normalized\" here, because we don't want other normalization procedures to\n      // potentially truncate the data we just already normalized, with a certain depth setting.\n      addNonEnumerableProperty(normalizedErrorData, '__sentry_skip_normalization__', true);\n      contexts[exceptionName] = normalizedErrorData;\n    }\n\n    return {\n      ...event,\n      contexts,\n    };\n  }\n\n  return event;\n}\n\n/**\n * Extract extra information from the Error object\n */\nfunction _extractErrorData(error: ExtendedError, captureErrorCause: boolean): Record<string, unknown> | null {\n  // We are trying to enhance already existing event, so no harm done if it won't succeed\n  try {\n    const nativeKeys = [\n      'name',\n      'message',\n      'stack',\n      'line',\n      'column',\n      'fileName',\n      'lineNumber',\n      'columnNumber',\n      'toJSON',\n    ];\n\n    const extraErrorInfo: Record<string, unknown> = {};\n\n    // We want only enumerable properties, thus `getOwnPropertyNames` is redundant here, as we filter keys anyway.\n    for (const key of Object.keys(error)) {\n      if (nativeKeys.indexOf(key) !== -1) {\n        continue;\n      }\n      const value = error[key];\n      extraErrorInfo[key] = isError(value) ? value.toString() : value;\n    }\n\n    // Error.cause is a standard property that is non enumerable, we therefore need to access it separately.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/cause\n    if (captureErrorCause && error.cause !== undefined) {\n      extraErrorInfo.cause = isError(error.cause) ? error.cause.toString() : error.cause;\n    }\n\n    // Check if someone attached `toJSON` method to grab even more properties (eg. axios is doing that)\n    if (typeof error.toJSON === 'function') {\n      const serializedError = error.toJSON() as Record<string, unknown>;\n\n      for (const key of Object.keys(serializedError)) {\n        const value = serializedError[key];\n        extraErrorInfo[key] = isError(value) ? value.toString() : value;\n      }\n    }\n\n    return extraErrorInfo;\n  } catch (oO) {\n    DEBUG_BUILD && logger.error('Unable to extract extra data from the Error object:', oO);\n  }\n\n  return null;\n}\n","import {\n  captureEvent,\n  convertIntegrationFnToClass,\n  defineIntegration,\n  getClient,\n  isSentryRequestUrl,\n} from '@sentry/core';\nimport type {\n  Client,\n  Event as SentryEvent,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n  SentryWrappedXMLHttpRequest,\n} from '@sentry/types';\nimport {\n  GLOBAL_OBJ,\n  SENTRY_XHR_DATA_KEY,\n  addExceptionMechanism,\n  addFetchInstrumentationHandler,\n  addXhrInstrumentationHandler,\n  logger,\n  supportsNativeFetch,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\n\nexport type HttpStatusCodeRange = [number, number] | number;\nexport type HttpRequestTarget = string | RegExp;\n\nconst INTEGRATION_NAME = 'HttpClient';\n\ninterface HttpClientOptions {\n  /**\n   * HTTP status codes that should be considered failed.\n   * This array can contain tuples of `[begin, end]` (both inclusive),\n   * single status codes, or a combinations of both\n   *\n   * Example: [[500, 505], 507]\n   * Default: [[500, 599]]\n   */\n  failedRequestStatusCodes: HttpStatusCodeRange[];\n\n  /**\n   * Targets to track for failed requests.\n   * This array can contain strings or regular expressions.\n   *\n   * Example: ['http://localhost', /api\\/.*\\/]\n   * Default: [/.*\\/]\n   */\n  failedRequestTargets: HttpRequestTarget[];\n}\n\nconst _httpClientIntegration = ((options: Partial<HttpClientOptions> = {}) => {\n  const _options: HttpClientOptions = {\n    failedRequestStatusCodes: [[500, 599]],\n    failedRequestTargets: [/.*/],\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client): void {\n      _wrapFetch(client, _options);\n      _wrapXHR(client, _options);\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const httpClientIntegration = defineIntegration(_httpClientIntegration);\n\n/**\n * Create events for failed client side HTTP requests.\n * @deprecated Use `httpClientIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const HttpClient = convertIntegrationFnToClass(INTEGRATION_NAME, httpClientIntegration) as IntegrationClass<\n  Integration & { setup: (client: Client) => void }\n> & {\n  new (options?: {\n    failedRequestStatusCodes: HttpStatusCodeRange[];\n    failedRequestTargets: HttpRequestTarget[];\n  }): Integration;\n};\n\n/**\n * Interceptor function for fetch requests\n *\n * @param requestInfo The Fetch API request info\n * @param response The Fetch API response\n * @param requestInit The request init object\n */\nfunction _fetchResponseHandler(\n  options: HttpClientOptions,\n  requestInfo: RequestInfo,\n  response: Response,\n  requestInit?: RequestInit,\n): void {\n  if (_shouldCaptureResponse(options, response.status, response.url)) {\n    const request = _getRequest(requestInfo, requestInit);\n\n    let requestHeaders, responseHeaders, requestCookies, responseCookies;\n\n    if (_shouldSendDefaultPii()) {\n      [{ headers: requestHeaders, cookies: requestCookies }, { headers: responseHeaders, cookies: responseCookies }] = [\n        { cookieHeader: 'Cookie', obj: request },\n        { cookieHeader: 'Set-Cookie', obj: response },\n      ].map(({ cookieHeader, obj }) => {\n        const headers = _extractFetchHeaders(obj.headers);\n        let cookies;\n\n        try {\n          const cookieString = headers[cookieHeader] || headers[cookieHeader.toLowerCase()] || undefined;\n\n          if (cookieString) {\n            cookies = _parseCookieString(cookieString);\n          }\n        } catch (e) {\n          DEBUG_BUILD && logger.log(`Could not extract cookies from header ${cookieHeader}`);\n        }\n\n        return {\n          headers,\n          cookies,\n        };\n      });\n    }\n\n    const event = _createEvent({\n      url: request.url,\n      method: request.method,\n      status: response.status,\n      requestHeaders,\n      responseHeaders,\n      requestCookies,\n      responseCookies,\n    });\n\n    captureEvent(event);\n  }\n}\n\n/**\n * Interceptor function for XHR requests\n *\n * @param xhr The XHR request\n * @param method The HTTP method\n * @param headers The HTTP headers\n */\nfunction _xhrResponseHandler(\n  options: HttpClientOptions,\n  xhr: XMLHttpRequest,\n  method: string,\n  headers: Record<string, string>,\n): void {\n  if (_shouldCaptureResponse(options, xhr.status, xhr.responseURL)) {\n    let requestHeaders, responseCookies, responseHeaders;\n\n    if (_shouldSendDefaultPii()) {\n      try {\n        const cookieString = xhr.getResponseHeader('Set-Cookie') || xhr.getResponseHeader('set-cookie') || undefined;\n\n        if (cookieString) {\n          responseCookies = _parseCookieString(cookieString);\n        }\n      } catch (e) {\n        DEBUG_BUILD && logger.log('Could not extract cookies from response headers');\n      }\n\n      try {\n        responseHeaders = _getXHRResponseHeaders(xhr);\n      } catch (e) {\n        DEBUG_BUILD && logger.log('Could not extract headers from response');\n      }\n\n      requestHeaders = headers;\n    }\n\n    const event = _createEvent({\n      url: xhr.responseURL,\n      method,\n      status: xhr.status,\n      requestHeaders,\n      // Can't access request cookies from XHR\n      responseHeaders,\n      responseCookies,\n    });\n\n    captureEvent(event);\n  }\n}\n\n/**\n * Extracts response size from `Content-Length` header when possible\n *\n * @param headers\n * @returns The response size in bytes or undefined\n */\nfunction _getResponseSizeFromHeaders(headers?: Record<string, string>): number | undefined {\n  if (headers) {\n    const contentLength = headers['Content-Length'] || headers['content-length'];\n\n    if (contentLength) {\n      return parseInt(contentLength, 10);\n    }\n  }\n\n  return undefined;\n}\n\n/**\n * Creates an object containing cookies from the given cookie string\n *\n * @param cookieString The cookie string to parse\n * @returns The parsed cookies\n */\nfunction _parseCookieString(cookieString: string): Record<string, string> {\n  return cookieString.split('; ').reduce((acc: Record<string, string>, cookie: string) => {\n    const [key, value] = cookie.split('=');\n    acc[key] = value;\n    return acc;\n  }, {});\n}\n\n/**\n * Extracts the headers as an object from the given Fetch API request or response object\n *\n * @param headers The headers to extract\n * @returns The extracted headers as an object\n */\nfunction _extractFetchHeaders(headers: Headers): Record<string, string> {\n  const result: Record<string, string> = {};\n\n  headers.forEach((value, key) => {\n    result[key] = value;\n  });\n\n  return result;\n}\n\n/**\n * Extracts the response headers as an object from the given XHR object\n *\n * @param xhr The XHR object to extract the response headers from\n * @returns The response headers as an object\n */\nfunction _getXHRResponseHeaders(xhr: XMLHttpRequest): Record<string, string> {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc: Record<string, string>, line: string) => {\n    const [key, value] = line.split(': ');\n    acc[key] = value;\n    return acc;\n  }, {});\n}\n\n/**\n * Checks if the given target url is in the given list of targets\n *\n * @param target The target url to check\n * @returns true if the target url is in the given list of targets, false otherwise\n */\nfunction _isInGivenRequestTargets(\n  failedRequestTargets: HttpClientOptions['failedRequestTargets'],\n  target: string,\n): boolean {\n  return failedRequestTargets.some((givenRequestTarget: HttpRequestTarget) => {\n    if (typeof givenRequestTarget === 'string') {\n      return target.includes(givenRequestTarget);\n    }\n\n    return givenRequestTarget.test(target);\n  });\n}\n\n/**\n * Checks if the given status code is in the given range\n *\n * @param status The status code to check\n * @returns true if the status code is in the given range, false otherwise\n */\nfunction _isInGivenStatusRanges(\n  failedRequestStatusCodes: HttpClientOptions['failedRequestStatusCodes'],\n  status: number,\n): boolean {\n  return failedRequestStatusCodes.some((range: HttpStatusCodeRange) => {\n    if (typeof range === 'number') {\n      return range === status;\n    }\n\n    return status >= range[0] && status <= range[1];\n  });\n}\n\n/**\n * Wraps `fetch` function to capture request and response data\n */\nfunction _wrapFetch(client: Client, options: HttpClientOptions): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  addFetchInstrumentationHandler(handlerData => {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { response, args } = handlerData;\n    const [requestInfo, requestInit] = args as [RequestInfo, RequestInit | undefined];\n\n    if (!response) {\n      return;\n    }\n\n    _fetchResponseHandler(options, requestInfo, response as Response, requestInit);\n  });\n}\n\n/**\n * Wraps XMLHttpRequest to capture request and response data\n */\nfunction _wrapXHR(client: Client, options: HttpClientOptions): void {\n  if (!('XMLHttpRequest' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  addXhrInstrumentationHandler(handlerData => {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const xhr = handlerData.xhr as SentryWrappedXMLHttpRequest & XMLHttpRequest;\n\n    const sentryXhrData = xhr[SENTRY_XHR_DATA_KEY];\n\n    if (!sentryXhrData) {\n      return;\n    }\n\n    const { method, request_headers: headers } = sentryXhrData;\n\n    try {\n      _xhrResponseHandler(options, xhr, method, headers);\n    } catch (e) {\n      DEBUG_BUILD && logger.warn('Error while extracting response event form XHR response', e);\n    }\n  });\n}\n\n/**\n * Checks whether to capture given response as an event\n *\n * @param status response status code\n * @param url response url\n */\nfunction _shouldCaptureResponse(options: HttpClientOptions, status: number, url: string): boolean {\n  return (\n    _isInGivenStatusRanges(options.failedRequestStatusCodes, status) &&\n    _isInGivenRequestTargets(options.failedRequestTargets, url) &&\n    !isSentryRequestUrl(url, getClient())\n  );\n}\n\n/**\n * Creates a synthetic Sentry event from given response data\n *\n * @param data response data\n * @returns event\n */\nfunction _createEvent(data: {\n  url: string;\n  method: string;\n  status: number;\n  responseHeaders?: Record<string, string>;\n  responseCookies?: Record<string, string>;\n  requestHeaders?: Record<string, string>;\n  requestCookies?: Record<string, string>;\n}): SentryEvent {\n  const message = `HTTP Client Error with status code: ${data.status}`;\n\n  const event: SentryEvent = {\n    message,\n    exception: {\n      values: [\n        {\n          type: 'Error',\n          value: message,\n        },\n      ],\n    },\n    request: {\n      url: data.url,\n      method: data.method,\n      headers: data.requestHeaders,\n      cookies: data.requestCookies,\n    },\n    contexts: {\n      response: {\n        status_code: data.status,\n        headers: data.responseHeaders,\n        cookies: data.responseCookies,\n        body_size: _getResponseSizeFromHeaders(data.responseHeaders),\n      },\n    },\n  };\n\n  addExceptionMechanism(event, {\n    type: 'http.client',\n    handled: false,\n  });\n\n  return event;\n}\n\nfunction _getRequest(requestInfo: RequestInfo, requestInit?: RequestInit): Request {\n  if (!requestInit && requestInfo instanceof Request) {\n    return requestInfo;\n  }\n\n  // If both are set, we try to construct a new Request with the given arguments\n  // However, if e.g. the original request has a `body`, this will throw an error because it was already accessed\n  // In this case, as a fallback, we just use the original request - using both is rather an edge case\n  if (requestInfo instanceof Request && requestInfo.bodyUsed) {\n    return requestInfo;\n  }\n\n  return new Request(requestInfo, requestInit);\n}\n\nfunction _shouldSendDefaultPii(): boolean {\n  const client = getClient();\n  return client ? Boolean(client.getOptions().sendDefaultPii) : false;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable deprecation/deprecation */\nimport type { Event, EventProcessor, Hub, Integration } from '@sentry/types';\nimport { GLOBAL_OBJ, logger, normalize, uuid4 } from '@sentry/utils';\nimport * as localForage from 'localforage';\n\nimport { DEBUG_BUILD } from './debug-build';\n\nconst WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\ntype LocalForage = {\n  setItem<T>(key: string, value: T, callback?: (err: any, value: T) => void): Promise<T>;\n  iterate<T, U>(\n    iteratee: (value: T, key: string, iterationNumber: number) => U,\n    callback?: (err: any, result: U) => void,\n  ): Promise<U>;\n  removeItem(key: string, callback?: (err: any) => void): Promise<void>;\n  length(): Promise<number>;\n};\n\nexport type Item = { key: string; value: Event };\n\n/**\n * cache offline errors and send when connected\n * @deprecated The offline integration has been deprecated in favor of the offline transport wrapper.\n *\n * http://docs.sentry.io/platforms/javascript/configuration/transports/#offline-caching\n */\nexport class Offline implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Offline';\n\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string;\n\n  /**\n   * the current hub instance\n   */\n  public hub?: Hub;\n\n  /**\n   * maximum number of events to store while offline\n   */\n  public maxStoredEvents: number;\n\n  /**\n   * event cache\n   */\n  public offlineEventStore: LocalForage;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { maxStoredEvents?: number } = {}) {\n    this.name = Offline.id;\n\n    this.maxStoredEvents = options.maxStoredEvents || 30; // set a reasonable default\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    this.offlineEventStore = localForage.createInstance({\n      name: 'sentry/offlineEventStore',\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    this.hub = getCurrentHub();\n\n    if ('addEventListener' in WINDOW) {\n      WINDOW.addEventListener('online', () => {\n        void this._sendEvents().catch(() => {\n          DEBUG_BUILD && logger.warn('could not send cached events');\n        });\n      });\n    }\n\n    const eventProcessor: EventProcessor = event => {\n      // eslint-disable-next-line deprecation/deprecation\n      if (this.hub && this.hub.getIntegration(Offline)) {\n        // cache if we are positively offline\n        if ('navigator' in WINDOW && 'onLine' in WINDOW.navigator && !WINDOW.navigator.onLine) {\n          DEBUG_BUILD && logger.log('Event dropped due to being a offline - caching instead');\n\n          void this._cacheEvent(event)\n            .then((_event: Event): Promise<void> => this._enforceMaxEvents())\n            .catch((_error): void => {\n              DEBUG_BUILD && logger.warn('could not cache event while offline');\n            });\n\n          // return null on success or failure, because being offline will still result in an error\n          return null;\n        }\n      }\n\n      return event;\n    };\n\n    eventProcessor.id = this.name;\n    addGlobalEventProcessor(eventProcessor);\n\n    // if online now, send any events stored in a previous offline session\n    if ('navigator' in WINDOW && 'onLine' in WINDOW.navigator && WINDOW.navigator.onLine) {\n      void this._sendEvents().catch(() => {\n        DEBUG_BUILD && logger.warn('could not send cached events');\n      });\n    }\n  }\n\n  /**\n   * cache an event to send later\n   * @param event an event\n   */\n  private async _cacheEvent(event: Event): Promise<Event> {\n    return this.offlineEventStore.setItem<Event>(uuid4(), normalize(event));\n  }\n\n  /**\n   * purge excess events if necessary\n   */\n  private async _enforceMaxEvents(): Promise<void> {\n    const events: Array<{ event: Event; cacheKey: string }> = [];\n\n    return this.offlineEventStore\n      .iterate<Event, void>((event: Event, cacheKey: string, _index: number): void => {\n        // aggregate events\n        events.push({ cacheKey, event });\n      })\n      .then(\n        (): Promise<void> =>\n          // this promise resolves when the iteration is finished\n          this._purgeEvents(\n            // purge all events past maxStoredEvents in reverse chronological order\n            events\n              .sort((a, b) => (b.event.timestamp || 0) - (a.event.timestamp || 0))\n              .slice(this.maxStoredEvents < events.length ? this.maxStoredEvents : events.length)\n              .map(event => event.cacheKey),\n          ),\n      )\n      .catch((_error): void => {\n        DEBUG_BUILD && logger.warn('could not enforce max events');\n      });\n  }\n\n  /**\n   * purge event from cache\n   */\n  private async _purgeEvent(cacheKey: string): Promise<void> {\n    return this.offlineEventStore.removeItem(cacheKey);\n  }\n\n  /**\n   * purge events from cache\n   */\n  private async _purgeEvents(cacheKeys: string[]): Promise<void> {\n    // trail with .then to ensure the return type as void and not void|void[]\n    return Promise.all(cacheKeys.map(cacheKey => this._purgeEvent(cacheKey))).then();\n  }\n\n  /**\n   * send all events\n   */\n  private async _sendEvents(): Promise<void> {\n    return this.offlineEventStore.iterate<Event, void>((event: Event, cacheKey: string, _index: number): void => {\n      if (this.hub) {\n        this.hub.captureEvent(event);\n\n        void this._purgeEvent(cacheKey).catch((_error): void => {\n          DEBUG_BUILD && logger.warn('could not purge event from cache');\n        });\n      } else {\n        DEBUG_BUILD && logger.warn('no hub found - could not send cached event');\n      }\n    });\n  }\n}\n","import { convertIntegrationFnToClass } from '@sentry/core';\nimport type { Event, Integration, IntegrationClass, IntegrationFn, StackFrame } from '@sentry/types';\n\nconst INTEGRATION_NAME = 'Transaction';\n\nconst transactionIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event) {\n      const frames = _getFramesFromEvent(event);\n\n      // use for loop so we don't have to reverse whole frames array\n      for (let i = frames.length - 1; i >= 0; i--) {\n        const frame = frames[i];\n\n        if (frame.in_app === true) {\n          event.transaction = _getTransaction(frame);\n          break;\n        }\n      }\n\n      return event;\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Add node transaction to the event.\n * @deprecated This integration will be removed in v8.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Transaction = convertIntegrationFnToClass(INTEGRATION_NAME, transactionIntegration) as IntegrationClass<\n  Integration & { processEvent: (event: Event) => Event }\n>;\n\nfunction _getFramesFromEvent(event: Event): StackFrame[] {\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  return (exception && exception.stacktrace && exception.stacktrace.frames) || [];\n}\n\nfunction _getTransaction(frame: StackFrame): string {\n  return frame.module || frame.function ? `${frame.module || '?'}/${frame.function || '?'}` : '<unknown>';\n}\n","import { captureMessage, convertIntegrationFnToClass, defineIntegration, getClient, withScope } from '@sentry/core';\nimport type { Client, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport { GLOBAL_OBJ, supportsReportingObserver } from '@sentry/utils';\n\nconst WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nconst INTEGRATION_NAME = 'ReportingObserver';\n\ninterface Report {\n  [key: string]: unknown;\n  type: ReportTypes;\n  url: string;\n  body?: ReportBody;\n}\n\ntype ReportTypes = 'crash' | 'deprecation' | 'intervention';\n\ntype ReportBody = CrashReportBody | DeprecationReportBody | InterventionReportBody;\n\ninterface CrashReportBody {\n  [key: string]: unknown;\n  crashId: string;\n  reason?: string;\n}\n\ninterface DeprecationReportBody {\n  [key: string]: unknown;\n  id: string;\n  anticipatedRemoval?: Date;\n  message: string;\n  sourceFile?: string;\n  lineNumber?: number;\n  columnNumber?: number;\n}\n\ninterface InterventionReportBody {\n  [key: string]: unknown;\n  id: string;\n  message: string;\n  sourceFile?: string;\n  lineNumber?: number;\n  columnNumber?: number;\n}\n\ninterface ReportingObserverOptions {\n  types?: ReportTypes[];\n}\n\nconst SETUP_CLIENTS = new WeakMap<Client, boolean>();\n\nconst _reportingObserverIntegration = ((options: ReportingObserverOptions = {}) => {\n  const types = options.types || ['crash', 'deprecation', 'intervention'];\n\n  /** Handler for the reporting observer. */\n  function handler(reports: Report[]): void {\n    if (!SETUP_CLIENTS.has(getClient() as Client)) {\n      return;\n    }\n\n    for (const report of reports) {\n      withScope(scope => {\n        scope.setExtra('url', report.url);\n\n        const label = `ReportingObserver [${report.type}]`;\n        let details = 'No details available';\n\n        if (report.body) {\n          // Object.keys doesn't work on ReportBody, as all properties are inheirted\n          const plainBody: {\n            [key: string]: unknown;\n          } = {};\n\n          // eslint-disable-next-line guard-for-in\n          for (const prop in report.body) {\n            plainBody[prop] = report.body[prop];\n          }\n\n          scope.setExtra('body', plainBody);\n\n          if (report.type === 'crash') {\n            const body = report.body as CrashReportBody;\n            // A fancy way to create a message out of crashId OR reason OR both OR fallback\n            details = [body.crashId || '', body.reason || ''].join(' ').trim() || details;\n          } else {\n            const body = report.body as DeprecationReportBody | InterventionReportBody;\n            details = body.message || details;\n          }\n        }\n\n        captureMessage(`${label}: ${details}`);\n      });\n    }\n  }\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      if (!supportsReportingObserver()) {\n        return;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n      const observer = new (WINDOW as any).ReportingObserver(handler, {\n        buffered: true,\n        types,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      observer.observe();\n    },\n\n    setup(client): void {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const reportingObserverIntegration = defineIntegration(_reportingObserverIntegration);\n\n/**\n * Reporting API integration - https://w3c.github.io/reporting/\n * @deprecated Use `reportingObserverIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const ReportingObserver = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  reportingObserverIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }> & {\n  new (options?: {\n    types?: ReportTypes[];\n  }): Integration;\n};\n","// Slightly modified (no IE8 support, ES6) and transcribed to TypeScript\n// https://github.com/calvinmetcalf/rollup-plugin-node-builtins/blob/63ab8aacd013767445ca299e468d9a60a95328d7/src/es6/path.js\n//\n// Copyright Joyent, Inc.and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/** JSDoc */\nfunction normalizeArray(parts: string[], allowAboveRoot?: boolean): string[] {\n  // if the path tries to go above the root, `up` ends up > 0\n  let up = 0;\n  for (let i = parts.length - 1; i >= 0; i--) {\n    const last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nconst splitPathRe = /^(\\S+:\\\\|\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^/\\\\]+?|)(\\.[^./\\\\]*|))(?:[/\\\\]*)$/;\n/** JSDoc */\nfunction splitPath(filename: string): string[] {\n  // Truncate files names greater than 1024 characters to avoid regex dos\n  // https://github.com/getsentry/sentry-javascript/pull/8737#discussion_r1285719172\n  const truncated = filename.length > 1024 ? `<truncated>${filename.slice(-1024)}` : filename;\n  const parts = splitPathRe.exec(truncated);\n  return parts ? parts.slice(1) : [];\n}\n\n// path.resolve([from ...], to)\n// posix version\n/** JSDoc */\nexport function resolve(...args: string[]): string {\n  let resolvedPath = '';\n  let resolvedAbsolute = false;\n\n  for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    const path = i >= 0 ? args[i] : '/';\n\n    // Skip empty entries\n    if (!path) {\n      continue;\n    }\n\n    resolvedPath = `${path}/${resolvedPath}`;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(\n    resolvedPath.split('/').filter(p => !!p),\n    !resolvedAbsolute,\n  ).join('/');\n\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}\n\n/** JSDoc */\nfunction trim(arr: string[]): string[] {\n  let start = 0;\n  for (; start < arr.length; start++) {\n    if (arr[start] !== '') {\n      break;\n    }\n  }\n\n  let end = arr.length - 1;\n  for (; end >= 0; end--) {\n    if (arr[end] !== '') {\n      break;\n    }\n  }\n\n  if (start > end) {\n    return [];\n  }\n  return arr.slice(start, end - start + 1);\n}\n\n// path.relative(from, to)\n// posix version\n/** JSDoc */\nexport function relative(from: string, to: string): string {\n  /* eslint-disable no-param-reassign */\n  from = resolve(from).slice(1);\n  to = resolve(to).slice(1);\n  /* eslint-enable no-param-reassign */\n\n  const fromParts = trim(from.split('/'));\n  const toParts = trim(to.split('/'));\n\n  const length = Math.min(fromParts.length, toParts.length);\n  let samePartsLength = length;\n  for (let i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  let outputParts = [];\n  for (let i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\n// path.normalize(path)\n// posix version\n/** JSDoc */\nexport function normalizePath(path: string): string {\n  const isPathAbsolute = isAbsolute(path);\n  const trailingSlash = path.slice(-1) === '/';\n\n  // Normalize the path\n  let normalizedPath = normalizeArray(\n    path.split('/').filter(p => !!p),\n    !isPathAbsolute,\n  ).join('/');\n\n  if (!normalizedPath && !isPathAbsolute) {\n    normalizedPath = '.';\n  }\n  if (normalizedPath && trailingSlash) {\n    normalizedPath += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + normalizedPath;\n}\n\n// posix version\n/** JSDoc */\nexport function isAbsolute(path: string): boolean {\n  return path.charAt(0) === '/';\n}\n\n// posix version\n/** JSDoc */\nexport function join(...args: string[]): string {\n  return normalizePath(args.join('/'));\n}\n\n/** JSDoc */\nexport function dirname(path: string): string {\n  const result = splitPath(path);\n  const root = result[0];\n  let dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.slice(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\n/** JSDoc */\nexport function basename(path: string, ext?: string): string {\n  let f = splitPath(path)[2];\n  if (ext && f.slice(ext.length * -1) === ext) {\n    f = f.slice(0, f.length - ext.length);\n  }\n  return f;\n}\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Integration, IntegrationClass, IntegrationFn, StackFrame, Stacktrace } from '@sentry/types';\nimport { basename, relative } from '@sentry/utils';\n\ntype StackFrameIteratee = (frame: StackFrame) => StackFrame;\n\nconst INTEGRATION_NAME = 'RewriteFrames';\n\ninterface RewriteFramesOptions {\n  root?: string;\n  prefix?: string;\n  iteratee?: StackFrameIteratee;\n}\n\nconst _rewriteFramesIntegration = ((options: RewriteFramesOptions = {}) => {\n  const root = options.root;\n  const prefix = options.prefix || 'app:///';\n\n  const iteratee: StackFrameIteratee =\n    options.iteratee ||\n    ((frame: StackFrame) => {\n      if (!frame.filename) {\n        return frame;\n      }\n      // Determine if this is a Windows frame by checking for a Windows-style prefix such as `C:\\`\n      const isWindowsFrame =\n        /^[a-zA-Z]:\\\\/.test(frame.filename) ||\n        // or the presence of a backslash without a forward slash (which are not allowed on Windows)\n        (frame.filename.includes('\\\\') && !frame.filename.includes('/'));\n      // Check if the frame filename begins with `/`\n      const startsWithSlash = /^\\//.test(frame.filename);\n      if (isWindowsFrame || startsWithSlash) {\n        const filename = isWindowsFrame\n          ? frame.filename\n              .replace(/^[a-zA-Z]:/, '') // remove Windows-style prefix\n              .replace(/\\\\/g, '/') // replace all `\\\\` instances with `/`\n          : frame.filename;\n        const base = root ? relative(root, filename) : basename(filename);\n        frame.filename = `${prefix}${base}`;\n      }\n      return frame;\n    });\n\n  /** Process an exception event. */\n  function _processExceptionsEvent(event: Event): Event {\n    try {\n      return {\n        ...event,\n        exception: {\n          ...event.exception,\n          // The check for this is performed inside `process` call itself, safe to skip here\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          values: event.exception!.values!.map(value => ({\n            ...value,\n            ...(value.stacktrace && { stacktrace: _processStacktrace(value.stacktrace) }),\n          })),\n        },\n      };\n    } catch (_oO) {\n      return event;\n    }\n  }\n\n  /** Process a stack trace. */\n  function _processStacktrace(stacktrace?: Stacktrace): Stacktrace {\n    return {\n      ...stacktrace,\n      frames: stacktrace && stacktrace.frames && stacktrace.frames.map(f => iteratee(f)),\n    };\n  }\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(originalEvent) {\n      let processedEvent = originalEvent;\n\n      if (originalEvent.exception && Array.isArray(originalEvent.exception.values)) {\n        processedEvent = _processExceptionsEvent(processedEvent);\n      }\n\n      return processedEvent;\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const rewriteFramesIntegration = defineIntegration(_rewriteFramesIntegration);\n\n/**\n * Rewrite event frames paths.\n * @deprecated Use `rewriteFramesIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const RewriteFrames = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  rewriteFramesIntegration,\n) as IntegrationClass<Integration & { processEvent: (event: Event) => Event }> & {\n  new (options?: { root?: string; prefix?: string; iteratee?: StackFrameIteratee }): Integration;\n};\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\n\nconst INTEGRATION_NAME = 'SessionTiming';\n\nconst _sessionTimingIntegration = (() => {\n  const startTime = Date.now();\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event) {\n      const now = Date.now();\n\n      return {\n        ...event,\n        extra: {\n          ...event.extra,\n          ['session:start']: startTime,\n          ['session:duration']: now - startTime,\n          ['session:end']: now,\n        },\n      };\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const sessionTimingIntegration = defineIntegration(_sessionTimingIntegration);\n\n/**\n * This function adds duration since Sentry was initialized till the time event was sent.\n * @deprecated Use `sessionTimingIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const SessionTiming = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  sessionTimingIntegration,\n) as IntegrationClass<Integration & { processEvent: (event: Event) => Event }>;\n","import type { DynamicSamplingContext } from '@sentry/types';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { isString } from './is';\nimport { logger } from './logger';\n\nexport const BAGGAGE_HEADER_NAME = 'baggage';\n\nexport const SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nexport const SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nexport const MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nexport function baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader: string | string[] | number | null | undefined | boolean,\n): Partial<DynamicSamplingContext> | undefined {\n  if (!isString(baggageHeader) && !Array.isArray(baggageHeader)) {\n    return undefined;\n  }\n\n  // Intermediary object to store baggage key value pairs of incoming baggage headers on.\n  // It is later used to read Sentry-DSC-values from.\n  let baggageObject: Readonly<Record<string, string>> = {};\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    baggageObject = baggageHeader.reduce<Record<string, string>>((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      for (const key of Object.keys(currBaggageObject)) {\n        acc[key] = currBaggageObject[key];\n      }\n      return acc;\n    }, {});\n  } else {\n    // Return undefined if baggage header is an empty string (technically an empty baggage header is not spec conform but\n    // this is how we choose to handle it)\n    if (!baggageHeader) {\n      return undefined;\n    }\n\n    baggageObject = baggageHeaderToObject(baggageHeader);\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce<Record<string, string>>((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext as Partial<DynamicSamplingContext>;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nexport function dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext?: Partial<DynamicSamplingContext>,\n): string | undefined {\n  if (!dynamicSamplingContext) {\n    return undefined;\n  }\n\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce<Record<string, string>>(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader: string): Record<string, string> {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry => baggageEntry.split('=').map(keyOrValue => decodeURIComponent(keyOrValue.trim())))\n    .reduce<Record<string, string>>((acc, [key, value]) => {\n      acc[key] = value;\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nfunction objectToBaggageHeader(object: Record<string, string>): string | undefined {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n","import { isString } from './is';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\ntype SimpleNode = {\n  parentNode: SimpleNode;\n} | null;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(\n  elem: unknown,\n  options: string[] | { keyAttrs?: string[]; maxStringLength?: number } = {},\n): string {\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown, keyAttrs?: string[]): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  // @ts-expect-error WINDOW has HTMLElement\n  if (WINDOW.HTMLElement) {\n    // If using the component name annotation plugin, this value may be available on the DOM node\n    if (elem instanceof HTMLElement && elem.dataset && elem.dataset['sentryComponent']) {\n      return elem.dataset['sentryComponent'];\n    }\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getDomElement<E = any>(selector: string): E | null {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) as unknown as E;\n  }\n  return null;\n}\n\n/**\n * Given a DOM element, traverses up the tree until it finds the first ancestor node\n * that has the `data-sentry-component` attribute. This attribute is added at build-time\n * by projects that have the component name annotation plugin installed.\n *\n * @returns a string representation of the component for the provided DOM element, or `null` if not found\n */\nexport function getComponentName(elem: unknown): string | null {\n  // @ts-expect-error WINDOW has HTMLElement\n  if (!WINDOW.HTMLElement) {\n    return null;\n  }\n\n  let currentElem = elem as SimpleNode;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {\n    if (!currentElem) {\n      return null;\n    }\n\n    if (currentElem instanceof HTMLElement && currentElem.dataset['sentryComponent']) {\n      return currentElem.dataset['sentryComponent'];\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return null;\n}\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\ndeclare const __SENTRY_BROWSER_BUNDLE__: boolean | undefined;\n\nexport type SdkSource = 'npm' | 'cdn' | 'loader';\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle(): boolean {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nexport function getSDKSource(): SdkSource {\n  // @ts-expect-error __SENTRY_SDK_SOURCE__ is injected by rollup during build process\n  return __SENTRY_SDK_SOURCE__;\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport { logger } from '../logger';\nimport { getFunctionName } from '../stacktrace';\n\nexport type InstrumentHandlerType = 'console' | 'dom' | 'fetch' | 'history' | 'xhr' | 'error' | 'unhandledrejection';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type InstrumentHandlerCallback = (data: any) => void;\n\n// We keep the handlers globally\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Add a handler function. */\nexport function addHandler(type: InstrumentHandlerType, handler: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nexport function resetInstrumentationHandlers(): void {\n  Object.keys(handlers).forEach(key => {\n    handlers[key as InstrumentHandlerType] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nexport function maybeInstrument(type: InstrumentHandlerType, instrumentFn: () => void): void {\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nexport function triggerHandlers(type: InstrumentHandlerType, data: unknown): void {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { ConsoleLevel, HandlerDataConsole } from '@sentry/types';\n\nimport { CONSOLE_LEVELS, originalConsoleMethods } from '../logger';\nimport { fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addConsoleInstrumentationHandler(handler: (data: HandlerDataConsole) => void): void {\n  const type = 'console';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole(): void {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level: ConsoleLevel): void {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod: () => any): Function {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args: any[]): void {\n        const handlerData: HandlerDataConsole = { args, level };\n        triggerHandlers('console', handlerData);\n\n        const log = originalConsoleMethods[level];\n        log && log.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataFetch } from '@sentry/types';\n\nimport { fill } from '../object';\nimport { supportsNativeFetch } from '../supports';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\ntype FetchResource = string | { toString(): string } | { url: string };\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addFetchInstrumentationHandler(handler: (data: HandlerDataFetch) => void): void {\n  const type = 'fetch';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentFetch);\n}\n\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(GLOBAL_OBJ, 'fetch', function (originalFetch: () => void): () => void {\n    return function (...args: any[]): void {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData: HandlerDataFetch = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(GLOBAL_OBJ, args).then(\n        (response: Response) => {\n          const finishedHandlerData: HandlerDataFetch = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          };\n\n          triggerHandlers('fetch', finishedHandlerData);\n          return response;\n        },\n        (error: Error) => {\n          const erroredHandlerData: HandlerDataFetch = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          };\n\n          triggerHandlers('fetch', erroredHandlerData);\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp<T extends string>(obj: unknown, prop: T): obj is Record<string, string> {\n  return !!obj && typeof obj === 'object' && !!(obj as Record<string, string>)[prop];\n}\n\nfunction getUrlFromResource(resource: FetchResource): string {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nexport function parseFetchArgs(fetchArgs: unknown[]): { method: string; url: string } {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs as [FetchResource, object];\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg as FetchResource),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataXhr, SentryWrappedXMLHttpRequest, WrappedFunction } from '@sentry/types';\n\nimport { isString } from '../is';\nimport { fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\nexport const SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addXhrInstrumentationHandler(handler: (data: HandlerDataXhr) => void): void {\n  const type = 'xhr';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nexport function instrumentXHR(): void {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (!(WINDOW as any).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const startTimestamp = Date.now();\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = isString(args[0]) ? args[0].toUpperCase() : undefined;\n      const url = parseUrl(args[1]);\n\n      if (!method || !url) {\n        return originalOpen.apply(this, args);\n      }\n\n      this[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler: () => void = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          const handlerData: HandlerDataXhr = {\n            args: [method, url],\n            endTimestamp: Date.now(),\n            startTimestamp,\n            xhr: this,\n          };\n          triggerHandlers('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original: WrappedFunction): Function {\n          return function (this: SentryWrappedXMLHttpRequest, ...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      fill(this, 'setRequestHeader', function (original: WrappedFunction): Function {\n        return function (this: SentryWrappedXMLHttpRequest, ...setRequestHeaderArgs: unknown[]): void {\n          const [header, value] = setRequestHeaderArgs;\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && isString(header) && isString(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return originalSend.apply(this, args);\n      }\n\n      if (args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      const handlerData: HandlerDataXhr = {\n        args: [sentryXhrData.method, sentryXhrData.url],\n        startTimestamp: Date.now(),\n        xhr: this,\n      };\n      triggerHandlers('xhr', handlerData);\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nfunction parseUrl(url: string | unknown): string | undefined {\n  if (isString(url)) {\n    return url;\n  }\n\n  try {\n    // url can be a string or URL\n    // but since URL is not available in IE11, we do not check for it,\n    // but simply assume it is an URL and return `toString()` from it (which returns the full URL)\n    // If that fails, we just return undefined\n    return (url as URL).toString();\n  } catch {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport type { ParameterizedString, PolymorphicEvent, Primitive } from '@sentry/types';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): wat is Error {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat: unknown, className: string): boolean {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): wat is string {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isParameterizedString(wat: unknown): wat is ParameterizedString {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): wat is PolymorphicEvent {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isNaN(wat: unknown): boolean {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\ninterface VueViewModel {\n  // Vue3\n  __isVue?: boolean;\n  // Vue2\n  _isVue?: boolean;\n}\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isVueViewModel(wat: unknown): boolean {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat as VueViewModel).__isVue || (wat as VueViewModel)._isVue));\n}\n","import type { ConsoleLevel } from '@sentry/types';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { GLOBAL_OBJ } from './worldwide';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nexport const CONSOLE_LEVELS: readonly ConsoleLevel[] = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] as const;\n\ntype LoggerMethod = (...args: unknown[]) => void;\ntype LoggerConsoleMethods = Record<ConsoleLevel, LoggerMethod>;\n\n/** This may be mutated by the console instrumentation. */\nexport const originalConsoleMethods: {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key in ConsoleLevel]?: (...args: any[]) => void;\n} = {};\n\n/** JSDoc */\ninterface Logger extends LoggerConsoleMethods {\n  disable(): void;\n  enable(): void;\n  isEnabled(): boolean;\n}\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox<T>(callback: () => T): T {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = GLOBAL_OBJ.console as Console;\n  const wrappedFuncs: Partial<LoggerConsoleMethods> = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) as ConsoleLevel[];\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] as LoggerMethod;\n    wrappedFuncs[level] = console[level] as LoggerMethod | undefined;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] as LoggerMethod;\n    });\n  }\n}\n\nfunction makeLogger(): Logger {\n  let enabled = false;\n  const logger: Partial<Logger> = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n    isEnabled: () => enabled,\n  };\n\n  if (DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args: any[]) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger as Logger;\n}\n\nexport const logger = makeLogger();\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { Event, Exception, Mechanism, StackFrame } from '@sentry/types';\n\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\nimport { GLOBAL_OBJ } from './worldwide';\n\ninterface CryptoInternal {\n  getRandomValues(array: Uint8Array): Uint8Array;\n  randomUUID?(): string;\n}\n\n/** An interface for common properties on global */\ninterface CryptoGlobal {\n  msCrypto?: CryptoInternal;\n  crypto?: CryptoInternal;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const gbl = GLOBAL_OBJ as typeof GLOBAL_OBJ & CryptoGlobal;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = (): number => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        return typedArray[0];\n      };\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] as unknown as string) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c as unknown as number) ^ ((getRandomByte() & 15) >> ((c as unknown as number) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception as any).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception as { [key: string]: unknown }, '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nexport function arrayify<T = unknown>(maybeArray: T | T[]): T[] {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n","/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\nimport { isBrowserBundle } from './env';\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nexport function loadModule<T>(moduleName: string): T | undefined {\n  let mod: T | undefined;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) as T;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n","import type { Primitive } from '@sentry/types';\n\nimport { isNaN, isSyntheticEvent, isVueViewModel } from './is';\nimport type { MemoFunc } from './memo';\nimport { memoBuilder } from './memo';\nimport { convertToPlainObject } from './object';\nimport { getFunctionName } from './stacktrace';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n// This is a hack to placate TS, relying on the fact that technically, arrays are objects with integer keys. Normally we\n// think of those keys as actual numbers, but `arr['0']` turns out to work just as well as `arr[0]`, and doing it this\n// way lets us use a single type in the places where behave as if we are only dealing with objects, even if some of them\n// might be arrays.\ntype ObjOrArray<T> = { [key: string]: T };\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function normalize(input: unknown, depth: number = 100, maxProperties: number = +Infinity): any {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized as T;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key: string,\n  value: unknown,\n  depth: number = +Infinity,\n  maxProperties: number = +Infinity,\n  memo: MemoFunc = memoBuilder(),\n): Primitive | ObjOrArray<unknown> {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))\n  ) {\n    return value as Primitive;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value as ObjOrArray<unknown>)['__sentry_skip_normalization__']) {\n    return value as ObjOrArray<unknown>;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] as number)\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value as unknown & { toJSON?: () => unknown };\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) as ObjOrArray<unknown>;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value as ObjOrArray<unknown>);\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/**\n * @deprecated This export will be removed in v8.\n */\nexport { visit as walk };\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key: unknown,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value: Exclude<unknown, string | number | boolean | null>,\n): string {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value as { _events: unknown })._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value: unknown): string {\n  const prototype: Prototype | null = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/**\n * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint\n * across platforms and working directory.\n *\n * @param url The URL to be normalized.\n * @param basePath The application base path.\n * @returns The normalized URL.\n */\nexport function normalizeUrlToBase(url: string, basePath: string): string {\n  const escapedBase = basePath\n    // Backslash to forward\n    .replace(/\\\\/g, '/')\n    // Escape RegExp special characters\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\n  let newUrl = url;\n  try {\n    newUrl = decodeURI(url);\n  } catch (_Oo) {\n    // Sometime this breaks\n  }\n  return (\n    newUrl\n      .replace(/\\\\/g, '/')\n      .replace(/webpack:\\/?/g, '') // Remove intermediate base path\n      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')\n  );\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport type MemoFunc = [\n  // memoize\n  (obj: any) => boolean,\n  // unmemoize\n  (obj: any) => void,\n];\n\n/**\n * Helper to decycle json objects\n */\nexport function memoBuilder(): MemoFunc {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner: any = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj: any): boolean {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj: any): void {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n","/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { WrappedFunction } from '@sentry/types';\n\nimport { htmlTreeAsString } from './browser';\nimport { DEBUG_BUILD } from './debug-build';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive } from './is';\nimport { logger } from './logger';\nimport { truncate } from './string';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nexport function addNonEnumerableProperty(obj: object, name: string, value: unknown): void {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch (o_O) {\n    DEBUG_BUILD && logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nexport function markFunctionWrapped(wrapped: WrappedFunction, original: WrappedFunction): void {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch (o_O) {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nexport function getOriginalFunction(func: WrappedFunction): WrappedFunction | undefined {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nexport function convertToPlainObject<V>(\n  value: V,\n):\n  | {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    }\n  | {\n      [ownProps: string]: unknown;\n      message: string;\n      name: string;\n      stack?: string;\n    }\n  | V {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj: {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    } = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target: unknown): string {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj: unknown): { [key: string]: unknown } {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps: { [key: string]: unknown } = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj as Record<string, unknown>)[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nexport function extractExceptionKeysForMessage(exception: Record<string, unknown>, maxLength: number = 40): string {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nexport function dropUndefinedKeys<T>(inputValue: T): T {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map<unknown, unknown>();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys<T>(inputValue: T, memoizationMap: Map<unknown, unknown>): T {\n  if (isPojo(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: { [key: string]: any } = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue as T;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: unknown[] = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item: unknown) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue as unknown as T;\n  }\n\n  return inputValue;\n}\n\nfunction isPojo(input: unknown): input is Record<string, unknown> {\n  if (!isPlainObject(input)) {\n    return false;\n  }\n\n  try {\n    const name = (Object.getPrototypeOf(input) as { constructor: { name: string } }).constructor.name;\n    return !name || name === 'Object';\n  } catch {\n    return true;\n  }\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nexport function objectify(wat: unknown): typeof Object {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat as any).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n","/* eslint-disable deprecation/deprecation */\nimport type { Severity, SeverityLevel } from '@sentry/types';\n\n// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nexport const validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nexport function severityFromString(level: Severity | SeverityLevel | string): Severity {\n  return severityLevelFromString(level) as Severity;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nexport function severityLevelFromString(level: SeverityLevel | string): SeverityLevel {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') as SeverityLevel;\n}\n","import type { StackFrame, StackLineParser, StackParser } from '@sentry/types';\n\nimport type { GetModuleFn } from './node-stack-trace';\nimport { filenameIsInApp, node } from './node-stack-trace';\n\nexport { filenameIsInApp };\n\nconst STACKTRACE_FRAME_LIMIT = 50;\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nexport function createStackParser(...parsers: StackLineParser[]): StackParser {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack: string, skipFirst: number = 0): StackFrame[] => {\n    const frames: StackFrame[] = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirst; i < lines.length; i++) {\n      const line = lines[i];\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nexport function stackParserFromStackParserOptions(stackParser: StackParser | StackLineParser[]): StackParser {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nexport function stripSentryFramesAndReverse(stack: ReadonlyArray<StackFrame>): StackFrame[] {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the hub itself, making it:\n    //\n    //   Sentry.captureException()\n    //   getCurrentHub().captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || localStack[localStack.length - 1].filename,\n    function: frame.function || '?',\n  }));\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nexport function nodeStackLineParser(getModule?: GetModuleFn): StackLineParser {\n  return [90, node(getModule)];\n}\n","import { isRegExp, isString, isVueViewModel } from './is';\n\nexport { escapeStringForRegex } from './vendor/escapeStringForRegex';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nexport function isMatchingPattern(\n  value: string,\n  pattern: RegExp | string,\n  requireExactStringMatch: boolean = false,\n): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nexport function stringMatchesSomePattern(\n  testString: string,\n  patterns: Array<string | RegExp> = [],\n  requireExactStringMatch: boolean = false,\n): boolean {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n","import { DEBUG_BUILD } from './debug-build';\nimport { logger } from './logger';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\ndeclare const EdgeRuntime: string | undefined;\n\nexport { supportsHistory } from './vendor/supportsHistory';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      DEBUG_BUILD &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nconst enum States {\n  /** Pending */\n  PENDING = 0,\n  /** Resolved / OK */\n  RESOLVED = 1,\n  /** Rejected / Error */\n  REJECTED = 2,\n}\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\nexport function resolvedSyncPromise(): PromiseLike<void>;\nexport function resolvedSyncPromise<T>(value: T | PromiseLike<T>): PromiseLike<T>;\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nexport function resolvedSyncPromise<T>(value?: T | PromiseLike<T>): PromiseLike<T> {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nexport function rejectedSyncPromise<T = never>(reason?: any): PromiseLike<T> {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States;\n  private _handlers: Array<[boolean, (value: T) => void, (reason: any) => any]>;\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val as unknown as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value as unknown as any);\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n","import { GLOBAL_OBJ } from './worldwide';\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n *\n * TODO(v8): Return type should be rounded.\n */\nexport function dateTimestampInSeconds(): number {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc(): () => number {\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & { performance?: Performance };\n  if (!performance || !performance.now) {\n    return dateTimestampInSeconds;\n  }\n\n  // Some browser and environments don't have a timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  const approxStartingTimeOrigin = Date.now() - performance.now();\n  const timeOrigin = performance.timeOrigin == undefined ? approxStartingTimeOrigin : performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport const timestampInSeconds = createUnixTimestampInSecondsFunc();\n\n/**\n * Re-exported with an old name for backwards-compatibility.\n * TODO (v8): Remove this\n *\n * @deprecated Use `timestampInSeconds` instead.\n */\nexport const timestampWithMs = timestampInSeconds;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nexport let _browserPerformanceTimeOriginMode: string;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport const browserPerformanceTimeOrigin = ((): number | undefined => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n","import type { PropagationContext, TraceparentData } from '@sentry/types';\n\nimport { baggageHeaderToDynamicSamplingContext } from './baggage';\nimport { uuid4 } from './misc';\n\n// eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor -- RegExp is used for readability here\nexport const TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nexport function extractTraceparentData(traceparent?: string): TraceparentData | undefined {\n  if (!traceparent) {\n    return undefined;\n  }\n\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!matches) {\n    return undefined;\n  }\n\n  let parentSampled: boolean | undefined;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n/**\n * Create tracing context from incoming headers.\n *\n * @deprecated Use `propagationContextFromHeaders` instead.\n */\n// TODO(v8): Remove this function\nexport function tracingContextFromHeaders(\n  sentryTrace: Parameters<typeof extractTraceparentData>[0],\n  baggage: Parameters<typeof baggageHeaderToDynamicSamplingContext>[0],\n): {\n  traceparentData: ReturnType<typeof extractTraceparentData>;\n  dynamicSamplingContext: ReturnType<typeof baggageHeaderToDynamicSamplingContext>;\n  propagationContext: PropagationContext;\n} {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = baggageHeaderToDynamicSamplingContext(baggage);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  if (!traceparentData) {\n    return {\n      traceparentData,\n      dynamicSamplingContext: undefined,\n      propagationContext: {\n        traceId: traceId || uuid4(),\n        spanId: uuid4().substring(16),\n      },\n    };\n  } else {\n    return {\n      traceparentData,\n      dynamicSamplingContext: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n      propagationContext: {\n        traceId: traceId || uuid4(),\n        parentSpanId: parentSpanId || uuid4().substring(16),\n        spanId: uuid4().substring(16),\n        sampled: parentSampled,\n        dsc: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n      },\n    };\n  }\n}\n\n/**\n * Create a propagation context from incoming headers.\n */\nexport function propagationContextFromHeaders(\n  sentryTrace: string | undefined,\n  baggage: string | number | boolean | string[] | null | undefined,\n): PropagationContext {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = baggageHeaderToDynamicSamplingContext(baggage);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  if (!traceparentData) {\n    return {\n      traceId: traceId || uuid4(),\n      spanId: uuid4().substring(16),\n    };\n  } else {\n    return {\n      traceId: traceId || uuid4(),\n      parentSpanId: parentSpanId || uuid4().substring(16),\n      spanId: uuid4().substring(16),\n      sampled: parentSampled,\n      dsc: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n    };\n  }\n}\n\n/**\n * Create sentry-trace header from span context values.\n */\nexport function generateSentryTraceHeader(\n  traceId: string = uuid4(),\n  spanId: string = uuid4().substring(16),\n  sampled?: boolean,\n): string {\n  let sampledString = '';\n  if (sampled !== undefined) {\n    sampledString = sampled ? '-1' : '-0';\n  }\n  return `${traceId}-${spanId}${sampledString}`;\n}\n","type PartialURL = {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n  search?: string;\n  hash?: string;\n};\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url: string): PartialURL {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nexport function getNumberOfUrlSegments(url: string): number {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span description\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nexport function getSanitizedUrlString(url: PartialURL): string {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        // TODO: Use new URL global if it exists\n        .replace(/(:80)$/, '')\n        .replace(/(:443)$/, '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n","/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n *\n * Note: This file was originally called `global.ts`, but was changed to unblock users which might be doing\n * string replaces with bundlers like Vite for `global` (would break imports that rely on importing from utils/src/global).\n *\n * Why worldwide?\n *\n * Why not?\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { Integration } from '@sentry/types';\n\nimport type { SdkSource } from './env';\n\n/** Internal global with common properties and Sentry extensions  */\nexport interface InternalGlobal {\n  navigator?: { userAgent?: string };\n  console: Console;\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  onerror?: {\n    (event: object | string, source?: string, lineno?: number, colno?: number, error?: Error): any;\n    __SENTRY_INSTRUMENTED__?: true;\n    __SENTRY_LOADER__?: true;\n  };\n  onunhandledrejection?: {\n    (event: unknown): boolean;\n    __SENTRY_INSTRUMENTED__?: true;\n    __SENTRY_LOADER__?: true;\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  SENTRY_SDK_SOURCE?: SdkSource;\n  /**\n   * Debug IDs are indirectly injected by Sentry CLI or bundler plugins to directly reference a particular source map\n   * for resolving of a source file. The injected code will place an entry into the record for each loaded bundle/JS\n   * file.\n   */\n  _sentryDebugIds?: Record<string, string>;\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n    extensions?: {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n  /**\n   * Raw module metadata that is injected by bundler plugins.\n   *\n   * Keys are `error.stack` strings, values are the metadata.\n   */\n  _sentryModuleMetadata?: Record<string, any>;\n}\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj: { Math?: Math }): any | undefined {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nexport const GLOBAL_OBJ: InternalGlobal =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function (this: any) {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nexport function getGlobalObject<T>(): T & InternalGlobal {\n  return GLOBAL_OBJ as T & InternalGlobal;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nexport function getGlobalSingleton<T>(name: keyof InternalGlobal['__SENTRY__'], creator: () => T, obj?: unknown): T {\n  const gbl = (obj || GLOBAL_OBJ) as InternalGlobal;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const DEFAULT_MIN_BREAKPOINT = 'xs';\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS,\n  minBreakpoint: DEFAULT_MIN_BREAKPOINT\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  minBreakpoint = DEFAULT_MIN_BREAKPOINT,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: {\n      ...prefixes\n    },\n    breakpoints,\n    minBreakpoint,\n    dir\n  }), [prefixes, breakpoints, minBreakpoint, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useBootstrapMinBreakpoint() {\n  const {\n    minBreakpoint\n  } = useContext(ThemeContext);\n  return minBreakpoint;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent;\n  // If it's a functional component make sure we don't break it with a ref\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({\n    ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, {\n      ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__importDefault","exports","react_1","require","socket_client_1","Sentry","SentryIntegrations","material_1","icons_material_1","Prompt_1","Theme_1","Loader_1","Router_1","Utils_1","SaveCloseButtons_1","Confirm_1","i18n_1","Error_1","GenericApp","default","constructor","props","settings","_a","_b","ConnectionClass","Connection","window","document","getElementById","style","createElement","setAttribute","innerHTML","head","appendChild","isWeb","io","location","port","SocketClient","e","super","common","sentryStarted","sentryInited","resizeTimer","onSystemConfigChanged","id","obj","socket","systemLang","language","setLanguage","_systemConfig","expertMode","setState","getExpertMode","onReceiveMessage","message","data","newThemeName","getThemeName","setThemeName","newTheme","createTheme","theme","themeName","themeType","getThemeType","onThemeChange","onThemeChanged","onToggleExpertMode","console","debug","concat","JSON","stringify","onResize","clearTimeout","setTimeout","width","getWidth","query","search","replace","args","trim","split","filter","t","forEach","b","parts","length","instance","parseInt","slice","tmp","pathname","adapterName","instanceId","newReact","getLocation","tab","_localStorage","localStorage","getItem","themeInstance","state","assign","selectedTab","selectedTabNum","native","errorText","changed","connected","loaded","isConfigurationError","toast","bottomButtons","confirmClose","_alert","_alertType","_alertMessage","translations","en","de","ru","pt","nl","fr","it","es","pl","uk","keys","lang","setTranslations","savedNative","encryptedFields","sentryDSN","socketUrl","startsWith","protocol","hostname","alertDialogRendered","oldAlert","alert","toString","toLowerCase","includes","error","showAlert","log","name","doNotLoadAllObjects","onProgress","progress","PROGRESS","CONNECTING","READY","onReady","subscribeObject","then","getSystemConfig","_secret","secret","getObject","async","waitPromise","instanceObj","sentryEnabled","getState","val","diag","version","disableDataReporting","host","init","dsn","release","integrations","Dedupe","uuidObj","uuid","configureScope","scope","setUser","Promise","resolve","onPrepareLoad","encryptedNative","parse","onConnectionReady","warn","catch","onError","err","showError","type","renderAlertSnackbar","Snackbar","backgroundColor","open","autoHideDuration","onClose","_e","reason","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","SIZES","xs","sm","md","lg","xl","innerWidth","reverse","find","key","currentTheme","palette","mode","toggleTheme","sessionStorage","encrypt","i","String","fromCharCode","charCodeAt","decrypt","onHashChanged","selectTab","index","setItem","onPrepareSave","attr","push","getExtendableInstances","instances","getObjectViewSystem","values","webExtendable","getIpAddresses","ips","getHostByIp","ip4_0","ip","address","ip6_0","onSave","isClose","oldObj","_oldObj","a","setObject","reject","Error","globalThis","parent","postMessage","renderToast","anchorOrigin","vertical","horizontal","ContentProps","action","IconButton","color","className","classes","close","onClick","size","Close","$iframeDialog","renderError","text","getIsChanged","isChanged","onLoadConfig","newNative","setConfigurationError","renderSaveCloseButtons","Fragment","noTextOnButtons","title","ok","cancel","isYes","_updateNativeValue","attrs","shift","updateNativeValue","cb","showToast","renderHelperDialogs","render","_react","_interopRequireDefault","_client","_styles","_adapterReactV","_theme2","Utils","build","WidgetDemoApp","container","createRoot","StyledEngineProvider","injectFirst","ThemeProvider","_theme","ownKeys","r","getOwnPropertySymbols","apply","arguments","_defineProperty2","getOwnPropertyDescriptors","defineProperties","_objectSpread","Theme","danger","success","_GenericApp2","_callSuper","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","Boolean","valueOf","_GenericApp","_this","_classCallCheck2","extendedProps","_asyncToGenerator2","_regenerator","mark","_callee","wrap","_context","prev","next","i18n","stop","navigator","userLanguage","substring","_inherits2","_createClass2","Loader","height","overflow","renderWidget","A100","A200","A400","A700","black","white","originalFunctionToString","INTEGRATION_NAME","SETUP_CLIENTS","WeakMap","functionToStringIntegration","defineIntegration","_functionToStringIntegration","setupOnce","Function","originalFunction","getOriginalFunction","context","has","getClient","_len","Array","_key","setup","client","set","FunctionToString","convertIntegrationFnToClass","DEFAULT_IGNORE_ERRORS","DEFAULT_IGNORE_TRANSACTIONS","inboundFiltersIntegration","options","processEvent","event","_hint","clientOptions","getOptions","mergedOptions","internalOptions","allowUrls","denyUrls","ignoreErrors","disableErrorDefaults","ignoreTransactions","disableTransactionDefaults","ignoreInternal","_mergeOptions","exception","_isSentryError","DEBUG_BUILD","logger","getEventDescription","possibleMessages","lastException","_getPossibleEventMessages","some","stringMatchesSomePattern","_isIgnoredError","transaction","_isIgnoredTransaction","url","_getEventFilterUrl","_isDeniedUrl","_isAllowedUrl","_shouldDropEvent","InboundFilters","frames","stacktrace","frame","filename","_getLastValidUrl","oO","applyAggregateErrorsToEvent","exceptionFromErrorImplementation","parser","maxValueLimit","limit","hint","isInstanceOf","originalException","exceptions","maxValueLength","aggregateExceptionsFromError","map","truncate","prevExceptions","exceptionId","newExceptions","applyExceptionGroupFieldsForParentException","newException","newExceptionId","applyExceptionGroupFieldsForChildException","isArray","errors","childError","mechanism","handled","is_exception_group","exception_id","source","parentId","parent_id","parseStackFrames","stackParser","stack","exceptionFromError","linkedErrorsIntegration","preprocessEvent","LinkedErrors","Integrations","DSN_REGEX","dsnToString","withPassword","path","pass","projectId","publicKey","dsnFromString","str","match","exec","consoleSandbox","lastPath","join","pop","projectMatch","dsnFromComponents","components","makeDsn","from","component","isValidProtocol","isNaN","validateDsn","createEnvelope","headers","addItemToEnvelope","envelope","newItem","items","forEachEnvelopeItem","callback","envelopeItems","envelopeItem","encodeUTF8","input","textEncoder","TextEncoder","encode","serializeEnvelope","envHeaders","append","item","itemHeaders","payload","Uint8Array","stringifiedPayload","normalize","buffers","totalLength","reduce","acc","buf","merged","offset","buffer","concatBuffers","createAttachmentEnvelopeItem","attachment","dropUndefinedKeys","content_type","contentType","attachment_type","attachmentType","ITEM_TYPE_TO_DATA_CATEGORY_MAP","session","sessions","client_report","user_report","profile","replay_event","replay_recording","check_in","feedback","span","statsd","envelopeItemTypeToDataCategory","getSdkMetadataForEnvelopeHeader","metadataOrEvent","sdk","createEventEnvelopeHeaders","sdkInfo","tunnel","dynamicSamplingContext","sdkProcessingMetadata","event_id","sent_at","Date","toISOString","trace","filenameMetadataMap","Map","parsedStacks","Set","getMetadataForUrl","GLOBAL_OBJ","_sentryModuleMetadata","metadata","add","ensureMetadataStacksAreParsed","moduleMetadataIntegration","_moduleMetadataIntegration","on","module_metadata","_","stripMetadataFromStackFrames","addMetadataToStackFrames","ModuleMetadata","SEMANTIC_ATTRIBUTE_SENTRY_SOURCE","SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE","SEMANTIC_ATTRIBUTE_SENTRY_OP","SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN","SentryError","logLevel","setPrototypeOf","SENTRY_API_VERSION","getBaseApiEndpoint","getEnvelopeEndpointWithUrlEncodedAuth","tunnelOrOptions","_metadata","_getIngestEndpoint","urlEncode","sentry_key","sentry_version","sentry_client","_encodedAuth","createEventEnvelope","eventType","packages","enhanceEventWithSdkInfo","envelopeHeaders","sanitizeTagKey","tagValueReplacements","sanitizeTagValue","char","replacement","getCharOrReplacement","createMetricEnvelope","metricBucketItems","out","tagEntries","entries","tags","maybeTags","_ref","unit","metric","metricType","timestamp","serializeMetricBuckets","createMetricEnvelopeItem","ALREADY_SEEN_ERROR","BaseClient","_options","_integrations","_integrationsInitialized","_numProcessing","_outcomes","_hooks","_eventProcessors","_dsn","_transport","transport","recordDroppedEvent","bind","transportOptions","captureException","checkOrSetAlreadyCaught","eventId","_process","eventFromException","_captureEvent","captureMessage","level","eventMessage","isParameterizedString","promisedEvent","isPrimitive","eventFromMessage","captureEvent","capturedSpanScope","captureSession","sendSession","updateSession","getDsn","getSdkMetadata","getTransport","flush","timeout","metricsAggregator","_isClientDoneProcessing","clientFinished","transportFlushed","resolvedSyncPromise","enabled","getEventProcessors","addEventProcessor","eventProcessor","setupIntegrations","forceInitialize","_isEnabled","_setupIntegrations","getIntegrationById","integrationId","getIntegrationByName","integrationName","getIntegration","integration","_oO","addIntegration","isAlreadyInstalled","setupIntegration","afterSetupIntegrations","sendEvent","emit","env","attachments","promise","_sendEnvelope","sendResponse","toJSON","createSessionEnvelope","category","_event","sendClientReports","captureAggregateMetrics","metricsEnvelope","hook","rest","_updateSessionFromEvent","crashed","errored","ex","sessionNonTerminal","status","Number","SyncPromise","ticked","interval","setInterval","clearInterval","_prepareEvent","isolationScope","getIsolationScope","prepareEvent","evt","propagationContext","getPropagationContext","contexts","traceId","trace_id","spanId","parentSpanId","dsc","span_id","parent_span_id","getDynamicSamplingContextFromClient","_processEvent","finalEvent","sentryError","sampleRate","isTransaction","isTransactionEvent","isError","isErrorEvent","beforeSendLabel","Math","random","rejectedSyncPromise","dataCategory","capturedSpanIsolationScope","prepared","__sentry__","beforeSend","beforeSendTransaction","processBeforeSend","beforeSendResult","invalidValueError","isThenable","isPlainObject","_validateBeforeSendResult","processedEvent","getSession","transactionInfo","transaction_info","send","_clearOutcomes","outcomes","quantity","_oldOnErrorHandler","addGlobalErrorInstrumentationHandler","handler","addHandler","maybeInstrument","instrumentError","onerror","msg","line","column","handlerData","triggerHandlers","__SENTRY_LOADER__","__SENTRY_INSTRUMENTED__","_oldOnUnhandledRejectionHandler","addGlobalUnhandledRejectionInstrumentationHandler","instrumentUnhandledRejection","onunhandledrejection","getActiveTransaction","maybeHub","getCurrentHub","getScope","getTransaction","extractTraceparentData","extractTraceparentData$1","errorsInstrumented","errorCallback","activeTransaction","setStatus","tag","handleCallbackErrors","fn","maybePromiseResult","onFinally","res","maybeHandlePromiseRejection","hasTracingEnabled","maybeOptions","__SENTRY_TRACING__","enableTracing","afterFinish","hub","getCurrentScope","parentSpan","getSpan","spanContext","normalizeContext","activeSpan","createChildSpanOrTransaction","forceTransaction","setSpan","end","startSpan","runWithAsyncContext","withScope","onlyIfParent","spanToJSON","startSpanManual","finishAndSetSpan","isRecording","startInactiveSpan","getActiveSpan","temporaryScope","clone","continueTrace","sentryTrace","baggage","currentScope","traceparentData","tracingContextFromHeaders","setPropagationContext","transactionContext","_ref2","startChild","getDynamicSamplingContextFromSpan","sampled","spanIsSampled","startTransaction","parentSampled","addNonEnumerableProperty","ISOLATION_SCOPE_ON_START_SPAN_FIELD","SCOPE_ON_START_SPAN_FIELD","setCapturedScopesOnSpan","startTime","ctx","startTimestamp","spanTimeInputToSeconds","SPAN_METRIC_SUMMARY","getMetricStorageForSpan","getMetricSummaryJsonForSpan","storage","output","exportKey","summary","SpanStatus","getSpanStatusFromHttpCode","httpStatus","spanStatusfromHttpCode","setHttpStatus","setTag","setData","spanStatus","SpanRecorder","maxlen","_maxlen","spans","spanRecorder","Span","_traceId","uuid4","_spanId","_startTime","timestampInSeconds","instrumenter","_attributes","setAttributes","origin","op","attributes","_name","description","_parentSpanId","_sampled","_status","endTimestamp","_endTime","exclusiveTime","_exclusiveTime","_measurements","measurements","updateName","string","endTime","traceFlags","TRACE_FLAG_SAMPLED","TRACE_FLAG_NONE","childSpan","rootSpan","getRootSpan","opStr","nameStr","idStr","logMessage","_logMessage","setName","isSuccess","finish","toTraceparent","spanToTraceHeader","toContext","_getData","updateWithContext","getTraceContext","spanToTraceContext","getSpanJSON","start_timestamp","_metrics_summary","profile_id","exclusive_time","hasData","hasAttributes","Transaction","_contexts","_hub","_trimEnd","trimEnd","incomingDynamicSamplingContext","_frozenDynamicSamplingContext","newName","spanMetadata","initSpanRecorder","setContext","setMeasurement","setMetadata","newMetadata","timestampInS","_finishTransaction","getDynamicSamplingContext","setHub","getProfileId","finishedSpans","endTimes","current","TRACING_DEFAULTS","idleTimeout","finalTimeout","heartbeatInterval","IDLE_TRANSACTION_FINISH_REASONS","IdleTransactionSpanRecorder","_pushActivity","_popActivity","transactionSpanId","originalEnd","IdleTransaction","_idleHub","_idleTimeout","_finalTimeout","_heartbeatInterval","_onScope","delayAutoFinishUntilSignal","activities","_heartbeatCounter","_finished","_idleTimeoutCanceledPermanently","_beforeFinishCallbacks","_finishReason","_autoFinishAllowed","_restartIdleTimeout","endTimestampInS","spanStartedBeforeTransactionFinish","timeoutWithMarginOfError","spanEndedBeforeFinalTimeout","stringifiedSpan","registerBeforeFinishCallback","pushActivity","popActivity","_pingHeartbeat","cancelIdleTimeout","restartOnChildSpanChange","_idleTimeoutID","setFinishReason","sendAutoFinishSignal","_beat","heartbeatString","_prevHeartbeatString","sampleTransaction","samplingContext","tracesSampler","tracesSampleRate","isValidSampleRate","rate","traceHeaders","_startTransaction","customSamplingContext","configInstrumenter","transactionInstrumenter","_experiments","maxSpans","startIdleTransaction","onScope","addTracingExtensions","carrier","getMainCarrier","__SENTRY__","extensions","makePromiseBuffer","remove","task","splice","indexOf","$","taskProducer","drain","counter","capturedSetTimeout","DEFAULT_RETRY_AFTER","parseRetryAfterHeader","header","now","headerDelay","headerDate","isRateLimited","limits","all","disabledUntil","updateRateLimits","statusCode","updatedRateLimits","rateLimitHeader","retryAfterHeader","retryAfter","categories","namespaces","delay","DEFAULT_TRANSPORT_BUFFER_SIZE","createTransport","makeRequest","bufferSize","rateLimits","filteredEnvelopeItems","getEventForEnvelopeItem","filteredEnvelope","recordEnvelopeLoss","requestTask","body","response","__sentry__baseTransport__","eventFromEnvelope","types","makeMultiplexedTransport","matcher","fallbackTransport","otherTransports","validatedDsn","makeOverrideReleaseTransport","transports","getEvent","eventTypes","allTransports","every","COUNTER_METRIC_TYPE","GAUGE_METRIC_TYPE","SET_METRIC_TYPE","DISTRIBUTION_METRIC_TYPE","METRIC_MAP","_value","weight","_last","_min","_max","_sum","_count","first","s","rv","simpleHash","BrowserMetricsAggregator","_buckets","_interval","unsanitizedName","unsanitizedUnit","unsanitizedTags","maybeFloatTimestamp","floor","sanitizeTags","sanitizeUnit","bucketKey","stringifiedTags","sort","localeCompare","getBucketKey","bucketItem","previousWeight","sanitizedName","min","max","count","sum","updateMetricSummaryOnActiveSpan","metricBuckets","clear","metricsAggregatorIntegration","_metricsAggregatorIntegration","addToMetricsAggregator","environment","metricTags","metrics","increment","distribution","gauge","MetricsAggregator","parameterize","strings","formatted","raw","__sentry_template_string__","__sentry_template_values__","setCurrentClient","top","getStackTop","setClient","WINDOW","ignoreOnError","shouldIgnoreOnError","before","wrapper","__sentry_wrapped__","sentryWrapped","wrappedArguments","arg","addExceptionTypeValue","addExceptionMechanism","extra","property","markFunctionWrapped","__SENTRY_DEBUG__","extractMessage","eventFromError","popSize","framesToPop","reactMinifiedRegexp","test","getPopSize","attachStacktrace","eventFromUnknownInput","syntheticException","eventFromString","isUnhandledRejection","isDOMError","isDOMException","domException","code","isEvent","normalizeDepth","getNonErrorObjectExceptionValue","__serialized__","normalizeToSize","eventFromPlainObject","synthetic","logentry","params","extractExceptionKeysForMessage","captureType","getPrototypeOf","getObjectClassName","createUserFeedbackEnvelope","createUserFeedbackEnvelopeItem","BrowserClient","names","SDK_VERSION","applySdkMetadata","SENTRY_SDK_SOURCE","getSDKSource","visibilityState","_flushOutcomes","captureUserFeedback","platform","discarded_events","dateTimestampInSeconds","cachedFetchImpl","makeFetchTransport","nativeFetch","isNativeFetch","fetch","fetchImpl","sandbox","hidden","contentWindow","removeChild","getNativeFetchImplementation","pendingBodySize","pendingCount","request","requestSize","requestOptions","method","referrerPolicy","keepalive","fetchOptions","XHR_READYSTATE_DONE","makeXHRTransport","xhr","XMLHttpRequest","onreadystatechange","readyState","getResponseHeader","setRequestHeader","UNKNOWN_FUNCTION","createFrame","func","lineno","colno","function","in_app","chromeRegex","chromeEvalRegex","chromeStackLineParser","subMatch","extractSafariExtensionDetails","geckoREgex","geckoEvalRegex","geckoStackLineParser","winjsRegex","winjsStackLineParser","opera10Regex","opera10StackLineParser","opera11Regex","opera11StackLineParser","defaultStackLineParsers","defaultStackParser","createStackParser","isSafariExtension","isSafariWebExtension","getGlobalObject","lastHref","addHistoryInstrumentationHandler","instrumentHistory","chromeVar","chrome","isChromePackagedApp","app","runtime","hasHistoryApi","history","pushState","replaceState","supportsHistory","oldOnPopState","onpopstate","historyReplacementFunction","originalHistoryFunction","_len2","_key2","to","href","fill","DEBOUNCE_DURATION","debounceTimerID","lastCapturedEventType","lastCapturedEventTargetId","addClickKeypressInstrumentationHandler","instrumentDOM","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","target","proto","originalAddEventListener","listener","el","handlers","__sentry_instrumentation_handlers__","handlerForType","refCount","originalRemoveEventListener","globalListener","getEventTarget","tagName","isContentEditable","shouldSkipDOMEvent","_sentryId","isSimilarToLastCapturedEvent","global","MAX_ALLOWED_STRING_LENGTH","breadcrumbsIntegration","dom","sentry","addConsoleInstrumentationHandler","breadcrumb","severityLevelFromString","safeJoin","addBreadcrumb","_getConsoleBreadcrumbHandler","componentName","keyAttrs","serializeAttribute","maxStringLength","element","_isEvent","htmlTreeAsString","getComponentName","_getDomBreadcrumbHandler","addXhrInstrumentationHandler","sentryXhrData","SENTRY_XHR_DATA_KEY","status_code","_getXhrBreadcrumbHandler","addFetchInstrumentationHandler","fetchData","_getFetchBreadcrumbHandler","parsedLoc","parseUrl","parsedFrom","parsedTo","relative","_getHistoryBreadcrumbHandler","_getSentryBreadcrumbHandler","Breadcrumbs","dedupeIntegration","_dedupeIntegration","previousEvent","currentEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","_isSameMessageEvent","previousException","_getExceptionFromEvent","currentException","_isSameExceptionEvent","currentFrames","_getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","fingerprint","previousFingerprint","globalHandlersIntegration","stackTraceLimit","isString","ERROR_TYPES_RE","groups","_enhanceEventWithInitialFrame","_eventFromIncompleteOnError","_installGlobalOnErrorHandler","globalHandlerLog","detail","e2","_getUnhandledRejectionError","_installGlobalOnUnhandledRejectionHandler","GlobalHandlers","ev","ev0","ev0s","ev0sf","getLocationHref","httpContextIntegration","_httpContextIntegration","referrer","userAgent","Referer","HttpContext","DEFAULT_EVENT_TARGET","browserApiErrorsIntegration","eventTarget","requestAnimationFrame","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","_wrapEventTarget","TryCatch","original","originalCallback","getFunctionName","originalSend","prop","wrapOptions","globalObject","eventName","handleEvent","wrappedEventHandler","originalEventHandler","defaultIntegrations","getDefaultIntegrations","__SENTRY_RELEASE__","SENTRY_RELEASE","autoSessionTracking","stackParserFromStackParserOptions","getIntegrationsToSetup","supportsFetch","clientClass","enable","update","initialScope","initializeClient","initAndBind","startSession","ignoreDuration","startSessionTracking","showReportDialog","user","getUser","lastEventId","script","crossOrigin","src","dsnLike","dialogOptions","endpoint","encodedOptions","encodeURIComponent","email","getReportDialogEndpoint","onLoad","onload","reportDialogClosedMessageHandler","injectionPoint","forceLoad","wrap$1","_optionalChain","ops","lastAccessLHS","isBrowser","isNodeEnv","process","bindReporter","reportAllChanges","prevValue","delta","forceReport","getNavigationEntry","__WEB_VITALS_POLYFILL__","performance","getEntriesByType","getNavigationEntryFromPerformanceTiming","timing","navigation","navigationEntry","entryType","navigationStart","getActivationStart","navEntry","activationStart","initMetric","navigationType","prerendering","rating","observe","opts","PerformanceObserver","supportedEntryTypes","po","list","getEntries","buffered","onHidden","once","onHiddenOrPageHide","onCLS","onReport","report","sessionValue","sessionEntries","handleEntries","entry","hadRecentInput","firstSessionEntry","lastSessionEntry","stopListening","takeRecords","firstHiddenTime","getVisibilityWatcher","Infinity","timeStamp","onFID","visibilityWatcher","handleEntry","processingStart","disconnect","interactionCountEstimate","minKnownInteractionId","maxKnownInteractionId","updateEstimate","interactionId","initInteractionCountPolyfill","durationThreshold","getInteractionCountForNavigation","interactionCount","longestInteractionList","longestInteractionMap","processEntry","minLongestInteraction","existingInteraction","duration","latency","interaction","onINP","prevEntry","inp","estimateP98LongestInteraction","candidateInteractionIndex","reportedMetricIDs","onLCP","lastEntry","capture","whenReady","onTTFB","responseStart","instrumented","_previousCls","_previousFid","_previousLcp","_previousTtfb","_previousInp","addLcpInstrumentationHandler","addMetricObserver","instrumentLcp","addPerformanceInstrumentationHandler","instrumentPerformanceObserver","getCleanupCallback","typeHandlers","instrumentCls","instrumentFid","instrumentTtfb","instrumentInp","instrumentFn","previousValue","stopOnCallback","REPLAY_SESSION_KEY","REPLAY_EVENT_NAME","UNABLE_TO_SEND_REPLAY","DEFAULT_FLUSH_MIN_DELAY","DEFAULT_FLUSH_MAX_DELAY","NETWORK_BODY_MAX_SIZE","CONSOLE_ARG_MAX_SIZE","REPLAY_MAX_EVENT_BUFFER_SIZE","MIN_REPLAY_DURATION","MAX_REPLAY_DURATION","_optionalChain$5","NodeType$1","isShadowRoot","n","_2","shadowRoot","isNativeShadowDom","stringifyStylesheet","rules","cssRules","cssText","stringifyRule","rule","importStringified","isCSSImportRule","styleSheet","statement","layerName","supportsText","media","mediaText","escapeImportStatement","isCSSStyleRule","selectorText","cssStringified","regex","fixSafariColons","NodeType","Mirror","idNodeMap","nodeMetaMap","getId","_3","getMeta","_4","_5","rhsFn","lhs","getNode","getIds","removeNodeFromMap","delete","childNodes","childNode","hasNode","node","meta","oldNode","reset","shouldMaskInput","maskInputOptions","maskInputValue","isMasked","maskInputFn","repeat","toUpperCase","ORIGINAL_ATTRIBUTE_NAME","getInputType","hasAttribute","getInputValue","getAttribute","_id","tagNameRegex","RegExp","IGNORED_NODE","genId","canvasService","canvasCtx","URL_IN_CSS_REF","URL_PROTOCOL_MATCH","URL_WWW_MATCH","DATA_URI","absoluteToStylesheet","quote1","path1","quote2","path2","path3","filePath","maybeQuote","extractOrigin","part","SRCSET_NOT_SPACES","SRCSET_COMMAS_OR_SPACES","absoluteToDoc","doc","attributeValue","isSVGElement","ownerSVGElement","getHref","transformAttribute","maskAttributeFn","pos","collectCharacters","regEx","chars","descriptorsStr","inParens","c","charAt","getAbsoluteSrcsetString","ignoreAttribute","distanceToMatch","matchPredicate","distance","nodeType","ELEMENT_NODE","parentNode","createMatchPredicate","selector","matches","eIndex","classList","elementClassMatchesRegex","needMaskingText","maskTextClass","maskTextSelector","unmaskTextClass","unmaskTextSelector","maskAllText","parentElement","autocomplete","maskDistance","unmaskDistance","serializeNode","mirror","blockClass","blockSelector","unblockSelector","inlineStylesheet","maskTextFn","dataURLOptions","inlineImages","recordCanvas","keepIframeSrcFn","newlyAddedElement","rootId","docId","getRootId","DOCUMENT_NODE","compatMode","Document","DOCUMENT_TYPE_NODE","DocumentType","publicId","systemId","needBlock","contains","_isBlockedElement","HTMLFormElement","processedTagName","getValidTagName","len","stylesheet","styleSheets","rel","_cssText","sheet","innerText","textContent","checked","forceMask","selected","__context","canvas","getContext","x","y","getImageData","originalGetImageData","Uint32Array","pixel","is2DCanvasBlank","rr_dataURL","toDataURL","quality","canvasDataURL","blankCanvas","image","oldValue","recordInlineImage","naturalWidth","naturalHeight","drawImage","currentSrc","removeAttribute","complete","rr_mediaState","paused","rr_mediaCurrentTime","currentTime","scrollLeft","rr_scrollLeft","scrollTop","rr_scrollTop","getBoundingClientRect","class","rr_width","rr_height","contentDocument","rr_src","isCustomElement","customElements","Element","isSVG","isCustom","serializeElementNode","TEXT_NODE","parentTagName","isStyle","isScript","isTextarea","nextSibling","previousSibling","_6","_7","_8","textarea","Text","serializeTextNode","CDATA_SECTION_NODE","CDATA","COMMENT_NODE","Comment","lowerIfExists","maybeAttr","serializeNodeWithId","skipChild","slimDOMOptions","onSerialize","onIframeLoad","iframeLoadTimeout","onStylesheetLoad","stylesheetLoadTimeout","preserveWhiteSpace","_serializedNode","sn","comment","as","endsWith","headFavicon","headMetaDescKeywords","headMetaSocial","headMetaRobots","headMetaHttpEquiv","headMetaAuthorship","headMetaVerification","slimDOMExcluded","serializedNode","recordChild","isShadowHost","headWhitespace","bypassOptions","childN","serializedChildNode","isElement$1","isShadow","iframeEl","win","fired","timer","blankUrl","onceIframeLoaded","iframeDoc","serializedIframeNode","link","styleSheetLoadTimeout","styleSheetLoaded","onceStylesheetLoaded","serializedLinkNode","_optionalChain$4","passive","DEPARTED_MIRROR_ACCESS_WARNING","_mirror","throttle$1","wait","previous","_len3","_key3","leading","remaining","trailing","hookSetter","d","isRevoked","patch","wrapped","__rrweb_original__","Proxy","receiver","cachedRequestAnimationFrameImplementation","nowTimestamp","getWindowScroll","left","scrollingElement","pageXOffset","documentElement","pageYOffset","_9","_10","_11","_12","_13","_14","getWindowHeight","innerHeight","clientHeight","getWindowWidth","clientWidth","isBlocked","checkAncestors","blockedPredicate","isUnblocked","blockDistance","unblockDistance","isIgnored","isAncestorRemoved","legacy_isTouchEvent","changedTouches","isSerializedIframe","nodeName","isSerializedStylesheet","hasShadowRoot","_18","getTime","StyleSheetMirror","styleIDMap","idStyleMap","newId","getStyle","generateId","getShadowHost","shadowHost","_19","getRootNode","_20","_21","Node","DOCUMENT_FRAGMENT_NODE","shadowHostInDom","ownerDocument","rootShadowHost","getRootShadowHost","inDom","onRequestAnimationFrame","requestAnimationFrameImplementation","getRequestAnimationFrameImplementation","EventType","EventType2","IncrementalSource","IncrementalSource2","MouseInteractions","MouseInteractions2","PointerTypes","PointerTypes2","_optionalChain$3","_len5","_key5","isNodeInLinkedList","DoubleLinkedList","tail","position","addNode","__ln","removeNode","moveKey","MutationBuffer","frozen","locked","texts","removes","mapRemoves","movedMap","addedSet","movedSet","droppedSet","processMutations","mutations","processMutation","adds","addedIds","addList","getNextId","ns","nextId","pushAdd","currentN","iframeManager","addIframe","stylesheetManager","trackLinkElement","shadowDomManager","addShadowRoot","iframe","childSn","attachIframe","observeAttachShadow","attachLinkElement","isParentRemoved","isAncestorInSet","candidate","tailNode","_node","unhandledNode","attribute","diffAsStr","styleDiff","unchangedAsStr","_unchangedStyles","mutationCb","unattachedDoc","implementation","createHTMLDocument","attributeName","isInputMasked","old","pname","newValue","getPropertyValue","newPriority","getPropertyPriority","addedNodes","genAdds","removedNodes","nodeId","isSerialized","deepDelete","processedNodeManager","inOtherBuffer","targetId","freeze","canvasManager","unfreeze","isFrozen","lock","unlock","addsSet","_isParentRemoved","_isAncestorInSet","errorHandler","registerErrorHandler","unregisterErrorHandler","callbackWrapper","_optionalChain$2","_len6","_key6","mutationBuffers","composedPath","initMutationObserver","rootEl","mutationBuffer","mutationObserverCtor","MutationObserver","__rrMutationObserver","angularZoneSymbol","Zone","__symbol__","observer","onMutation","attributeOldValue","characterData","characterDataOldValue","childList","subtree","initMouseInteractionObserver","_ref4","mouseInteractionCb","sampling","mouseInteraction","disableMap","currentPointerType","eventKey","pointerType","thisEventKey","Mouse","Touch","Pen","MouseDown","MouseUp","Click","clientX","clientY","getHandler","PointerEvent","TouchStart","TouchEnd","h","initScrollObserver","_ref5","scrollCb","defaultView","scrollLeftTop","scroll","INPUT_TAGS","lastInputValueMap","initInputObserver","_ref8","inputCb","ignoreClass","ignoreSelector","userTriggeredOnInput","eventHandler","userTriggered","isTrusted","isChecked","cbWithDedup","querySelectorAll","lastInputValue","currentWindow","propertyDescriptor","HTMLInputElement","hookProperties","HTMLSelectElement","HTMLTextAreaElement","HTMLOptionElement","p","getNestedCSSRulePositions","childRule","hasNestedCSSRule","parentRule","CSSGroupingRule","CSSMediaRule","CSSSupportsRule","CSSConditionRule","unshift","parentStyleSheet","recurse","getIdAndStyleId","styleMirror","styleId","ownerNode","initAdoptedStyleSheetObserver","_ref13","hostId","patchTarget","ShadowRoot","originalPropertyDescriptor","sheets","_15","_16","adoptStyleSheets","initObservers","mutationObserver","mousemoveHandler","_ref3","mousemoveCb","mousemove","threshold","callbackThreshold","mousemoveCallback","timeBaseline","positions","wrappedCb","totalOffset","timeOffset","updatePosition","DragEvent","Drag","MouseEvent","MouseMove","TouchMove","initMoveObserver","mouseInteractionHandler","scrollHandler","viewportResizeHandler","_ref6","_ref7","viewportResizeCb","lastH","lastW","initViewportResizeObserver","inputHandler","mediaInteractionHandler","_ref16","mediaInteractionCb","volume","muted","playbackRate","initMediaInteractionObserver","styleSheetObserver","_ref9","_ref10","styleSheetRuleCb","CSSStyleSheet","insertRule","thisArg","argumentsList","deleteRule","replaceSync","supportedNestedCSSRuleTypes","canMonkeyPatchNestedCSSRule","unmodifiedFunctions","_ref11","typeKey","_ref12","initStyleSheetObserver","adoptedStyleSheetObserver","styleDeclarationObserver","_ref14","_ref15","styleDeclarationCb","ignoreCSSAttributes","setProperty","CSSStyleDeclaration","priority","_17","removeProperty","initStyleDeclarationObserver","fontObserver","collectFonts","_ref17","fontCb","fontMap","originalFontFace","FontFace","family","descriptors","fontFace","fontSource","restoreHandler","fonts","initFontObserver","selectionObserver","param","selectionCb","collapsed","updateSelection","selection","getSelection","isCollapsed","ranges","rangeCount","range","getRangeAt","startContainer","startOffset","endContainer","endOffset","start","initSelectionObserver","customElementObserver","_ref18","customElementCb","define","initCustomElementObserver","pluginHandlers","plugin","plugins","CrossOriginIframeMirror","generateIdFn","iframeIdToRemoteIdMap","iframeRemoteIdToIdMap","remoteId","idToRemoteMap","remoteToIdMap","idToRemoteIdMap","getIdToRemoteIdMap","remoteIdToIdMap","getRemoteIdToIdMap","getRemoteId","getRemoteIds","ids","_optionalChain$1","_len7","_key7","IframeManagerNoop","crossOriginIframeMirror","crossOriginIframeRootIdMap","addLoadListener","IframeManager","iframes","crossOriginIframeMap","wrappedEmit","recordCrossOriginIframes","crossOriginIframeStyleMirror","handleMessage","loadListener","isAttachIframe","adoptedStyleSheets","crossOriginMessageEvent","transformedEvent","transformCrossOriginEvent","isCheckout","FullSnapshot","replaceIdOnNode","patchRootIdOnNode","IncrementalSnapshot","Mutation","Meta","Load","DomContentLoaded","Plugin","Custom","replaceIds","ViewportResize","MediaInteraction","MouseInteraction","Scroll","CanvasMutation","Input","StyleSheetRule","StyleDeclaration","replaceStyleIds","Font","Selection","AdoptedStyleSheet","styles","iframeMirror","child","ShadowDomManagerNoop","ShadowDomManager","shadowDoms","WeakSet","restoreHandlers","patchAttachShadow","iframeElement","manager","option","CanvasManagerNoop","snapshot","StylesheetManager","trackedLinkElements","adoptedStyleSheetCb","linkEl","trackStylesheetInLinkElement","adoptedStyleSheetData","styleIds","CSSRule","ProcessedNodeManager","nodeMap","loop","periodicallyClear","thisBuffer","destroy","wrapEvent","eWithTime","_takeFullSnapshot","record","checkoutEveryNms","checkoutEveryNth","maskAllInputs","_maskInputOptions","_slimDOMOptions","maxCanvasSize","packFn","mousemoveWait","recordAfter","getCanvasManager","inEmittingFrame","passEmitsToParent","date","month","number","tel","time","week","select","radio","checkbox","lastFullSnapshotEvent","NodeList","DOMTokenList","_len4","_key4","TypeError","polyfill","incrementalSnapshotCount","exceedCount","exceedTime","takeFullSnapshot","wrappedMutationEmit","wrappedScrollEmit","wrappedCanvasMutationEmit","__RRWEB_EXCLUDE_IFRAME__","getMirror","nodeMirror","getCanvasManagerFn","_getCanvasManager","__RRWEB_EXCLUDE_SHADOW_DOM__","slimDOM","initialOffset","canvasMutationCb","CustomElement","ReplayEventTypeIncrementalSnapshot","timestampToMs","timestampToS","addBreadcrumbEvent","replay","triggerUserActivity","checkAndHandleExpiredSession","addUpdate","throttledAddEvent","INTERACTIVE_SELECTOR","getClosestInteractive","closest","getClickTargetNode","getTargetNode","isEventWithTarget","onWindowOpen","originalWindowOpen","_len8","_key8","ClickDetector","slowClickConfig","_addBreadcrumbEvent","_lastMutation","_lastScroll","_clicks","_timeout","_threshold","_scollTimeout","scrollTimeout","_replay","_ignoreSelector","addListeners","cleanupWindowOpen","nowInSeconds","_teardown","removeListeners","_checkClickTimeout","handleClick","SLOW_CLICK_TAGS","ignoreElement","isClickBreadcrumb","newClick","clickBreadcrumb","clickCount","click","abs","_scheduleCheckClicks","registerMutation","registerScroll","registerClick","_handleMultiClick","_getClicks","_checkClicks","timedOutClicks","mutationAfter","scrollAfter","_generateBreadcrumbs","hadScroll","hadMutation","isSlowClick","timeAfterClickMs","endReason","route","getCurrentRoute","updateClickDetectorForRecordingEvent","clickDetector","isIncrementalEvent","isIncrementalMouseInteraction","HTMLElement","createBreadcrumb","ATTRIBUTES_TO_RECORD","getAttributesToRecord","normalizedKey","handleDomListener","isEnabled","isClick","getDomTarget","getBaseDomBreadcrumb","handleDom","altKey","metaKey","ctrlKey","shiftKey","isElement","handleKeyboardEvent","updateUserActivity","isInputElement","hasModifierKey","isCharacterKey","baseBreadcrumb","getKeyboardBreadcrumb","ENTRY_TYPES","resource","initiatorType","responseEnd","decodedBodySize","encodedBodySize","responseStatus","transferSize","getAbsoluteTime","paint","domComplete","domContentLoadedEventStart","domContentLoadedEventEnd","domInteractive","loadEventStart","loadEventEnd","redirectCount","createPerformanceEntry","browserPerformanceTimeOrigin","timeOrigin","setupPerformanceObserver","addPerformanceEntry","performanceEntries","onEntries","_ref19","clearCallbacks","_ref20","replayPerformanceEntries","getLargestContentfulPaint","clearCallback","logInfo","shouldAddBreadcrumb","info","addLogBreadcrumb","logInfoNextTick","EventBufferSizeExceededError","EventBufferArray","events","_totalSize","hasCheckout","hasEvents","addEvent","eventSize","eventsRet","getEarliestTimestamp","WorkerHandler","worker","_worker","ensureReady","_ensureReadyPromise","_ref21","terminate","_getAndIncrementId","_ref22","EventBufferCompressionWorker","_earliestTimestamp","_sendEventToWorker","_finishRequest","EventBufferProxy","_fallback","_compression","_used","_ensureWorkerIsLoadedPromise","_ensureWorkerIsLoaded","ensureWorkerIsLoaded","_switchToCompressionWorker","addEventPromises","createEventBuffer","_ref23","useCompression","workerUrl","customWorkerUrl","Worker","__SENTRY_EXCLUDE_REPLAY_WORKER__","Blob","URL","createObjectURL","_getWorkerUrl","_loadWorker","hasSessionStorage","clearSession","removeItem","deleteSession","isSampled","makeSession","started","lastActivity","segmentId","previousSessionId","saveSession","createSession","_ref24","sessionSampleRate","allowBuffering","stickySession","getSessionSampleType","isExpired","initialTime","expiry","targetTime","isSessionExpired","_ref25","maxReplayDuration","sessionIdleExpire","shouldRefreshSession","_ref26","loadOrCreateSession","_ref27","sessionOptions","traceInternals","existingSession","sessionStringFromStorage","sessionObj","fetchSession","addEventSync","shouldAddEvent","_addEvent","eventBuffer","recordingMode","eventAfterPossibleCallback","isCustomEvent","maybeApplyCallback","beforeAddRecordingEvent","isPaused","timestampInMs","timeouts","sessionIdlePause","initialTimestamp","isFeedbackEvent","handleAfterSendEvent","enforceStatusCode","isBaseTransportSend","replayContext","traceIds","handleTransactionEvent","errorIds","replayId","beforeErrorSampling","sendBufferedReplayOrFlush","handleErrorEvent","handleBeforeSendEvent","exceptionValue","handleHydrationError","handleGlobalEventListener","afterSendHandler","isReplayEvent","breadcrumbs","replay_id","getSessionId","feedbackId","addFeedbackBreadcrumb","__rrweb__","isRrwebError","captureExceptions","isErrorEventSampled","errorSampleRate","shouldSampleForBufferEvent","createPerformanceSpans","_ref28","handleHistorySpanListener","handleHistory","urls","addNetworkBreadcrumb","isSentryRequestUrl","shouldFilterRequest","handleXhrSpanListener","handleXhr","getBodySize","URLSearchParams","FormData","formDataStr","_serializeFormData","ArrayBuffer","byteLength","parseContentLengthHeader","getBodyString","mergeWarning","warning","_meta","warnings","newMeta","existingWarnings","makeNetworkReplayBreadcrumb","buildSkippedNetworkRequestOrResponse","bodySize","buildNetworkRequestOrResponse","normalizedBody","exceedsSizeLimit","isProbablyJson","last","_strIsProbablyJson","truncatedBody","e3","normalizeNetworkBody","getAllowedHeaders","allowedHeaders","filteredHeaders","formData","urlMatches","fullUrl","baseURI","fixedUrl","getFullUrl","captureFetchBreadcrumbToReplay","request_body_size","requestBodySize","response_body_size","responseBodySize","captureDetails","networkDetailAllowUrls","networkDetailDenyUrls","_ref29","networkCaptureBodies","networkRequestHeaders","fetchArgs","getHeadersFromOptions","getRequestHeaders","requestBody","_getFetchRequestArgBody","bodyStr","_getRequestInfo","_ref30","networkResponseHeaders","getAllHeaders","bodyText","_tryCloneResponse","_getResponseText","txt","finally","_tryGetResponseText","_parseFetchResponseBody","_ref31","getResponseData","_getResponseInfo","_prepareFetchData","allHeaders","Headers","captureXhrBreadcrumbToReplay","xhrInfo","request_headers","getAllResponseHeaders","getResponseHeaders","requestWarning","responseBody","responseWarning","responseText","responseType","outerHTML","_parseXhrResponse","_getXhrResponseBody","_prepareXhrData","enrichXhrBreadcrumb","reqSize","resSize","_getBodySize","handleNetworkBreadcrumbs","_isXhrBreadcrumb","_isXhrHint","_isFetchBreadcrumb","_isFetchHint","enrichFetchBreadcrumb","beforeAddNetworkBreadcrumb","handleFetch","handleFetchSpanListener","_LAST_BREADCRUMB","handleScopeListener","newBreadcrumb","getLastBreadcrumb","isBreadcrumbWithCategory","isTruncated","normalizedArgs","normalizedArg","normalizeConsoleBreadcrumb","handleScope","hasHooks","createMemoryEntry","memoryEntry","jsHeapSizeLimit","totalJSHeapSize","usedJSHeapSize","memory","getHandleRecordingEmit","hadFirstEvent","_isCheckout","setInitialState","shouldRecordCanvas","isRecordingCanvas","useCompressionOption","blockAllMedia","networkDetailHasUrls","networkRequestHasHeaders","networkResponseHasHeaders","createOptionsEvent","addSettingsEvent","earliestEvent","sendReplayRequest","_ref34","recordingData","segment_id","eventContext","preparedRecordingData","_ref32","payloadWithSequence","replayHeaders","sequence","prepareRecordingData","baseEvent","replay_start_timestamp","error_ids","trace_ids","replay_type","replayEvent","_ref33","eventHint","preparedEvent","prepareReplayEvent","createReplayEnvelope","cause","TransportStatusCodeError","RateLimitError","sendReplay","replayData","retryConfig","_retryCount","THROTTLED","throttle","maxCount","durationSeconds","isThrottled","_cleanup","wasThrottled","ReplayContainer","_ref35","recordingOptions","__init","__init2","__init3","__init4","__init5","__init6","_lastActivity","_isPaused","_hasInitializedCoreListeners","initialUrl","_recordingOptions","_debouncedFlush","callbackReturnValue","timerId","maxTimerId","maxWait","invokeFunc","cancelTimers","debounced","debounce","_flush","flushMinDelay","flushMaxDelay","_throttledAddEvent","slowClickTimeout","slowClickIgnoreSelectors","_canvas","initializeSampling","_initializeSessionForSampling","_initializeRecording","_handleException","startBuffering","startRecording","canvasOptions","_stopRecording","_onMutationHandler","stopRecording","forceFlush","_removeListeners","force","pause","resume","_checkSession","continueRecording","flushImmediate","activityTime","hasStoppedRecording","_updateUserActivity","_updateSessionActivity","_maybeSaveSession","cbResult","conditionalFlush","cancelFlush","urlPath","hash","_clearContext","lastTransaction","_addListeners","currentSession","_refreshSession","_handleVisibilityChange","_handleWindowBlur","_handleWindowFocus","_handleKeyboardEvent","addScopeListener","feedbackEvent","includeReplay","addGlobalListeners","_performanceCleanupCallback","_doChangeToForegroundTasks","_doChangeToBackgroundTasks","_createCustomBreadcrumb","_addPerformanceEntries","_updateInitialTimestampFromEventBuffer","_popEventContext","_runFlush","addMemoryEntry","_this2","tooShort","minReplayDuration","tooLong","_flushLock","mutationLimit","overMutationLimit","mutationBreadcrumbLimit","getOption","selectors","defaultSelectors","deprecatedClassOption","deprecatedSelectorOption","allSelectors","MEDIA_SELECTORS","DEFAULT_NETWORK_HEADERS","_initialized","replayIntegration$1","Replay$1","__initStatic","mask","maskAttributes","unmask","block","unblock","ignore","maskFn","privacyOptions","_ref36","getPrivacyOptions","password","_ref37","maskAttribute","_initialOptions","_getMergedNetworkHeaders","_isInitialized","_setup","_initialize","getReplayId","_maybeLoadFromReplayCanvasIntegration","finalOptions","initialOptions","opt","replaysSessionSampleRate","replaysOnErrorSampleRate","loadReplayOptionsFromClient","canvasIntegration","getReplay$1","CanvasContext","CanvasContext2","lookup","canvasVarMap","saveWebGLVar","isInstanceOfWebGLObject","ctor","contextMap","variableListFor","serializeArg","Float32Array","Float64Array","Int32Array","Uint16Array","Int16Array","Int8Array","Uint8ClampedArray","rr_type","base64","arraybuffer","bytes","DataView","byteOffset","HTMLImageElement","HTMLCanvasElement","ImageData","serializeArgs","supportedWebGLConstructorNames","initCanvasContextObserver","setPreserveDrawingBufferToTrue","contextType","ctxName","getNormalizedContextName","contextAttributes","preserveDrawingBuffer","patchGLPrototype","getOwnPropertyNames","recordArgs","mutation","hookHandler","setter","CanvasManager","pendingCanvasMutations","resetObservers","rafStamps","latestId","invokeId","enableManualSnapshot","initCanvasMutationObserver","initCanvasFPSObserver","fps","canvasContextReset","rafId","takeSnapshot","cancelAnimationFrame","startRAFTimestamping","startPendingCanvasMutationFlusher","canvas2DReset","props2D","CanvasRenderingContext2D","initCanvas2DMutationObserver","canvasWebGL1and2Reset","WebGLRenderingContext","WebGL","WebGL2RenderingContext","WebGL2","initCanvasWebGLMutationObserver","canvasElement","isManualSnapshot","snapshotInProgressMap","onmessage","commands","timeBetweenSnapshots","lastSnapshotTime","takeCanvasSnapshots","matchedCanvas","getCanvas","getContextAttributes","COLOR_BUFFER_BIT","createImageBitmap","bitmap","flushPendingCanvasMutations","setLatestRAFTimestamp","flushPendingCanvasMutationFor","valuesWithType","CANVAS_QUALITY","low","medium","high","DEFAULT_MAX_CANVAS_SIZE","replayCanvasIntegration","maxCanvasWidth","maxCanvasHeight","_canvasOptions","canvasManagerResolve","_canvasManager","getCanvasManagerOptions","ReplayCanvas","LIGHT_BACKGROUND","INHERIT","SUBMIT_COLOR","LIGHT_THEME","fontFamily","fontSize","background","backgroundHover","foreground","border","borderRadius","boxShadow","submitBackground","submitBackgroundHover","submitBorder","submitOutlineFocus","submitForeground","submitForegroundHover","cancelBackground","cancelBackgroundHover","cancelBorder","cancelOutlineFocus","cancelForeground","cancelForegroundHover","inputBackground","inputForeground","inputBorder","inputOutlineFocus","formBorderRadius","formContentBorderRadius","DEFAULT_THEME","ACTOR_LABEL","CANCEL_BUTTON_LABEL","SUBMIT_BUTTON_LABEL","FORM_TITLE","EMAIL_PLACEHOLDER","EMAIL_LABEL","MESSAGE_PLACEHOLDER","MESSAGE_LABEL","NAME_PLACEHOLDER","NAME_LABEL","IS_REQUIRED_LABEL","SUCCESS_MESSAGE_TEXT","FEEDBACK_WIDGET_SOURCE","FEEDBACK_API_SOURCE","sendFeedbackRequest","contact_email","clearBreadcrumbs","setLevel","prepareFeedbackEvent","sendFeedback","mergeOptions","defaultOptions","optionOverrides","themeDark","themeLight","getThemedCssVariables","createShadowHost","colorScheme","shadow","attachShadow","themes","light","dark","createMainStyles","createDialogStyles","handleFeedbackSubmit","dialog","hideError","setAttributesNS","setAttributeNS","SIZE","XMLNS$2","children","createTextNode","Actor","buttonLabel","createElementNS","svg","viewBox","g","clipPath","speakerDefs","speakerClipPathDef","speakerRect","Icon","show","hide","retrieveStringValue","Form","nameLabel","namePlaceholder","emailLabel","emailPlaceholder","messageLabel","messagePlaceholder","isRequiredLabel","cancelButtonLabel","submitButtonLabel","showName","showEmail","isNameRequired","isEmailRequired","defaultName","defaultEmail","onCancel","onSubmit","submitEl","label","SubmitButton","errorEl","nameEl","required","placeholder","emailEl","messageEl","autoFocus","rows","cancelEl","formEl","preventDefault","htmlFor","XMLNS$1","Dialog","formTitle","showBranding","onClosed","textLabels","stopPropagation","transform","defs","Logo","checkIsOpen","WIDTH","HEIGHT","XMLNS","SuccessMessage","onRemove","SuccessIcon","createWidget","actor","shouldCreateActor","attachTo","isDialogOpen","_handleFeedbackSubmit","emptyField","removeDialog","successMessageText","timeoutId","showActor","showSuccessMessage","onSubmitSuccess","onSubmitError","handleOpenDialog","hideActor","openDialog","onFormOpen","userKey","useSentryUser","onFormClose","closeDialog","dialogEl","handleActorClick","removeActor","feedbackIntegration","Feedback","autoInject","_host","_shadow","_widget","_widgets","_hasInsertedActorStyles","_cleanupWidgetIfExists","_createWidget","_ensureShadowHost","targetEl","querySelector","widget","removeWidget","getWidget","existingFeedback","createActorStyles","needsAppendHost","dataset","sentryFeedbackColorscheme","registerBackgroundTabDetection","statusType","createSpanItem","isMeasurementValue","isFinite","_startChild","MAX_INT_AS_BYTES","msToSec","getBrowserPerformanceAPI","_lcpEntry","_clsEntry","_performanceCursor","startTrackingWebVitals","fidCallback","_trackFID","clsCallback","addClsInstrumentationHandler","lcpCallback","ttfbCallback","_trackTtfb","startTrackingLongTasks","startTrackingInteractions","startTrackingINP","interactionIdtoRouteNameMapping","interactionsSampleRate","inpCallback","interactionIdToRouteNameMapping","INP_ENTRY_MAP","interactionType","routeName","parentContext","userDisplay","ip_address","profileId","getSampleRate","createSpanEnvelope","_trackINP","pointerdown","pointerup","mousedown","mouseup","touchstart","touchend","mouseover","mouseout","mouseenter","mouseleave","pointerover","pointerout","pointerenter","pointerleave","dragstart","dragend","drag","dragenter","dragleave","dragover","drop","keydown","keyup","keypress","addPerformanceEntries","transactionStartTime","_addPerformanceNavigationTiming","requestStart","_addRequest","_addNavigationSpans","measureStartTimestamp","measureEndTimestamp","_addMeasureSpans","firstHidden","shouldRecord","resourceUrl","parsedUrl","setResourceEntrySizeData","renderBlockingStatus","_addResourceSpans","connection","effectiveType","rtt","deviceMemory","hardwareConcurrency","_trackNavigator","_addTtfbRequestTimeToMeasurements","measurementTimestamp","normalizedValue","fidMark","cls","measurementName","sources","_tagMetricInfo","eventEnd","dataKey","entryVal","instrumentFetchRequest","shouldCreateSpan","shouldAttachHeaders","spanOrigin","shouldCreateSpanResult","__span","contentLength","contentLengthNum","endSpan","getFullURL","requestSpan","sentryTraceHeader","generateSentryTraceHeader","sentryBaggageHeader","dynamicSamplingContextToSentryBaggageHeader","Request","newHeaders","BAGGAGE_HEADER_NAME","existingBaggageHeader","newBaggageHeaders","addTracingHeadersToFetchRequest","DEFAULT_TRACE_PROPAGATION_TARGETS","defaultRequestInstrumentationOptions","traceFetch","traceXHR","enableHTTPTimings","tracingOrigins","tracePropagationTargets","instrumentOutgoingRequests","shouldCreateSpanForRequest","shouldAttachHeadersWithTargets","createdSpan","addHTTPTimings","__sentry_own_request__","__sentry_xhr_span_id__","setHeaderOnXhr","xhrCallback","cleanup","nextHopProtocol","isPerformanceResourceTiming","spanData","resourceTiming","extractNetworkProtocol","timingSpanData","redirectStart","fetchStart","domainLookupStart","domainLookupEnd","connectStart","secureConnectionStart","connectEnd","resourceTimingEntryToSpanData","DEFAULT_BROWSER_TRACING_OPTIONS","markBackgroundTransactions","routingInstrumentation","customStartTransaction","startTransactionOnPageLoad","startTransactionOnLocationChange","startingUrl","enableLongTask","enableInp","BrowserTracing","_hasSetTracePropagationTargets","_collectWebVitals","_interactionIdToRouteNameMapping","enableInteractions","_latestRoute","_getCurrentHub","instrumentRouting","clientOptionsTracePropagationTargets","_createRouteTransaction","onStartRouteTransaction","_registerInteractionListener","_registerInpInteractionListener","beforeNavigate","isPageloadTransaction","expandedContext","getMetaContent","propagationContextFromHeaders","modifiedContext","finalContext","idleTransaction","inflightInteractionTransaction","registerInteractionTransaction","currentTransaction","getSource","isPerformanceEventTiming","minInteractionId","metaName","metaTag","getDomElement","sourceFromAttributes","sourceFromData","sourceFromMetadata","instrumentNavigation","instrumentPageLoad","markBackgroundSpan","browserTracingIntegration","latestRoute","beforeStartSpan","afterAllSetup","startBrowserTracingPageLoadSpan","startBrowserTracingNavigationSpan","registerInteractionListener","MAX_INTERACTIONS","registerInpInteractionListener","spanOptions","MIN_DELAY","START_DELAY","MAX_DELAY","makeOfflineTransport","store","createStore","flushTimer","retryDelay","shouldQueue","shouldStore","flushIn","found","unref","flushWithBackOff","insert","flushAtStartup","promisifyRequest","oncomplete","onsuccess","onabort","getAllKeys","createIndexedDbStore","getStore","dbName","storeName","indexedDB","onupgradeneeded","createObjectStore","dbp","db","objectStore","serialized","maxQueueSize","put","deserialized","textDecoder","readBinary","bin","subarray","readJson","decode","envelopeHeader","itemHeader","binaryLength","parseEnvelope","TextDecoder","makeBrowserOfflineTransport","makeIndexedDbOfflineTransport","MS_TO_NS","THREAD_ID_STRING","THREAD_NAME","OS_PLATFORM","OS_PLATFORM_VERSION","OS_ARCH","OS_BROWSER","OS_MODEL","OS_LOCALE","languages","userAgentData","enrichWithThreadInformation","isProcessedJSSelfProfile","EMPTY_STACK_ID","STACK_ID","samples","stacks","thread_metadata","adjustForOriginChange","jsSample","stackId","elapsed_since_start_ns","toFixed","stack_id","thread_id","stackTop","frameId","abs_path","resourceId","resources","sample","convertJSSelfProfileToSampledFormat","createProfilePayload","processed_profile","getTraceId","enrichedThreadProfile","transactionStartMs","transactionEndMs","DEFAULT_ENVIRONMENT","os","build_number","device","locale","model","manufacturer","architecture","is_emulator","debug_meta","images","applyDebugMetadata","transactions","active_thread_id","relative_start_ns","relative_end_ns","isAutomatedPageLoadTransaction","getHighEntropyValues","ua","platformVersion","fullVersionList","firstUa","brand","debugIdStackParserCache","resource_paths","debugIdMap","_sentryDebugIds","debugIdStackFramesCache","cachedDebugIdStackFrameCache","filenameDebugIdMap","debugIdStackTrace","parsedStack","cachedParsedStack","stackFrame","file","code_file","debug_id","PROFILING_CONSTRUCTOR_FAILED","MAX_PROFILE_DURATION_MS","shouldProfileTransaction","profilesSampleRate","createProfilingEvent","isValidProfile","PROFILE_MAP","takeProfileFromGlobalCache","onProfilingStartRouteTransaction","startProfileForTransaction","profiler","JSProfilerConstructor","Profiler","maxSamples","sampleInterval","maxBufferSize","startJSSelfProfile","onProfileHandler","maxDurationTimeoutID","addProfileToGlobalCache","browserProfilingIntegration","_browserProfilingIntegration","profiledTransactionEvents","j","findProfiledTransactionsFromEnvelope","profilesToAddToEnvelope","profiledTransaction","profileEvent","profiles","addProfilesToEnvelope","BrowserProfilingIntegration","windowIntegrations","INTEGRATIONS","getGlobalEventProcessors","getGlobalSingleton","addGlobalEventProcessor","notifyEventProcessors","processors","processor","final","parseEventHintOrCaptureContext","captureContext","setExtras","extras","setExtra","setTags","withIsolationScope","withActiveSpan","isInitialized","endSession","setSession","closeSession","_sendSessionUpdate","API_VERSION","parseFloat","DEFAULT_BREADCRUMBS","Hub","assignedScope","assignedIsolationScope","_version","Scope","_stack","bindClient","_isolationScope","isOlderThan","pushScope","getStack","popScope","_lastEventId","beforeBreadcrumb","maxBreadcrumbs","mergedBreadcrumb","finalBreadcrumb","run","oldHub","makeMain","_callExtensionMethod","shouldSendDefaultPii","sendDefaultPii","registry","getHubFromCarrier","setHubOnCarrier","acs","getGlobalHub","hasHubOnCarrier","installedIntegrations","userIntegrations","isDefaultInstance","arrayify","finalIntegrations","integrationsByName","currentInstance","existingInstance","filterDuplicates","debugIndex","arr","findIndex","debugInstance","integrationIndex","globalScope","_notifyingListeners","_scopeListeners","_breadcrumbs","_attachments","_user","_tags","_extra","_sdkProcessingMetadata","_propagationContext","generatePropagationContext","newScope","_level","_span","_session","_transactionName","_fingerprint","_requestSession","segment","username","_notifyScopeListeners","getRequestSession","setRequestSession","requestSession","setFingerprint","setTransactionName","scopeToMerge","scopeData","getScopeData","scopeContext","maxCrumbs","addAttachment","getAttachments","clearAttachments","eventProcessors","transactionName","applyToEvent","additionalEventProcessors","applyScopeDataToEvent","setSDKProcessingMetadata","newData","getGlobalScope","startingTime","sid","did","abnormal_mechanism","ipAddress","user_agent","sessionToJSON","public_key","user_segment","txn","v7FrozenDsc","maybeSampleRate","sample_rate","jsonSpan","cleanedExtra","cleanedTags","cleanedUser","cleanedContexts","applyDataToEvent","applySpanToEvent","applyFingerprintToEvent","mergedBreadcrumbs","applyBreadcrumbsToEvent","applySdkMetadataToEvent","mergeScopeData","mergeData","mergeAndOverwriteScopeData","mergeVal","hubOrClient","isHub","checkDsn","removeTrailingSlash","checkTunnel","normalizeMaxBreadth","dist","applyClientOptions","integrationNames","applyIntegrationsMetadata","applyDebugIds","finalScope","getFinalScope","clientEventProcessors","isolationData","finalScopeData","applyDebugMeta","depth","maxBreadth","normalized","normalizeEvent","hintIsScopeOrFunction","captureContextKeys","hintIsScopeContext","ensureTimestampInSeconds","spanIsSpanClass","captureConsoleIntegration","levels","CONSOLE_LEVELS","consoleHandler","CaptureConsole","contextLinesIntegration","contextLines","frameContextLines","htmlFilename","stripUrlQueryAndFragment","html","htmlLines","linesOfContext","addContextToFrame","applySourceContextToFrame","addSourceContext","ContextLines","debugIntegration","debugger","Debug","extraErrorDataIntegration","captureErrorCause","exceptionName","errorData","nativeKeys","extraErrorInfo","serializedError","_extractErrorData","normalizedErrorData","_enhanceEventWithErrorData","ExtraErrorData","httpClientIntegration","failedRequestStatusCodes","failedRequestTargets","supportsNativeFetch","requestInfo","requestInit","_shouldCaptureResponse","bodyUsed","_getRequest","requestHeaders","responseHeaders","requestCookies","responseCookies","_shouldSendDefaultPii","cookies","cookieHeader","_extractFetchHeaders","cookieString","_parseCookieString","_createEvent","_fetchResponseHandler","_wrapFetch","responseURL","_getXHRResponseHeaders","_xhrResponseHandler","HttpClient","_getResponseSizeFromHeaders","cookie","_isInGivenStatusRanges","givenRequestTarget","body_size","Offline","maxStoredEvents","offlineEventStore","localForage","_sendEvents","onLine","_cacheEvent","_enforceMaxEvents","_error","iterate","cacheKey","_index","_purgeEvents","_purgeEvent","cacheKeys","transactionIntegration","_getTransaction","module","reportingObserverIntegration","reports","details","plainBody","crashId","supportsReportingObserver","ReportingObserver","normalizeArray","allowAboveRoot","up","splitPathRe","splitPath","truncated","resolvedPath","resolvedAbsolute","rewriteFramesIntegration","root","prefix","iteratee","isWindowsFrame","startsWithSlash","base","fromParts","toParts","samePartsLength","outputParts","ext","f","basename","originalEvent","_processExceptionsEvent","RewriteFrames","sessionTimingIntegration","_sessionTimingIntegration","SessionTiming","SENTRY_BAGGAGE_KEY_PREFIX","SENTRY_BAGGAGE_KEY_PREFIX_REGEX","MAX_BAGGAGE_STRING_LENGTH","baggageHeaderToDynamicSamplingContext","baggageHeader","baggageObject","curr","currBaggageObject","baggageHeaderToObject","object","currentIndex","objectKey","objectValue","baggageEntry","newBaggageHeader","objectToBaggageHeader","dscKey","dscValue","keyOrValue","decodeURIComponent","DEFAULT_MAX_STRING_LENGTH","elem","currentElem","MAX_TRAVERSE_HEIGHT","separator","sepLength","nextStr","_htmlElementAsString","keyAttrPairs","keyAttr","keyAttrPair","allowedAttrs","isBrowserBundle","__SENTRY_BROWSER_BUNDLE__","instrumentConsole","originalConsoleMethod","originalConsoleMethods","instrumentFetch","originalFetch","getUrlFromResource","hasProp","parseFetchArgs","finishedHandlerData","erroredHandlerData","instrumentXHR","xhrproto","originalOpen","onreadystatechangeHandler","readyStateArgs","setRequestHeaderArgs","objectToString","wat","isBuiltin","Event","isRegExp","isSyntheticEvent","isVueViewModel","__isVue","_isVue","wrappedFuncs","wrappedLevels","disable","makeLogger","gbl","crypto","msCrypto","getRandomByte","randomUUID","getRandomValues","typedArray","getFirstException","firstException","newMechanism","currentMechanism","mergedData","lines","maxLines","sourceLine","pre_context","snipLine","context_line","post_context","__sentry_captured__","maybeArray","maxProperties","visit","ERROR","maxSize","encodeURI","utf8Length","memo","hasWeakSet","inner","memoBuilder","memoize","unmemoize","stringified","_events","objName","getConstructorName","stringifyValue","remainingDepth","valueWithToJSON","numAdded","visitable","convertToPlainObject","visitKey","visitValue","replacementFactory","o_O","__sentry_original__","getOwnProperties","newObj","serializeEventTarget","currentTarget","CustomEvent","extractedProps","maxLength","includedKeys","inputValue","_dropUndefinedKeys","memoizationMap","isPojo","memoVal","returnValue","validSeverityLevels","STACKTRACE_FRAME_LIMIT","WEBPACK_ERROR_REGEXP","STRIP_FRAME_REGEXP","parsers","sortedParsers","skipFirst","cleanedLine","localStack","stripSentryFramesAndReverse","defaultFunctionName","newLine","lineLength","delimiter","testString","requireExactStringMatch","pattern","isMatchingPattern","Response","EdgeRuntime","States","executor","_state","PENDING","_handlers","_resolve","_reject","onfulfilled","onrejected","_executeHandlers","onfinally","isRejected","_setResult","RESOLVED","REJECTED","cachedHandlers","ONE_SECOND_IN_MS","approxStartingTimeOrigin","createUnixTimestampInSecondsFunc","_browserPerformanceTimeOriginMode","performanceNow","dateNow","timeOriginDelta","timeOriginIsReliable","navigationStartDelta","TRACEPARENT_REGEXP","traceparent","sampledString","fragment","isGlobalObj","self","creator","u","l","_dereq_","scheduleDrain","draining","WebKitMutationObserver","called","nextTick","setImmediate","MessageChannel","scriptEl","channel","port1","port2","queue","oldQueue","immediate","INTERNAL","FULFILLED","resolver","outcome","safelyResolveThenable","QueueItem","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","getThen","thenable","onSuccess","tryToUnwrap","tryCatch","iterable","resolved","allResolver","resolveFromAll","outValue","race","_typeof","Symbol","iterator","_classCallCheck","Constructor","getIDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","idb","isIndexedDBValid","isSafari","openDatabase","hasFetch","IDBKeyRange","createBlob","properties","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","getBlob","Promise$1","executeCallback","executeTwoCallbacks","normalizeKey","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","_checkBlobSupportWithoutCaching","blob","matchedChrome","matchedEdge","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","_rejectReadiness","_getConnection","upgradeNeeded","createDbContext","dbArgs","openreq","oldVersion","newVersion","onversionchange","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","btoa","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_tryReconnect","forages","forage","createTransaction","retries","tx","_initStorage","ready","initPromises","_defaultConfig","req","openCursor","iterationNumber","cursor","blobSupport","advanced","openKeyCursor","advance","dropInstance","currentConfig","config","dbPromise","dropObjectPromise","deleteObjectStore","_forage2","dropDBPromise","deleteDatabase","onblocked","asyncStorage","_driver","_support","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","bufferToString","base64String","serialize","valueType","marker","fileReader","readAsArrayBuffer","deserialize","blobType","localforageSerializer","createDbTable","executeSql","_initStorage$1","dbInfoPromise","serializer","tryExecuteSql","sqlStatement","SYNTAX_ERR","results","getItem$1","iterate$1","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","setItem$1","removeItem$1","clear$1","length$1","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","operations","webSQLStorage","isLocalStorageValid","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","array","searchElement","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","LocalForage","driverTypeKey","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","driverObject","complianceError","driverMethods","driverMethodName","configureMissingMethods","methodNotImplementedFactory","methodName","_i","optionalDriverMethod","setDriverSupport","support","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance","localforage_js","_excluded","useButtonProps","disabled","role","tabIndex","isTrivialHref","onKeyDown","Button","React","ref","asProp","excluded","sourceKeys","_objectWithoutPropertiesLoose","buttonProps","Component","_jsx","displayName","DEFAULT_BREAKPOINTS","DEFAULT_MIN_BREAKPOINT","ThemeContext","prefixes","breakpoints","minBreakpoint","Consumer","Provider","useBootstrapPrefix","defaultPrefix","useContext","bsPrefix","variant","active","classNames","for","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","__self","__source","q","defaultProps","$$typeof","_owner","jsx","jsxs","ReferenceError","asyncGeneratorStep","gen","_next","_throw","done","toPropertyKey","_defineProperties","descriptor","protoProps","staticProps","_getPrototypeOf","__proto__","subClass","superClass","assertThisInitialized","_regeneratorRuntime","asyncIterator","toStringTag","Generator","Context","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","isGeneratorFunction","awrap","rval","handle","delegateYield","_setPrototypeOf","toPrimitive","regeneratorRuntime","accidentalStrictMode","hasOwn","appendClass","parseValue","newClass"],"sourceRoot":""}